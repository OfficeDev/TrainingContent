//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AadGraph;
(function (AadGraph) {
    (function (Extensions) {
        var ObservableBase = (function () {
            function ObservableBase() {
                this._changedListeners = [];
            }
            Object.defineProperty(ObservableBase.prototype, "changed", {
                get: function () {
                    return this._changed;
                },
                set: function (value) {
                    var _this = this;
                    this._changed = value;
                    this._changedListeners.forEach((function (value, index, array) {
                        try  {
                            value(_this);
                        } catch (e) {
                        }
                    }).bind(this));
                },
                enumerable: true,
                configurable: true
            });


            ObservableBase.prototype.addChangedListener = function (eventFn) {
                this._changedListeners.push(eventFn);
            };

            ObservableBase.prototype.removeChangedListener = function (eventFn) {
                var index = this._changedListeners.indexOf(eventFn);
                if (index >= 0) {
                    this._changedListeners.splice(index, 1);
                }
            };
            return ObservableBase;
        })();
        Extensions.ObservableBase = ObservableBase;

        var ObservableCollection = (function (_super) {
            __extends(ObservableCollection, _super);
            function ObservableCollection() {
                var items = [];
                for (var _i = 0; _i < (arguments.length - 0); _i++) {
                    items[_i] = arguments[_i + 0];
                }
                var _this = this;
                _super.call(this);
                this._changedListener = (function (changed) {
                    _this.changed = true;
                }).bind(this);
                this._array = items;
            }
            ObservableCollection.prototype.item = function (n) {
                return this._array[n];
            };

            /**
            * Removes the last element from an array and returns it.
            */
            ObservableCollection.prototype.pop = function () {
                this.changed = true;
                var result = this._array.pop();
                result.removeChangedListener(this._changedListener);
                return result;
            };

            /**
            * Removes the first element from an array and returns it.
            */
            ObservableCollection.prototype.shift = function () {
                this.changed = true;
                var result = this._array.shift();
                result.removeChangedListener(this._changedListener);
                return result;
            };

            /**
            * Appends new elements to an array, and returns the new length of the array.
            * @param items New elements of the Array.
            */
            ObservableCollection.prototype.push = function () {
                var _this = this;
                var items = [];
                for (var _i = 0; _i < (arguments.length - 0); _i++) {
                    items[_i] = arguments[_i + 0];
                }
                items.forEach((function (value, index, array) {
                    try  {
                        value.addChangedListener(_this._changedListener);
                        _this._array.push(value);
                    } catch (e) {
                    }
                }).bind(this));
                this.changed = true;
                return this._array.length;
            };

            /**
            * Removes elements from an array, returning the deleted elements.
            * @param start The zero-based location in the array from which to start removing elements.
            * @param deleteCount The number of elements to remove.
            * @param items Elements to insert into the array in place of the deleted elements.
            */
            ObservableCollection.prototype.splice = function (start, deleteCount) {
                var _this = this;
                var result = this._array.splice(start, deleteCount);
                result.forEach((function (value, index, array) {
                    try  {
                        value.removeChangedListener(_this._changedListener);
                    } catch (e) {
                    }
                }).bind(this));
                this.changed = true;
                return result;
            };

            /**
            * Inserts new elements at the start of an array.
            * @param items  Elements to insert at the start of the Array.
            */
            ObservableCollection.prototype.unshift = function () {
                var items = [];
                for (var _i = 0; _i < (arguments.length - 0); _i++) {
                    items[_i] = arguments[_i + 0];
                }
                for (var index = items.length - 1; index >= 0; index--) {
                    try  {
                        items[index].addChangedListener(this._changedListener);
                        this._array.unshift(items[index]);
                    } catch (e) {
                    }
                }
                this.changed = true;
                return this._array.length;
            };

            /**
            * Performs the specified action for each element in an array.
            * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.
            * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
            */
            ObservableCollection.prototype.forEach = function (callbackfn, thisArg) {
                this._array.forEach(callbackfn, thisArg);
            };

            /**
            * Calls a defined callback function on each element of an array, and returns an array that contains the results.
            * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.
            * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
            */
            ObservableCollection.prototype.map = function (callbackfn, thisArg) {
                return this._array.map(callbackfn, thisArg);
            };

            /**
            * Returns the elements of an array that meet the condition specified in a callback function.
            * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.
            * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
            */
            ObservableCollection.prototype.filter = function (callbackfn, thisArg) {
                return this._array.filter(callbackfn, thisArg);
            };

            /**
            * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
            * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
            */
            ObservableCollection.prototype.reduce = function (callbackfn, initialValue) {
                return this._array.reduce(callbackfn, initialValue);
            };

            /**
            * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.
            * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
            */
            ObservableCollection.prototype.reduceRight = function (callbackfn, initialValue) {
                return this._array.reduceRight(callbackfn, initialValue);
            };

            Object.defineProperty(ObservableCollection.prototype, "length", {
                /**
                * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.
                */
                get: function () {
                    return this._array.length;
                },
                enumerable: true,
                configurable: true
            });
            return ObservableCollection;
        })(ObservableBase);
        Extensions.ObservableCollection = ObservableCollection;

        var Request = (function () {
            function Request(requestUri) {
                this.requestUri = requestUri;
                this.headers = {};
                this.disableCache = false;
            }
            return Request;
        })();
        Extensions.Request = Request;

        var DataContext = (function () {
            function DataContext(serviceRootUri, extraQueryParameters, getAccessTokenFn) {
                this._noCache = Date.now();
                this.serviceRootUri = serviceRootUri;
                this.extraQueryParameters = extraQueryParameters;
                this._getAccessTokenFn = getAccessTokenFn;
            }
            Object.defineProperty(DataContext.prototype, "serviceRootUri", {
                get: function () {
                    return this._serviceRootUri;
                },
                set: function (value) {
                    if (value.lastIndexOf("/") === value.length - 1) {
                        value = value.substring(0, value.length - 1);
                    }

                    this._serviceRootUri = value;
                },
                enumerable: true,
                configurable: true
            });


            Object.defineProperty(DataContext.prototype, "extraQueryParameters", {
                get: function () {
                    return this._extraQueryParameters;
                },
                set: function (value) {
                    this._extraQueryParameters = value;
                },
                enumerable: true,
                configurable: true
            });


            Object.defineProperty(DataContext.prototype, "disableCache", {
                get: function () {
                    return this._disableCache;
                },
                set: function (value) {
                    this._disableCache = value;
                },
                enumerable: true,
                configurable: true
            });


            Object.defineProperty(DataContext.prototype, "disableCacheOverride", {
                get: function () {
                    return this._disableCacheOverride;
                },
                set: function (value) {
                    this._disableCacheOverride = value;
                },
                enumerable: true,
                configurable: true
            });


            DataContext.prototype.ajax = function (request) {
                var deferred = new Microsoft.Utility.Deferred();

                var xhr = new XMLHttpRequest();

                if (!request.method) {
                    request.method = 'GET';
                }

                xhr.open(request.method.toUpperCase(), request.requestUri, true);

                if (request.headers) {
                    for (name in request.headers) {
                        xhr.setRequestHeader(name, request.headers[name]);
                    }
                }

                xhr.onreadystatechange = function (e) {
                    if (xhr.readyState == 4) {
                        if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {
                            deferred.resolve(xhr.responseText);
                        } else {
                            deferred.reject(xhr);
                        }
                    } else {
                        deferred.notify(xhr.readyState);
                    }
                };

                if (request.data) {
                    if (typeof request.data === 'string') {
                        xhr.send(request.data);
                    } else {
                        xhr.send(JSON.stringify(request.data));
                    }
                } else {
                    xhr.send();
                }

                return deferred;
            };

            DataContext.prototype.read = function (path) {
                return this.request(new Request(this.serviceRootUri + ((this.serviceRootUri.lastIndexOf('/') != this.serviceRootUri.length - 1) ? '/' : '') + path));
            };

            DataContext.prototype.readUrl = function (url) {
                return this.request(new Request(url));
            };

            DataContext.prototype.request = function (request) {
                var _this = this;
                var deferred;

                this.augmentRequest(request);

                if (this._getAccessTokenFn) {
                    deferred = new Microsoft.Utility.Deferred();

                    this._getAccessTokenFn().then((function (token) {
                        request.headers["X-ClientService-ClientTag"] = 'Office 365 API Tools, 1.1.0512';
                        request.headers["Authorization"] = 'Bearer ' + token;
                        _this.ajax(request).then(deferred.resolve.bind(deferred), deferred.reject.bind(deferred));
                    }).bind(this), deferred.reject.bind(deferred));
                } else {
                    deferred = this.ajax(request);
                }

                return deferred;
            };

            DataContext.prototype.augmentRequest = function (request) {
                if (!request.headers) {
                    request.headers = {};
                }

                if (!request.headers['Accept']) {
                    request.headers['Accept'] = 'application/json';
                }

                if (!request.headers['Content-Type']) {
                    request.headers['Content-Type'] = 'application/json';
                }

                if (this.extraQueryParameters) {
                    request.requestUri += (request.requestUri.indexOf('?') >= 0 ? '&' : '?') + this.extraQueryParameters;
                }

                if ((!this._disableCacheOverride && request.disableCache) || (this._disableCacheOverride && this._disableCache)) {
                    request.requestUri += (request.requestUri.indexOf('?') >= 0 ? '&' : '?') + '_=' + this._noCache++;
                }
            };
            return DataContext;
        })();
        Extensions.DataContext = DataContext;

        var PagedCollection = (function () {
            function PagedCollection(context, path, resultFn, data) {
                this._context = context;
                this._path = path;
                this._resultFn = resultFn;
                this._data = data;
            }
            Object.defineProperty(PagedCollection.prototype, "path", {
                get: function () {
                    return this._path;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(PagedCollection.prototype, "context", {
                get: function () {
                    return this._context;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(PagedCollection.prototype, "currentPage", {
                get: function () {
                    return this._data;
                },
                enumerable: true,
                configurable: true
            });

            PagedCollection.prototype.getNextPage = function () {
                var _this = this;
                var deferred = new Microsoft.Utility.Deferred();

                if (this.path == null) {
                    deferred.resolve(null);
                    return deferred;
                }

                var request = new Request(this.path);

                request.disableCache = true;

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), nextLink = (parsedData['odata.nextLink'] === undefined) ? ((parsedData['@odata.nextLink'] === undefined) ? ((parsedData['__next'] === undefined) ? null : parsedData['__next']) : parsedData['@odata.nextLink']) : parsedData['odata.nextLink'];

                    deferred.resolve(new PagedCollection(_this.context, nextLink, _this._resultFn, _this._resultFn(_this.context, parsedData)));
                }).bind(this), deferred.reject.bind(deferred));

                return deferred;
            };
            return PagedCollection;
        })();
        Extensions.PagedCollection = PagedCollection;

        var CollectionQuery = (function () {
            function CollectionQuery(context, path, resultFn) {
                this._context = context;
                this._path = path;
                this._resultFn = resultFn;
            }
            Object.defineProperty(CollectionQuery.prototype, "path", {
                get: function () {
                    return this._path;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(CollectionQuery.prototype, "context", {
                get: function () {
                    return this._context;
                },
                enumerable: true,
                configurable: true
            });

            CollectionQuery.prototype.filter = function (filter) {
                this.addQuery("$filter=" + filter);
                return this;
            };

            CollectionQuery.prototype.select = function (selection) {
                if (typeof selection === 'string') {
                    this.addQuery("$select=" + selection);
                } else if (Array.isArray(selection)) {
                    this.addQuery("$select=" + selection.join(','));
                } else {
                    throw new Microsoft.Utility.Exception('\'select\' argument must be string or string[].');
                }
                return this;
            };

            CollectionQuery.prototype.expand = function (expand) {
                if (typeof expand === 'string') {
                    this.addQuery("$expand=" + expand);
                } else if (Array.isArray(expand)) {
                    this.addQuery("$expand=" + expand.join(','));
                } else {
                    throw new Microsoft.Utility.Exception('\'expand\' argument must be string or string[].');
                }
                return this;
            };

            CollectionQuery.prototype.orderBy = function (orderBy) {
                if (typeof orderBy === 'string') {
                    this.addQuery("$orderby=" + orderBy);
                } else if (Array.isArray(orderBy)) {
                    this.addQuery("$orderby=" + orderBy.join(','));
                } else {
                    throw new Microsoft.Utility.Exception('\'orderBy\' argument must be string or string[].');
                }
                return this;
            };

            CollectionQuery.prototype.top = function (top) {
                this.addQuery("$top=" + top);
                return this;
            };

            CollectionQuery.prototype.skip = function (skip) {
                this.addQuery("$skip=" + skip);
                return this;
            };

            CollectionQuery.prototype.addQuery = function (query) {
                this._query = (this._query ? this._query + "&" : "") + query;
                return this;
            };

            Object.defineProperty(CollectionQuery.prototype, "query", {
                get: function () {
                    return this._query;
                },
                set: function (value) {
                    this._query = value;
                },
                enumerable: true,
                configurable: true
            });


            CollectionQuery.prototype.fetch = function () {
                var path = this.path + (this._query ? (this.path.indexOf('?') < 0 ? '?' : '&') + this._query : "");

                return new Extensions.PagedCollection(this.context, path, this._resultFn).getNextPage();
            };

            CollectionQuery.prototype.fetchAll = function (maxItems) {
                var path = this.path + (this._query ? (this.path.indexOf('?') < 0 ? '?' : '&') + this._query : ""), pagedItems = new Extensions.PagedCollection(this.context, path, this._resultFn), accumulator = [], deferred = new Microsoft.Utility.Deferred(), recursive = function (nextPagedItems) {
                    if (!nextPagedItems) {
                        deferred.resolve(accumulator);
                    } else {
                        accumulator = accumulator.concat(nextPagedItems.currentPage);

                        if (accumulator.length > maxItems) {
                            accumulator = accumulator.splice(maxItems);
                            deferred.resolve(accumulator);
                        } else {
                            nextPagedItems.getNextPage().then(function (nextPage) {
                                return recursive(nextPage);
                            }, deferred.reject.bind(deferred));
                        }
                    }
                };

                pagedItems.getNextPage().then(function (nextPage) {
                    return recursive(nextPage);
                }, deferred.reject.bind(deferred));

                return deferred;
            };
            return CollectionQuery;
        })();
        Extensions.CollectionQuery = CollectionQuery;

        var QueryableSet = (function () {
            function QueryableSet(context, path, entity) {
                this._context = context;
                this._path = path;
                this._entity = entity;
            }
            Object.defineProperty(QueryableSet.prototype, "context", {
                get: function () {
                    return this._context;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(QueryableSet.prototype, "entity", {
                get: function () {
                    return this._entity;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(QueryableSet.prototype, "path", {
                get: function () {
                    return this._path;
                },
                enumerable: true,
                configurable: true
            });

            QueryableSet.prototype.getPath = function (prop) {
                return this._path + '/' + prop;
            };
            return QueryableSet;
        })();
        Extensions.QueryableSet = QueryableSet;

        var RestShallowObjectFetcher = (function () {
            function RestShallowObjectFetcher(context, path) {
                this._path = path;
                this._context = context;
            }
            Object.defineProperty(RestShallowObjectFetcher.prototype, "context", {
                get: function () {
                    return this._context;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(RestShallowObjectFetcher.prototype, "path", {
                get: function () {
                    return this._path;
                },
                enumerable: true,
                configurable: true
            });

            RestShallowObjectFetcher.prototype.getPath = function (prop) {
                return this._path + '/' + prop;
            };
            return RestShallowObjectFetcher;
        })();
        Extensions.RestShallowObjectFetcher = RestShallowObjectFetcher;

        var ComplexTypeBase = (function (_super) {
            __extends(ComplexTypeBase, _super);
            function ComplexTypeBase() {
                _super.call(this);
            }
            return ComplexTypeBase;
        })(ObservableBase);
        Extensions.ComplexTypeBase = ComplexTypeBase;

        var EntityBase = (function (_super) {
            __extends(EntityBase, _super);
            function EntityBase(context, path) {
                _super.call(this);
                this._path = path;
                this._context = context;
            }
            Object.defineProperty(EntityBase.prototype, "context", {
                get: function () {
                    return this._context;
                },
                enumerable: true,
                configurable: true
            });

            Object.defineProperty(EntityBase.prototype, "path", {
                get: function () {
                    return this._path;
                },
                enumerable: true,
                configurable: true
            });

            EntityBase.prototype.getPath = function (prop) {
                return this._path + '/' + prop;
            };
            return EntityBase;
        })(ObservableBase);
        Extensions.EntityBase = EntityBase;

        /*
        std
        */
        function isUndefined(v) {
            return typeof v === 'undefined';
        }
        Extensions.isUndefined = isUndefined;
    })(AadGraph.Extensions || (AadGraph.Extensions = {}));
    var Extensions = AadGraph.Extensions;
})(AadGraph || (AadGraph = {}));

var AadGraph;
(function (AadGraph) {
    /// <summary>
    /// There are no comments for DirectoryDataService in the schema.
    /// </summary>
    var Client = (function () {
        function Client(serviceRootUri, getAccessTokenFn) {
            this._context = new AadGraph.Extensions.DataContext(serviceRootUri, "api-version=2013-11-08", getAccessTokenFn);
            //UNDONE
            //Context.UrlConventions = Microsoft.OData.Client.DataServiceUrlConventions.KeyAsSegment;
        }
        Object.defineProperty(Client.prototype, "context", {
            get: function () {
                return this._context;
            },
            enumerable: true,
            configurable: true
        });

        Client.prototype.getPath = function (prop) {
            return this.context.serviceRootUri + '/' + prop;
        };

        Object.defineProperty(Client.prototype, "applicationRefs", {
            get: function () {
                if (this._applicationRefs === undefined) {
                    this._applicationRefs = new ApplicationRefs(this.context, this.getPath('applicationRefs'));
                }
                return this._applicationRefs;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "directoryObjects", {
            get: function () {
                if (this._directoryObjects === undefined) {
                    this._directoryObjects = new DirectoryObjects(this.context, this.getPath('directoryObjects'));
                }
                return this._directoryObjects;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "enabledFeatures", {
            get: function () {
                if (this._enabledFeatures === undefined) {
                    this._enabledFeatures = new EnabledFeatures(this.context, this.getPath('enabledFeatures'));
                }
                return this._enabledFeatures;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "loginTenantBranding", {
            get: function () {
                if (this._loginTenantBranding === undefined) {
                    this._loginTenantBranding = new LoginTenantBrandings(this.context, this.getPath('loginTenantBranding'));
                }
                return this._loginTenantBranding;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "impersonationAccessGrants", {
            get: function () {
                if (this._impersonationAccessGrants === undefined) {
                    this._impersonationAccessGrants = new ImpersonationAccessGrants(this.context, this.getPath('impersonationAccessGrants'));
                }
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "subscribedSkus", {
            get: function () {
                if (this._subscribedSkus === undefined) {
                    this._subscribedSkus = new SubscribedSkus(this.context, this.getPath('subscribedSkus'));
                }
                return this._subscribedSkus;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Client.prototype, "softDeletedDirectoryObjects", {
            get: function () {
                if (this._softDeletedDirectoryObjects === undefined) {
                    this._softDeletedDirectoryObjects = new DirectoryObjects(this.context, this.getPath('softDeletedDirectoryObjects'));
                }
                return this._softDeletedDirectoryObjects;
            },
            enumerable: true,
            configurable: true
        });

        Client.prototype.activateService = function (serviceTypeName) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("activateService"));

            request.method = 'POST';
            request.data = JSON.stringify({ "serviceTypeName": serviceTypeName });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        // BUGBUG:  getObjectsByObjectIds has invalid return type = DirectoryObject!
        // BUGBUG:  getServicePrincipalsByAppIds has invalid return type = DirectoryObject!
        Client.prototype.isMemberOf = function (groupId, memberId) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("isMemberOf"));

            request.method = 'POST';
            request.data = JSON.stringify({ "groupId": groupId, "memberId": memberId });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        Client.prototype.consentToApp = function (clientAppId, onBehalfOfAll, tags, checkOnly) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("consentToApp"));

            request.method = 'POST';
            request.data = JSON.stringify({ "clientAppId": clientAppId, "onBehalfOfAll": onBehalfOfAll, "tags": tags, "checkOnly": checkOnly });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Client.prototype.revokeUserConsentToApp = function (clientAppId) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("revokeUserConsentToApp"));

            request.method = 'POST';
            request.data = JSON.stringify({ "clientAppId": clientAppId });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };
        return Client;
    })();
    AadGraph.Client = Client;

    /// <summary>
    /// There are no comments for DirectoryObject in the schema.
    /// </summary>
    var DirectoryObjectFetcher = (function (_super) {
        __extends(DirectoryObjectFetcher, _super);
        function DirectoryObjectFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(DirectoryObjectFetcher.prototype, "createdOnBehalfOf", {
            /// <summary>
            /// There are no comments for Query Property createdOnBehalfOf in the schema.
            /// </summary>
            get: function () {
                if (this._createdOnBehalfOf === undefined) {
                    this._createdOnBehalfOf = new DirectoryObjectFetcher(this.context, this.getPath("createdOnBehalfOf"));
                }
                return this._createdOnBehalfOf;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObjectFetcher.prototype.update_createdOnBehalfOf = function (value) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("$links/createdOnBehalfOf"));

            request.method = 'PUT';
            request.data = JSON.stringify({ url: value.path });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Object.defineProperty(DirectoryObjectFetcher.prototype, "createdObjects", {
            /// <summary>
            /// There are no comments for Query Property createdObjects in the schema.
            /// </summary>
            get: function () {
                if (this._createdObjects === undefined) {
                    this._createdObjects = new DirectoryObjects(this.context, this.getPath("createdObjects"));
                }
                return this._createdObjects;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObjectFetcher.prototype, "manager", {
            /// <summary>
            /// There are no comments for Query Property manager in the schema.
            /// </summary>
            get: function () {
                if (this._manager === undefined) {
                    this._manager = new DirectoryObjectFetcher(this.context, this.getPath("manager"));
                }
                return this._manager;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObjectFetcher.prototype.update_manager = function (value) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("$links/manager"));

            request.method = 'PUT';
            request.data = JSON.stringify({ url: value.path });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Object.defineProperty(DirectoryObjectFetcher.prototype, "directReports", {
            /// <summary>
            /// There are no comments for Query Property directReports in the schema.
            /// </summary>
            get: function () {
                if (this._directReports === undefined) {
                    this._directReports = new DirectoryObjects(this.context, this.getPath("directReports"));
                }
                return this._directReports;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObjectFetcher.prototype, "members", {
            /// <summary>
            /// There are no comments for Query Property members in the schema.
            /// </summary>
            get: function () {
                if (this._members === undefined) {
                    this._members = new DirectoryObjects(this.context, this.getPath("members"));
                }
                return this._members;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObjectFetcher.prototype, "memberOf", {
            /// <summary>
            /// There are no comments for Query Property memberOf in the schema.
            /// </summary>
            get: function () {
                if (this._memberOf === undefined) {
                    this._memberOf = new DirectoryObjects(this.context, this.getPath("memberOf"));
                }
                return this._memberOf;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObjectFetcher.prototype, "owners", {
            /// <summary>
            /// There are no comments for Query Property owners in the schema.
            /// </summary>
            get: function () {
                if (this._owners === undefined) {
                    this._owners = new DirectoryObjects(this.context, this.getPath("owners"));
                }
                return this._owners;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObjectFetcher.prototype, "ownedObjects", {
            /// <summary>
            /// There are no comments for Query Property ownedObjects in the schema.
            /// </summary>
            get: function () {
                if (this._ownedObjects === undefined) {
                    this._ownedObjects = new DirectoryObjects(this.context, this.getPath("ownedObjects"));
                }
                return this._ownedObjects;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObjectFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directoryObjects' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectoryObject.parseDirectoryObject(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObjectFetcher.prototype.checkMemberGroups = function (groupIds) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("checkMemberGroups"));

            request.method = 'POST';
            request.data = JSON.stringify({ "groupIds": groupIds });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData.value);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObjectFetcher.prototype.getMemberGroups = function (securityEnabledOnly) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("getMemberGroups"));

            request.method = 'POST';
            request.data = JSON.stringify({ "securityEnabledOnly": securityEnabledOnly });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData.value);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return DirectoryObjectFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.DirectoryObjectFetcher = DirectoryObjectFetcher;

    /// <summary>
    /// There are no comments for DirectoryObject in the schema.
    /// </summary>
    var DirectoryObject = (function (_super) {
        __extends(DirectoryObject, _super);
        function DirectoryObject(context, path, data) {
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.DirectoryObject';
            this._objectTypeChanged = false;
            this._objectIdChanged = false;
            this._softDeletionTimestampChanged = false;

            if (!data) {
                return;
            }

            this._objectType = data.objectType;
            this._objectId = data.objectId;
            this._softDeletionTimestamp = (data.softDeletionTimestamp !== null) ? new Date(data.softDeletionTimestamp) : null;
        }
        Object.defineProperty(DirectoryObject.prototype, "objectType", {
            /// <summary>
            /// There are no comments for Property objectType in the schema.
            /// </summary>
            get: function () {
                return this._objectType;
            },
            set: function (value) {
                if (value !== this._objectType) {
                    this._objectTypeChanged = true;
                    this.changed = true;
                }
                this._objectType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryObject.prototype, "objectTypeChanged", {
            get: function () {
                return this._objectTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "objectId", {
            /// <summary>
            /// There are no comments for Property objectId in the schema.
            /// </summary>
            get: function () {
                return this._objectId;
            },
            set: function (value) {
                if (value !== this._objectId) {
                    this._objectIdChanged = true;
                    this.changed = true;
                }
                this._objectId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryObject.prototype, "objectIdChanged", {
            get: function () {
                return this._objectIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "softDeletionTimestamp", {
            /// <summary>
            /// There are no comments for Property softDeletionTimestamp in the schema.
            /// </summary>
            get: function () {
                return this._softDeletionTimestamp;
            },
            set: function (value) {
                if (value !== this._softDeletionTimestamp) {
                    this._softDeletionTimestampChanged = true;
                    this.changed = true;
                }
                this._softDeletionTimestamp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryObject.prototype, "softDeletionTimestampChanged", {
            get: function () {
                return this._softDeletionTimestampChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "createdOnBehalfOf", {
            /// <summary>
            /// There are no comments for Query Property createdOnBehalfOf in the schema.
            /// </summary>
            get: function () {
                if (this._createdOnBehalfOf === undefined) {
                    this._createdOnBehalfOf = new DirectoryObjectFetcher(this.context, this.getPath("createdOnBehalfOf"));
                }
                return this._createdOnBehalfOf;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObject.prototype.update_createdOnBehalfOf = function (value) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("$links/createdOnBehalfOf"));

            request.method = 'PUT';
            request.data = JSON.stringify({ url: value.path });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Object.defineProperty(DirectoryObject.prototype, "createdObjects", {
            /// <summary>
            /// There are no comments for Query Property createdObjects in the schema.
            /// </summary>
            get: function () {
                if (this._createdObjects === undefined) {
                    this._createdObjects = new DirectoryObjects(this.context, this.getPath("createdObjects"));
                }
                return this._createdObjects;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "manager", {
            /// <summary>
            /// There are no comments for Query Property manager in the schema.
            /// </summary>
            get: function () {
                if (this._manager === undefined) {
                    this._manager = new DirectoryObjectFetcher(this.context, this.getPath("manager"));
                }
                return this._manager;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObject.prototype.update_manager = function (value) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("$links/manager"));

            request.method = 'PUT';
            request.data = JSON.stringify({ url: value.path });

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Object.defineProperty(DirectoryObject.prototype, "directReports", {
            /// <summary>
            /// There are no comments for Query Property directReports in the schema.
            /// </summary>
            get: function () {
                if (this._directReports === undefined) {
                    this._directReports = new DirectoryObjects(this.context, this.getPath("directReports"));
                }
                return this._directReports;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "members", {
            /// <summary>
            /// There are no comments for Query Property members in the schema.
            /// </summary>
            get: function () {
                if (this._members === undefined) {
                    this._members = new DirectoryObjects(this.context, this.getPath("members"));
                }
                return this._members;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "memberOf", {
            /// <summary>
            /// There are no comments for Query Property memberOf in the schema.
            /// </summary>
            get: function () {
                if (this._memberOf === undefined) {
                    this._memberOf = new DirectoryObjects(this.context, this.getPath("memberOf"));
                }
                return this._memberOf;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "owners", {
            /// <summary>
            /// There are no comments for Query Property owners in the schema.
            /// </summary>
            get: function () {
                if (this._owners === undefined) {
                    this._owners = new DirectoryObjects(this.context, this.getPath("owners"));
                }
                return this._owners;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryObject.prototype, "ownedObjects", {
            /// <summary>
            /// There are no comments for Query Property ownedObjects in the schema.
            /// </summary>
            get: function () {
                if (this._ownedObjects === undefined) {
                    this._ownedObjects = new DirectoryObjects(this.context, this.getPath("ownedObjects"));
                }
                return this._ownedObjects;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryObject.prototype.checkMemberGroups = function (groupIds) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("checkMemberGroups"));

            request.method = 'POST';
            request.data = JSON.stringify({ "groupIds": groupIds });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData.value);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObject.prototype.getMemberGroups = function (securityEnabledOnly) {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("getMemberGroups"));

            request.method = 'POST';
            request.data = JSON.stringify({ "securityEnabledOnly": securityEnabledOnly });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                deferred.resolve(parsedData.value);
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObject.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directoryObjects' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectoryObject.parseDirectoryObject(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObject.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryObject.parseDirectoryObject = function (context, path, data) {
            if (!data)
                return null;

            if (data['odata.type']) {
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Application')
                    return new Application(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.User')
                    return new User(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Notification')
                    return new Notification(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.CollaborationSpace')
                    return new CollaborationSpace(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Contact')
                    return new Contact(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Device')
                    return new Device(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.DeviceConfiguration')
                    return new DeviceConfiguration(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.DirectoryLinkChange')
                    return new DirectoryLinkChange(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.DirectAccessGrant')
                    return new DirectAccessGrant(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Group')
                    return new Group(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.Role')
                    return new Role(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.RoleTemplate')
                    return new RoleTemplate(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.ServicePrincipal')
                    return new ServicePrincipal(context, path, data);
                if (data['odata.type'] === 'Microsoft.WindowsAzure.ActiveDirectory.TenantDetail')
                    return new TenantDetail(context, path, data);
            }

            return new DirectoryObject(context, path, data);
        };

        DirectoryObject.parseDirectoryObjects = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(DirectoryObject.parseDirectoryObject(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        DirectoryObject.prototype.getRequestBody = function () {
            return {
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return DirectoryObject;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.DirectoryObject = DirectoryObject;

    /// <summary>
    /// There are no comments for Application in the schema.
    /// </summary>
    var ApplicationFetcher = (function (_super) {
        __extends(ApplicationFetcher, _super);
        function ApplicationFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(ApplicationFetcher.prototype, "notifications", {
            /// <summary>
            /// There are no comments for Query Property notifications in the schema.
            /// </summary>
            get: function () {
                if (this._notifications === undefined) {
                    this._notifications = new Notifications(this.context, this.getPath("notifications"));
                }
                return this._notifications;
            },
            enumerable: true,
            configurable: true
        });

        ApplicationFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/applications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Application.parseApplication(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        ApplicationFetcher.prototype.restore = function (identifierUris) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("restore"));

            request.method = 'POST';
            request.data = JSON.stringify({ "identifierUris": identifierUris });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                var path = _this.context.serviceRootUri + '/applications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Application.parseApplication(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return ApplicationFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.ApplicationFetcher = ApplicationFetcher;

    /// <summary>
    /// There are no comments for Application in the schema.
    /// </summary>
    var Application = (function (_super) {
        __extends(Application, _super);
        function Application(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Application';
            this._appIdChanged = false;
            this._appMetadataChanged = false;
            this._appMetadataChangedListener = (function (value) {
                _this._appMetadataChanged = true;
                _this.changed = true;
            }).bind(this);
            this._appPermissions = new AadGraph.Extensions.ObservableCollection();
            this._appPermissionsChanged = false;
            this._appPermissionsChangedListener = (function (value) {
                _this._appPermissionsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._availableToOtherTenantsChanged = false;
            this._displayNameChanged = false;
            this._errorUrlChanged = false;
            this._homepageChanged = false;
            this._identifierUris = new Array();
            this._identifierUrisChanged = false;
            this._keyCredentials = new AadGraph.Extensions.ObservableCollection();
            this._keyCredentialsChanged = false;
            this._keyCredentialsChangedListener = (function (value) {
                _this._keyCredentialsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._mainLogoChanged = false;
            this._logoutUrlChanged = false;
            this._passwordCredentials = new AadGraph.Extensions.ObservableCollection();
            this._passwordCredentialsChanged = false;
            this._passwordCredentialsChangedListener = (function (value) {
                _this._passwordCredentialsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._publicClientChanged = false;
            this._replyUrls = new Array();
            this._replyUrlsChanged = false;
            this._requiredResourceAccess = new AadGraph.Extensions.ObservableCollection();
            this._requiredResourceAccessChanged = false;
            this._requiredResourceAccessChangedListener = (function (value) {
                _this._requiredResourceAccessChanged = true;
                _this.changed = true;
            }).bind(this);
            this._resourceApplicationSetChanged = false;
            this._samlMetadataUrlChanged = false;
            this._webApiChanged = false;
            this._webAppChanged = false;

            if (!data) {
                this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
                this._keyCredentials.addChangedListener(this._keyCredentialsChangedListener);
                this._passwordCredentials.addChangedListener(this._passwordCredentialsChangedListener);
                this._requiredResourceAccess.addChangedListener(this._requiredResourceAccessChangedListener);
                return;
            }

            this._appId = data.appId;
            this._appMetadata = AppMetadata.parseAppMetadata(data.appMetadata);
            if (this._appMetadata) {
                this._appMetadata.addChangedListener(this._appMetadataChangedListener);
            }
            this._appPermissions = AppPermission.parseAppPermissions(data.appPermissions);
            this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
            this._availableToOtherTenants = data.availableToOtherTenants;
            this._displayName = data.displayName;
            this._errorUrl = data.errorUrl;
            this._homepage = data.homepage;
            this._identifierUris = data.identifierUris;
            this._keyCredentials = KeyCredential.parseKeyCredentials(data.keyCredentials);
            this._keyCredentials.addChangedListener(this._keyCredentialsChangedListener);
            this._mainLogo = data.mainLogo;
            this._logoutUrl = data.logoutUrl;
            this._passwordCredentials = PasswordCredential.parsePasswordCredentials(data.passwordCredentials);
            this._passwordCredentials.addChangedListener(this._passwordCredentialsChangedListener);
            this._publicClient = data.publicClient;
            this._replyUrls = data.replyUrls;
            this._requiredResourceAccess = RequiredResourceAccess.parseRequiredResourceAccesses(data.requiredResourceAccess);
            this._requiredResourceAccess.addChangedListener(this._requiredResourceAccessChangedListener);
            this._resourceApplicationSet = data.resourceApplicationSet;
            this._samlMetadataUrl = data.samlMetadataUrl;
            this._webApi = data.webApi;
            this._webApp = data.webApp;
        }
        Object.defineProperty(Application.prototype, "appId", {
            /// <summary>
            /// There are no comments for Property appId in the schema.
            /// </summary>
            get: function () {
                return this._appId;
            },
            set: function (value) {
                if (value !== this._appId) {
                    this._appIdChanged = true;
                    this.changed = true;
                }
                this._appId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "appIdChanged", {
            get: function () {
                return this._appIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "appMetadata", {
            /// <summary>
            /// There are no comments for Property appMetadata in the schema.
            /// </summary>
            get: function () {
                return this._appMetadata;
            },
            set: function (value) {
                if (this._appMetadata) {
                    this._appMetadata.removeChangedListener(this._appMetadataChangedListener);
                }
                if (value !== this._appMetadata) {
                    this._appMetadataChanged = true;
                    this.changed = true;
                }
                if (this._appMetadata) {
                    this._appMetadata.addChangedListener(this._appMetadataChangedListener);
                }
                this._appMetadata = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "appMetadataChanged", {
            get: function () {
                return this._appMetadataChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "appPermissions", {
            /// <summary>
            /// There are no comments for Property appPermissions in the schema.
            /// </summary>
            get: function () {
                return this._appPermissions;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "appPermissionsChanged", {
            get: function () {
                return this._appPermissionsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "availableToOtherTenants", {
            /// <summary>
            /// There are no comments for Property availableToOtherTenants in the schema.
            /// </summary>
            get: function () {
                return this._availableToOtherTenants;
            },
            set: function (value) {
                if (value !== this._availableToOtherTenants) {
                    this._availableToOtherTenantsChanged = true;
                    this.changed = true;
                }
                this._availableToOtherTenants = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "availableToOtherTenantsChanged", {
            get: function () {
                return this._availableToOtherTenantsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "errorUrl", {
            /// <summary>
            /// There are no comments for Property errorUrl in the schema.
            /// </summary>
            get: function () {
                return this._errorUrl;
            },
            set: function (value) {
                if (value !== this._errorUrl) {
                    this._errorUrlChanged = true;
                    this.changed = true;
                }
                this._errorUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "errorUrlChanged", {
            get: function () {
                return this._errorUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "homepage", {
            /// <summary>
            /// There are no comments for Property homepage in the schema.
            /// </summary>
            get: function () {
                return this._homepage;
            },
            set: function (value) {
                if (value !== this._homepage) {
                    this._homepageChanged = true;
                    this.changed = true;
                }
                this._homepage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "homepageChanged", {
            get: function () {
                return this._homepageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "identifierUris", {
            /// <summary>
            /// There are no comments for Property identifierUris in the schema.
            /// </summary>
            get: function () {
                return this._identifierUris;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "identifierUrisChanged", {
            get: function () {
                return this._identifierUrisChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "keyCredentials", {
            /// <summary>
            /// There are no comments for Property keyCredentials in the schema.
            /// </summary>
            get: function () {
                return this._keyCredentials;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "keyCredentialsChanged", {
            get: function () {
                return this._keyCredentialsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "mainLogo", {
            /// <summary>
            /// There are no comments for Property mainLogo in the schema.
            /// </summary>
            get: function () {
                return this._mainLogo;
            },
            set: function (value) {
                if (value !== this._mainLogo) {
                    this._mainLogoChanged = true;
                    this.changed = true;
                }
                this._mainLogo = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "mainLogoChanged", {
            get: function () {
                return this._mainLogoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "logoutUrl", {
            /// <summary>
            /// There are no comments for Property logoutUrl in the schema.
            /// </summary>
            get: function () {
                return this._logoutUrl;
            },
            set: function (value) {
                if (value !== this._logoutUrl) {
                    this._logoutUrlChanged = true;
                    this.changed = true;
                }
                this._logoutUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "logoutUrlChanged", {
            get: function () {
                return this._logoutUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "passwordCredentials", {
            /// <summary>
            /// There are no comments for Property passwordCredentials in the schema.
            /// </summary>
            get: function () {
                return this._passwordCredentials;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "passwordCredentialsChanged", {
            get: function () {
                return this._passwordCredentialsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "publicClient", {
            /// <summary>
            /// There are no comments for Property publicClient in the schema.
            /// </summary>
            get: function () {
                return this._publicClient;
            },
            set: function (value) {
                if (value !== this._publicClient) {
                    this._publicClientChanged = true;
                    this.changed = true;
                }
                this._publicClient = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "publicClientChanged", {
            get: function () {
                return this._publicClientChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "replyUrls", {
            /// <summary>
            /// There are no comments for Property replyUrls in the schema.
            /// </summary>
            get: function () {
                return this._replyUrls;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "replyUrlsChanged", {
            get: function () {
                return this._replyUrlsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "requiredResourceAccess", {
            /// <summary>
            /// There are no comments for Property requiredResourceAccess in the schema.
            /// </summary>
            get: function () {
                return this._requiredResourceAccess;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "requiredResourceAccessChanged", {
            get: function () {
                return this._requiredResourceAccessChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "resourceApplicationSet", {
            /// <summary>
            /// There are no comments for Property resourceApplicationSet in the schema.
            /// </summary>
            get: function () {
                return this._resourceApplicationSet;
            },
            set: function (value) {
                if (value !== this._resourceApplicationSet) {
                    this._resourceApplicationSetChanged = true;
                    this.changed = true;
                }
                this._resourceApplicationSet = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "resourceApplicationSetChanged", {
            get: function () {
                return this._resourceApplicationSetChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "samlMetadataUrl", {
            /// <summary>
            /// There are no comments for Property samlMetadataUrl in the schema.
            /// </summary>
            get: function () {
                return this._samlMetadataUrl;
            },
            set: function (value) {
                if (value !== this._samlMetadataUrl) {
                    this._samlMetadataUrlChanged = true;
                    this.changed = true;
                }
                this._samlMetadataUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "samlMetadataUrlChanged", {
            get: function () {
                return this._samlMetadataUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "webApi", {
            /// <summary>
            /// There are no comments for Property webApi in the schema.
            /// </summary>
            get: function () {
                return this._webApi;
            },
            set: function (value) {
                if (value !== this._webApi) {
                    this._webApiChanged = true;
                    this.changed = true;
                }
                this._webApi = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "webApiChanged", {
            get: function () {
                return this._webApiChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "webApp", {
            /// <summary>
            /// There are no comments for Property webApp in the schema.
            /// </summary>
            get: function () {
                return this._webApp;
            },
            set: function (value) {
                if (value !== this._webApp) {
                    this._webAppChanged = true;
                    this.changed = true;
                }
                this._webApp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Application.prototype, "webAppChanged", {
            get: function () {
                return this._webAppChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Application.prototype, "notifications", {
            /// <summary>
            /// There are no comments for Query Property notifications in the schema.
            /// </summary>
            get: function () {
                if (this._notifications === undefined) {
                    this._notifications = new Notifications(this.context, this.getPath("notifications"));
                }
                return this._notifications;
            },
            enumerable: true,
            configurable: true
        });

        Application.prototype.restore = function (identifierUris) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("restore"));

            request.method = 'POST';
            request.data = JSON.stringify({ "identifierUris": identifierUris });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                var path = _this.context.serviceRootUri + '/applications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Application.parseApplication(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        Application.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/applications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Application.parseApplication(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Application.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Application.parseApplication = function (context, path, data) {
            if (!data)
                return null;

            return new Application(context, path, data);
        };

        Application.parseApplications = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Application.parseApplication(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Application.prototype.getRequestBody = function () {
            return {
                appId: (this.appIdChanged && this.appId) ? this.appId : undefined,
                appMetadata: (this.appMetadataChanged && this.appMetadata) ? this.appMetadata.getRequestBody() : undefined,
                appPermissions: (this.appPermissionsChanged) ? (function (appPermissions) {
                    if (!appPermissions) {
                        return undefined;
                    }
                    var converted = [];
                    appPermissions.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.appPermissions) : undefined,
                availableToOtherTenants: (this.availableToOtherTenantsChanged && this.availableToOtherTenants) ? this.availableToOtherTenants : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                errorUrl: (this.errorUrlChanged && this.errorUrl) ? this.errorUrl : undefined,
                homepage: (this.homepageChanged && this.homepage) ? this.homepage : undefined,
                identifierUris: (this.identifierUrisChanged && this.identifierUris) ? this.identifierUris : undefined,
                keyCredentials: (this.keyCredentialsChanged) ? (function (keyCredentials) {
                    if (!keyCredentials) {
                        return undefined;
                    }
                    var converted = [];
                    keyCredentials.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.keyCredentials) : undefined,
                mainLogo: (this.mainLogoChanged && this.mainLogo) ? this.mainLogo : undefined,
                logoutUrl: (this.logoutUrlChanged && this.logoutUrl) ? this.logoutUrl : undefined,
                passwordCredentials: (this.passwordCredentialsChanged) ? (function (passwordCredentials) {
                    if (!passwordCredentials) {
                        return undefined;
                    }
                    var converted = [];
                    passwordCredentials.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.passwordCredentials) : undefined,
                publicClient: (this.publicClientChanged && this.publicClient) ? this.publicClient : undefined,
                replyUrls: (this.replyUrlsChanged && this.replyUrls) ? this.replyUrls : undefined,
                requiredResourceAccess: (this.requiredResourceAccessChanged) ? (function (requiredResourceAccess) {
                    if (!requiredResourceAccess) {
                        return undefined;
                    }
                    var converted = [];
                    requiredResourceAccess.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.requiredResourceAccess) : undefined,
                resourceApplicationSet: (this.resourceApplicationSetChanged && this.resourceApplicationSet) ? this.resourceApplicationSet : undefined,
                samlMetadataUrl: (this.samlMetadataUrlChanged && this.samlMetadataUrl) ? this.samlMetadataUrl : undefined,
                webApi: (this.webApiChanged && this.webApi) ? this.webApi : undefined,
                webApp: (this.webAppChanged && this.webApp) ? this.webApp : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Application;
    })(DirectoryObject);
    AadGraph.Application = Application;

    /// <summary>
    /// There are no comments for User in the schema.
    /// </summary>
    var UserFetcher = (function (_super) {
        __extends(UserFetcher, _super);
        function UserFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(UserFetcher.prototype, "impersonationAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property impersonationAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._impersonationAccessGrants === undefined) {
                    this._impersonationAccessGrants = new ImpersonationAccessGrants(this.context, this.getPath("impersonationAccessGrants"));
                }
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(UserFetcher.prototype, "registeredDevices", {
            /// <summary>
            /// There are no comments for Query Property registeredDevices in the schema.
            /// </summary>
            get: function () {
                if (this._registeredDevices === undefined) {
                    this._registeredDevices = new DirectoryObjects(this.context, this.getPath("registeredDevices"));
                }
                return this._registeredDevices;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(UserFetcher.prototype, "ownedDevices", {
            /// <summary>
            /// There are no comments for Query Property ownedDevices in the schema.
            /// </summary>
            get: function () {
                if (this._ownedDevices === undefined) {
                    this._ownedDevices = new DirectoryObjects(this.context, this.getPath("ownedDevices"));
                }
                return this._ownedDevices;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(UserFetcher.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(UserFetcher.prototype, "pendingMemberOf", {
            /// <summary>
            /// There are no comments for Query Property pendingMemberOf in the schema.
            /// </summary>
            get: function () {
                if (this._pendingMemberOf === undefined) {
                    this._pendingMemberOf = new DirectoryObjects(this.context, this.getPath("pendingMemberOf"));
                }
                return this._pendingMemberOf;
            },
            enumerable: true,
            configurable: true
        });

        UserFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/users' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(User.parseUser(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        UserFetcher.prototype.assignLicense = function (addLicenses, removeLicenses) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("assignLicense"));

            request.method = 'POST';
            request.data = JSON.stringify({ "addLicenses": addLicenses, "removeLicenses": removeLicenses });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                var path = _this.context.serviceRootUri + '/users' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(User.parseUser(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return UserFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.UserFetcher = UserFetcher;

    /// <summary>
    /// There are no comments for User in the schema.
    /// </summary>
    var User = (function (_super) {
        __extends(User, _super);
        function User(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.User';
            this._accountEnabledChanged = false;
            this._alternativeSecurityIds = new AadGraph.Extensions.ObservableCollection();
            this._alternativeSecurityIdsChanged = false;
            this._alternativeSecurityIdsChangedListener = (function (value) {
                _this._alternativeSecurityIdsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._appMetadataChanged = false;
            this._appMetadataChangedListener = (function (value) {
                _this._appMetadataChanged = true;
                _this.changed = true;
            }).bind(this);
            this._assignedLicenses = new AadGraph.Extensions.ObservableCollection();
            this._assignedLicensesChanged = false;
            this._assignedLicensesChangedListener = (function (value) {
                _this._assignedLicensesChanged = true;
                _this.changed = true;
            }).bind(this);
            this._assignedPlans = new AadGraph.Extensions.ObservableCollection();
            this._assignedPlansChanged = false;
            this._assignedPlansChangedListener = (function (value) {
                _this._assignedPlansChanged = true;
                _this.changed = true;
            }).bind(this);
            this._cityChanged = false;
            this._countryChanged = false;
            this._departmentChanged = false;
            this._dirSyncEnabledChanged = false;
            this._displayNameChanged = false;
            this._extensionAttribute1Changed = false;
            this._extensionAttribute2Changed = false;
            this._extensionAttribute3Changed = false;
            this._extensionAttribute4Changed = false;
            this._extensionAttribute5Changed = false;
            this._facsimileTelephoneNumberChanged = false;
            this._givenNameChanged = false;
            this._immutableIdChanged = false;
            this._jobTitleChanged = false;
            this._lastDirSyncTimeChanged = false;
            this._mailChanged = false;
            this._mailNicknameChanged = false;
            this._mobileChanged = false;
            this._netIdChanged = false;
            this._otherMails = new Array();
            this._otherMailsChanged = false;
            this._passwordPoliciesChanged = false;
            this._passwordProfileChanged = false;
            this._passwordProfileChangedListener = (function (value) {
                _this._passwordProfileChanged = true;
                _this.changed = true;
            }).bind(this);
            this._physicalDeliveryOfficeNameChanged = false;
            this._postalCodeChanged = false;
            this._preferredLanguageChanged = false;
            this._primarySMTPAddressChanged = false;
            this._provisionedPlans = new AadGraph.Extensions.ObservableCollection();
            this._provisionedPlansChanged = false;
            this._provisionedPlansChangedListener = (function (value) {
                _this._provisionedPlansChanged = true;
                _this.changed = true;
            }).bind(this);
            this._provisioningErrors = new AadGraph.Extensions.ObservableCollection();
            this._provisioningErrorsChanged = false;
            this._provisioningErrorsChangedListener = (function (value) {
                _this._provisioningErrorsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._proxyAddresses = new Array();
            this._proxyAddressesChanged = false;
            this._sipProxyAddressChanged = false;
            this._smtpAddresses = new Array();
            this._smtpAddressesChanged = false;
            this._stateChanged = false;
            this._streetAddressChanged = false;
            this._surnameChanged = false;
            this._telephoneNumberChanged = false;
            this._thumbnailPhotoChanged = false;
            this._usageLocationChanged = false;
            this._userPrincipalNameChanged = false;
            this._userTypeChanged = false;

            if (!data) {
                this._alternativeSecurityIds.addChangedListener(this._alternativeSecurityIdsChangedListener);
                this._assignedLicenses.addChangedListener(this._assignedLicensesChangedListener);
                this._assignedPlans.addChangedListener(this._assignedPlansChangedListener);
                this._provisionedPlans.addChangedListener(this._provisionedPlansChangedListener);
                this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
                return;
            }

            this._accountEnabled = data.accountEnabled;
            this._alternativeSecurityIds = AlternativeSecurityId.parseAlternativeSecurityIds(data.alternativeSecurityIds);
            this._alternativeSecurityIds.addChangedListener(this._alternativeSecurityIdsChangedListener);
            this._appMetadata = AppMetadata.parseAppMetadata(data.appMetadata);
            if (this._appMetadata) {
                this._appMetadata.addChangedListener(this._appMetadataChangedListener);
            }
            this._assignedLicenses = AssignedLicense.parseAssignedLicenses(data.assignedLicenses);
            this._assignedLicenses.addChangedListener(this._assignedLicensesChangedListener);
            this._assignedPlans = AssignedPlan.parseAssignedPlans(data.assignedPlans);
            this._assignedPlans.addChangedListener(this._assignedPlansChangedListener);
            this._city = data.city;
            this._country = data.country;
            this._department = data.department;
            this._dirSyncEnabled = data.dirSyncEnabled;
            this._displayName = data.displayName;
            this._extensionAttribute1 = data.extensionAttribute1;
            this._extensionAttribute2 = data.extensionAttribute2;
            this._extensionAttribute3 = data.extensionAttribute3;
            this._extensionAttribute4 = data.extensionAttribute4;
            this._extensionAttribute5 = data.extensionAttribute5;
            this._facsimileTelephoneNumber = data.facsimileTelephoneNumber;
            this._givenName = data.givenName;
            this._immutableId = data.immutableId;
            this._jobTitle = data.jobTitle;
            this._lastDirSyncTime = (data.lastDirSyncTime !== null) ? new Date(data.lastDirSyncTime) : null;
            this._mail = data.mail;
            this._mailNickname = data.mailNickname;
            this._mobile = data.mobile;
            this._netId = data.netId;
            this._otherMails = data.otherMails;
            this._passwordPolicies = data.passwordPolicies;
            this._passwordProfile = PasswordProfile.parsePasswordProfile(data.passwordProfile);
            if (this._passwordProfile) {
                this._passwordProfile.addChangedListener(this._passwordProfileChangedListener);
            }
            this._physicalDeliveryOfficeName = data.physicalDeliveryOfficeName;
            this._postalCode = data.postalCode;
            this._preferredLanguage = data.preferredLanguage;
            this._primarySMTPAddress = data.primarySMTPAddress;
            this._provisionedPlans = ProvisionedPlan.parseProvisionedPlans(data.provisionedPlans);
            this._provisionedPlans.addChangedListener(this._provisionedPlansChangedListener);
            this._provisioningErrors = ProvisioningError.parseProvisioningErrors(data.provisioningErrors);
            this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
            this._proxyAddresses = data.proxyAddresses;
            this._sipProxyAddress = data.sipProxyAddress;
            this._smtpAddresses = data.smtpAddresses;
            this._state = data.state;
            this._streetAddress = data.streetAddress;
            this._surname = data.surname;
            this._telephoneNumber = data.telephoneNumber;
            this._thumbnailPhoto = data.thumbnailPhoto;
            this._usageLocation = data.usageLocation;
            this._userPrincipalName = data.userPrincipalName;
            this._userType = data.userType;
        }
        Object.defineProperty(User.prototype, "accountEnabled", {
            /// <summary>
            /// There are no comments for Property accountEnabled in the schema.
            /// </summary>
            get: function () {
                return this._accountEnabled;
            },
            set: function (value) {
                if (value !== this._accountEnabled) {
                    this._accountEnabledChanged = true;
                    this.changed = true;
                }
                this._accountEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "accountEnabledChanged", {
            get: function () {
                return this._accountEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "alternativeSecurityIds", {
            /// <summary>
            /// There are no comments for Property alternativeSecurityIds in the schema.
            /// </summary>
            get: function () {
                return this._alternativeSecurityIds;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "alternativeSecurityIdsChanged", {
            get: function () {
                return this._alternativeSecurityIdsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "appMetadata", {
            /// <summary>
            /// There are no comments for Property appMetadata in the schema.
            /// </summary>
            get: function () {
                return this._appMetadata;
            },
            set: function (value) {
                if (this._appMetadata) {
                    this._appMetadata.removeChangedListener(this._appMetadataChangedListener);
                }
                if (value !== this._appMetadata) {
                    this._appMetadataChanged = true;
                    this.changed = true;
                }
                if (this._appMetadata) {
                    this._appMetadata.addChangedListener(this._appMetadataChangedListener);
                }
                this._appMetadata = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "appMetadataChanged", {
            get: function () {
                return this._appMetadataChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "assignedLicenses", {
            /// <summary>
            /// There are no comments for Property assignedLicenses in the schema.
            /// </summary>
            get: function () {
                return this._assignedLicenses;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "assignedLicensesChanged", {
            get: function () {
                return this._assignedLicensesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "assignedPlans", {
            /// <summary>
            /// There are no comments for Property assignedPlans in the schema.
            /// </summary>
            get: function () {
                return this._assignedPlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "assignedPlansChanged", {
            get: function () {
                return this._assignedPlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "city", {
            /// <summary>
            /// There are no comments for Property city in the schema.
            /// </summary>
            get: function () {
                return this._city;
            },
            set: function (value) {
                if (value !== this._city) {
                    this._cityChanged = true;
                    this.changed = true;
                }
                this._city = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "cityChanged", {
            get: function () {
                return this._cityChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "country", {
            /// <summary>
            /// There are no comments for Property country in the schema.
            /// </summary>
            get: function () {
                return this._country;
            },
            set: function (value) {
                if (value !== this._country) {
                    this._countryChanged = true;
                    this.changed = true;
                }
                this._country = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "countryChanged", {
            get: function () {
                return this._countryChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "department", {
            /// <summary>
            /// There are no comments for Property department in the schema.
            /// </summary>
            get: function () {
                return this._department;
            },
            set: function (value) {
                if (value !== this._department) {
                    this._departmentChanged = true;
                    this.changed = true;
                }
                this._department = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "departmentChanged", {
            get: function () {
                return this._departmentChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "dirSyncEnabled", {
            /// <summary>
            /// There are no comments for Property dirSyncEnabled in the schema.
            /// </summary>
            get: function () {
                return this._dirSyncEnabled;
            },
            set: function (value) {
                if (value !== this._dirSyncEnabled) {
                    this._dirSyncEnabledChanged = true;
                    this.changed = true;
                }
                this._dirSyncEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "dirSyncEnabledChanged", {
            get: function () {
                return this._dirSyncEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "extensionAttribute1", {
            /// <summary>
            /// There are no comments for Property extensionAttribute1 in the schema.
            /// </summary>
            get: function () {
                return this._extensionAttribute1;
            },
            set: function (value) {
                if (value !== this._extensionAttribute1) {
                    this._extensionAttribute1Changed = true;
                    this.changed = true;
                }
                this._extensionAttribute1 = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "extensionAttribute1Changed", {
            get: function () {
                return this._extensionAttribute1Changed;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "extensionAttribute2", {
            /// <summary>
            /// There are no comments for Property extensionAttribute2 in the schema.
            /// </summary>
            get: function () {
                return this._extensionAttribute2;
            },
            set: function (value) {
                if (value !== this._extensionAttribute2) {
                    this._extensionAttribute2Changed = true;
                    this.changed = true;
                }
                this._extensionAttribute2 = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "extensionAttribute2Changed", {
            get: function () {
                return this._extensionAttribute2Changed;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "extensionAttribute3", {
            /// <summary>
            /// There are no comments for Property extensionAttribute3 in the schema.
            /// </summary>
            get: function () {
                return this._extensionAttribute3;
            },
            set: function (value) {
                if (value !== this._extensionAttribute3) {
                    this._extensionAttribute3Changed = true;
                    this.changed = true;
                }
                this._extensionAttribute3 = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "extensionAttribute3Changed", {
            get: function () {
                return this._extensionAttribute3Changed;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "extensionAttribute4", {
            /// <summary>
            /// There are no comments for Property extensionAttribute4 in the schema.
            /// </summary>
            get: function () {
                return this._extensionAttribute4;
            },
            set: function (value) {
                if (value !== this._extensionAttribute4) {
                    this._extensionAttribute4Changed = true;
                    this.changed = true;
                }
                this._extensionAttribute4 = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "extensionAttribute4Changed", {
            get: function () {
                return this._extensionAttribute4Changed;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "extensionAttribute5", {
            /// <summary>
            /// There are no comments for Property extensionAttribute5 in the schema.
            /// </summary>
            get: function () {
                return this._extensionAttribute5;
            },
            set: function (value) {
                if (value !== this._extensionAttribute5) {
                    this._extensionAttribute5Changed = true;
                    this.changed = true;
                }
                this._extensionAttribute5 = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "extensionAttribute5Changed", {
            get: function () {
                return this._extensionAttribute5Changed;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "facsimileTelephoneNumber", {
            /// <summary>
            /// There are no comments for Property facsimileTelephoneNumber in the schema.
            /// </summary>
            get: function () {
                return this._facsimileTelephoneNumber;
            },
            set: function (value) {
                if (value !== this._facsimileTelephoneNumber) {
                    this._facsimileTelephoneNumberChanged = true;
                    this.changed = true;
                }
                this._facsimileTelephoneNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "facsimileTelephoneNumberChanged", {
            get: function () {
                return this._facsimileTelephoneNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "givenName", {
            /// <summary>
            /// There are no comments for Property givenName in the schema.
            /// </summary>
            get: function () {
                return this._givenName;
            },
            set: function (value) {
                if (value !== this._givenName) {
                    this._givenNameChanged = true;
                    this.changed = true;
                }
                this._givenName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "givenNameChanged", {
            get: function () {
                return this._givenNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "immutableId", {
            /// <summary>
            /// There are no comments for Property immutableId in the schema.
            /// </summary>
            get: function () {
                return this._immutableId;
            },
            set: function (value) {
                if (value !== this._immutableId) {
                    this._immutableIdChanged = true;
                    this.changed = true;
                }
                this._immutableId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "immutableIdChanged", {
            get: function () {
                return this._immutableIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "jobTitle", {
            /// <summary>
            /// There are no comments for Property jobTitle in the schema.
            /// </summary>
            get: function () {
                return this._jobTitle;
            },
            set: function (value) {
                if (value !== this._jobTitle) {
                    this._jobTitleChanged = true;
                    this.changed = true;
                }
                this._jobTitle = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "jobTitleChanged", {
            get: function () {
                return this._jobTitleChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "lastDirSyncTime", {
            /// <summary>
            /// There are no comments for Property lastDirSyncTime in the schema.
            /// </summary>
            get: function () {
                return this._lastDirSyncTime;
            },
            set: function (value) {
                if (value !== this._lastDirSyncTime) {
                    this._lastDirSyncTimeChanged = true;
                    this.changed = true;
                }
                this._lastDirSyncTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "lastDirSyncTimeChanged", {
            get: function () {
                return this._lastDirSyncTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "mail", {
            /// <summary>
            /// There are no comments for Property mail in the schema.
            /// </summary>
            get: function () {
                return this._mail;
            },
            set: function (value) {
                if (value !== this._mail) {
                    this._mailChanged = true;
                    this.changed = true;
                }
                this._mail = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "mailChanged", {
            get: function () {
                return this._mailChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "mailNickname", {
            /// <summary>
            /// There are no comments for Property mailNickname in the schema.
            /// </summary>
            get: function () {
                return this._mailNickname;
            },
            set: function (value) {
                if (value !== this._mailNickname) {
                    this._mailNicknameChanged = true;
                    this.changed = true;
                }
                this._mailNickname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "mailNicknameChanged", {
            get: function () {
                return this._mailNicknameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "mobile", {
            /// <summary>
            /// There are no comments for Property mobile in the schema.
            /// </summary>
            get: function () {
                return this._mobile;
            },
            set: function (value) {
                if (value !== this._mobile) {
                    this._mobileChanged = true;
                    this.changed = true;
                }
                this._mobile = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "mobileChanged", {
            get: function () {
                return this._mobileChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "netId", {
            /// <summary>
            /// There are no comments for Property netId in the schema.
            /// </summary>
            get: function () {
                return this._netId;
            },
            set: function (value) {
                if (value !== this._netId) {
                    this._netIdChanged = true;
                    this.changed = true;
                }
                this._netId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "netIdChanged", {
            get: function () {
                return this._netIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "otherMails", {
            /// <summary>
            /// There are no comments for Property otherMails in the schema.
            /// </summary>
            get: function () {
                return this._otherMails;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "otherMailsChanged", {
            get: function () {
                return this._otherMailsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "passwordPolicies", {
            /// <summary>
            /// There are no comments for Property passwordPolicies in the schema.
            /// </summary>
            get: function () {
                return this._passwordPolicies;
            },
            set: function (value) {
                if (value !== this._passwordPolicies) {
                    this._passwordPoliciesChanged = true;
                    this.changed = true;
                }
                this._passwordPolicies = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "passwordPoliciesChanged", {
            get: function () {
                return this._passwordPoliciesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "passwordProfile", {
            /// <summary>
            /// There are no comments for Property passwordProfile in the schema.
            /// </summary>
            get: function () {
                return this._passwordProfile;
            },
            set: function (value) {
                if (this._passwordProfile) {
                    this._passwordProfile.removeChangedListener(this._passwordProfileChangedListener);
                }
                if (value !== this._passwordProfile) {
                    this._passwordProfileChanged = true;
                    this.changed = true;
                }
                if (this._passwordProfile) {
                    this._passwordProfile.addChangedListener(this._passwordProfileChangedListener);
                }
                this._passwordProfile = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "passwordProfileChanged", {
            get: function () {
                return this._passwordProfileChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "physicalDeliveryOfficeName", {
            /// <summary>
            /// There are no comments for Property physicalDeliveryOfficeName in the schema.
            /// </summary>
            get: function () {
                return this._physicalDeliveryOfficeName;
            },
            set: function (value) {
                if (value !== this._physicalDeliveryOfficeName) {
                    this._physicalDeliveryOfficeNameChanged = true;
                    this.changed = true;
                }
                this._physicalDeliveryOfficeName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "physicalDeliveryOfficeNameChanged", {
            get: function () {
                return this._physicalDeliveryOfficeNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "postalCode", {
            /// <summary>
            /// There are no comments for Property postalCode in the schema.
            /// </summary>
            get: function () {
                return this._postalCode;
            },
            set: function (value) {
                if (value !== this._postalCode) {
                    this._postalCodeChanged = true;
                    this.changed = true;
                }
                this._postalCode = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "postalCodeChanged", {
            get: function () {
                return this._postalCodeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "preferredLanguage", {
            /// <summary>
            /// There are no comments for Property preferredLanguage in the schema.
            /// </summary>
            get: function () {
                return this._preferredLanguage;
            },
            set: function (value) {
                if (value !== this._preferredLanguage) {
                    this._preferredLanguageChanged = true;
                    this.changed = true;
                }
                this._preferredLanguage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "preferredLanguageChanged", {
            get: function () {
                return this._preferredLanguageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "primarySMTPAddress", {
            /// <summary>
            /// There are no comments for Property primarySMTPAddress in the schema.
            /// </summary>
            get: function () {
                return this._primarySMTPAddress;
            },
            set: function (value) {
                if (value !== this._primarySMTPAddress) {
                    this._primarySMTPAddressChanged = true;
                    this.changed = true;
                }
                this._primarySMTPAddress = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "primarySMTPAddressChanged", {
            get: function () {
                return this._primarySMTPAddressChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "provisionedPlans", {
            /// <summary>
            /// There are no comments for Property provisionedPlans in the schema.
            /// </summary>
            get: function () {
                return this._provisionedPlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "provisionedPlansChanged", {
            get: function () {
                return this._provisionedPlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "provisioningErrors", {
            /// <summary>
            /// There are no comments for Property provisioningErrors in the schema.
            /// </summary>
            get: function () {
                return this._provisioningErrors;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "provisioningErrorsChanged", {
            get: function () {
                return this._provisioningErrorsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "proxyAddresses", {
            /// <summary>
            /// There are no comments for Property proxyAddresses in the schema.
            /// </summary>
            get: function () {
                return this._proxyAddresses;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "proxyAddressesChanged", {
            get: function () {
                return this._proxyAddressesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "sipProxyAddress", {
            /// <summary>
            /// There are no comments for Property sipProxyAddress in the schema.
            /// </summary>
            get: function () {
                return this._sipProxyAddress;
            },
            set: function (value) {
                if (value !== this._sipProxyAddress) {
                    this._sipProxyAddressChanged = true;
                    this.changed = true;
                }
                this._sipProxyAddress = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "sipProxyAddressChanged", {
            get: function () {
                return this._sipProxyAddressChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "smtpAddresses", {
            /// <summary>
            /// There are no comments for Property smtpAddresses in the schema.
            /// </summary>
            get: function () {
                return this._smtpAddresses;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "smtpAddressesChanged", {
            get: function () {
                return this._smtpAddressesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "state", {
            /// <summary>
            /// There are no comments for Property state in the schema.
            /// </summary>
            get: function () {
                return this._state;
            },
            set: function (value) {
                if (value !== this._state) {
                    this._stateChanged = true;
                    this.changed = true;
                }
                this._state = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "stateChanged", {
            get: function () {
                return this._stateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "streetAddress", {
            /// <summary>
            /// There are no comments for Property streetAddress in the schema.
            /// </summary>
            get: function () {
                return this._streetAddress;
            },
            set: function (value) {
                if (value !== this._streetAddress) {
                    this._streetAddressChanged = true;
                    this.changed = true;
                }
                this._streetAddress = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "streetAddressChanged", {
            get: function () {
                return this._streetAddressChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "surname", {
            /// <summary>
            /// There are no comments for Property surname in the schema.
            /// </summary>
            get: function () {
                return this._surname;
            },
            set: function (value) {
                if (value !== this._surname) {
                    this._surnameChanged = true;
                    this.changed = true;
                }
                this._surname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "surnameChanged", {
            get: function () {
                return this._surnameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "telephoneNumber", {
            /// <summary>
            /// There are no comments for Property telephoneNumber in the schema.
            /// </summary>
            get: function () {
                return this._telephoneNumber;
            },
            set: function (value) {
                if (value !== this._telephoneNumber) {
                    this._telephoneNumberChanged = true;
                    this.changed = true;
                }
                this._telephoneNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "telephoneNumberChanged", {
            get: function () {
                return this._telephoneNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "thumbnailPhoto", {
            /// <summary>
            /// There are no comments for Property thumbnailPhoto in the schema.
            /// </summary>
            get: function () {
                return this._thumbnailPhoto;
            },
            set: function (value) {
                if (value !== this._thumbnailPhoto) {
                    this._thumbnailPhotoChanged = true;
                    this.changed = true;
                }
                this._thumbnailPhoto = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "thumbnailPhotoChanged", {
            get: function () {
                return this._thumbnailPhotoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "usageLocation", {
            /// <summary>
            /// There are no comments for Property usageLocation in the schema.
            /// </summary>
            get: function () {
                return this._usageLocation;
            },
            set: function (value) {
                if (value !== this._usageLocation) {
                    this._usageLocationChanged = true;
                    this.changed = true;
                }
                this._usageLocation = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "usageLocationChanged", {
            get: function () {
                return this._usageLocationChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "userPrincipalName", {
            /// <summary>
            /// There are no comments for Property userPrincipalName in the schema.
            /// </summary>
            get: function () {
                return this._userPrincipalName;
            },
            set: function (value) {
                if (value !== this._userPrincipalName) {
                    this._userPrincipalNameChanged = true;
                    this.changed = true;
                }
                this._userPrincipalName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "userPrincipalNameChanged", {
            get: function () {
                return this._userPrincipalNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "userType", {
            /// <summary>
            /// There are no comments for Property userType in the schema.
            /// </summary>
            get: function () {
                return this._userType;
            },
            set: function (value) {
                if (value !== this._userType) {
                    this._userTypeChanged = true;
                    this.changed = true;
                }
                this._userType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(User.prototype, "userTypeChanged", {
            get: function () {
                return this._userTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "impersonationAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property impersonationAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._impersonationAccessGrants === undefined) {
                    this._impersonationAccessGrants = new ImpersonationAccessGrants(this.context, this.getPath("impersonationAccessGrants"));
                }
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "registeredDevices", {
            /// <summary>
            /// There are no comments for Query Property registeredDevices in the schema.
            /// </summary>
            get: function () {
                if (this._registeredDevices === undefined) {
                    this._registeredDevices = new DirectoryObjects(this.context, this.getPath("registeredDevices"));
                }
                return this._registeredDevices;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "ownedDevices", {
            /// <summary>
            /// There are no comments for Query Property ownedDevices in the schema.
            /// </summary>
            get: function () {
                if (this._ownedDevices === undefined) {
                    this._ownedDevices = new DirectoryObjects(this.context, this.getPath("ownedDevices"));
                }
                return this._ownedDevices;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(User.prototype, "pendingMemberOf", {
            /// <summary>
            /// There are no comments for Query Property pendingMemberOf in the schema.
            /// </summary>
            get: function () {
                if (this._pendingMemberOf === undefined) {
                    this._pendingMemberOf = new DirectoryObjects(this.context, this.getPath("pendingMemberOf"));
                }
                return this._pendingMemberOf;
            },
            enumerable: true,
            configurable: true
        });

        User.prototype.assignLicense = function (addLicenses, removeLicenses) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.getPath("assignLicense"));

            request.method = 'POST';
            request.data = JSON.stringify({ "addLicenses": addLicenses, "removeLicenses": removeLicenses });

            this.context.request(request).then((function (data) {
                var parsedData = JSON.parse(data);
                var path = _this.context.serviceRootUri + '/users' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(User.parseUser(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };

        User.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/users' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(User.parseUser(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        User.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        User.parseUser = function (context, path, data) {
            if (!data)
                return null;

            return new User(context, path, data);
        };

        User.parseUsers = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(User.parseUser(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        User.prototype.getRequestBody = function () {
            return {
                accountEnabled: (this.accountEnabledChanged && this.accountEnabled) ? this.accountEnabled : undefined,
                alternativeSecurityIds: (this.alternativeSecurityIdsChanged) ? (function (alternativeSecurityIds) {
                    if (!alternativeSecurityIds) {
                        return undefined;
                    }
                    var converted = [];
                    alternativeSecurityIds.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.alternativeSecurityIds) : undefined,
                appMetadata: (this.appMetadataChanged && this.appMetadata) ? this.appMetadata.getRequestBody() : undefined,
                assignedLicenses: (this.assignedLicensesChanged) ? (function (assignedLicenses) {
                    if (!assignedLicenses) {
                        return undefined;
                    }
                    var converted = [];
                    assignedLicenses.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.assignedLicenses) : undefined,
                assignedPlans: (this.assignedPlansChanged) ? (function (assignedPlans) {
                    if (!assignedPlans) {
                        return undefined;
                    }
                    var converted = [];
                    assignedPlans.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.assignedPlans) : undefined,
                city: (this.cityChanged && this.city) ? this.city : undefined,
                country: (this.countryChanged && this.country) ? this.country : undefined,
                department: (this.departmentChanged && this.department) ? this.department : undefined,
                dirSyncEnabled: (this.dirSyncEnabledChanged && this.dirSyncEnabled) ? this.dirSyncEnabled : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                extensionAttribute1: (this.extensionAttribute1Changed && this.extensionAttribute1) ? this.extensionAttribute1 : undefined,
                extensionAttribute2: (this.extensionAttribute2Changed && this.extensionAttribute2) ? this.extensionAttribute2 : undefined,
                extensionAttribute3: (this.extensionAttribute3Changed && this.extensionAttribute3) ? this.extensionAttribute3 : undefined,
                extensionAttribute4: (this.extensionAttribute4Changed && this.extensionAttribute4) ? this.extensionAttribute4 : undefined,
                extensionAttribute5: (this.extensionAttribute5Changed && this.extensionAttribute5) ? this.extensionAttribute5 : undefined,
                facsimileTelephoneNumber: (this.facsimileTelephoneNumberChanged && this.facsimileTelephoneNumber) ? this.facsimileTelephoneNumber : undefined,
                givenName: (this.givenNameChanged && this.givenName) ? this.givenName : undefined,
                immutableId: (this.immutableIdChanged && this.immutableId) ? this.immutableId : undefined,
                jobTitle: (this.jobTitleChanged && this.jobTitle) ? this.jobTitle : undefined,
                lastDirSyncTime: (this.lastDirSyncTimeChanged && this.lastDirSyncTime) ? this.lastDirSyncTime.toString() : undefined,
                mail: (this.mailChanged && this.mail) ? this.mail : undefined,
                mailNickname: (this.mailNicknameChanged && this.mailNickname) ? this.mailNickname : undefined,
                mobile: (this.mobileChanged && this.mobile) ? this.mobile : undefined,
                netId: (this.netIdChanged && this.netId) ? this.netId : undefined,
                otherMails: (this.otherMailsChanged && this.otherMails) ? this.otherMails : undefined,
                passwordPolicies: (this.passwordPoliciesChanged && this.passwordPolicies) ? this.passwordPolicies : undefined,
                passwordProfile: (this.passwordProfileChanged && this.passwordProfile) ? this.passwordProfile.getRequestBody() : undefined,
                physicalDeliveryOfficeName: (this.physicalDeliveryOfficeNameChanged && this.physicalDeliveryOfficeName) ? this.physicalDeliveryOfficeName : undefined,
                postalCode: (this.postalCodeChanged && this.postalCode) ? this.postalCode : undefined,
                preferredLanguage: (this.preferredLanguageChanged && this.preferredLanguage) ? this.preferredLanguage : undefined,
                primarySMTPAddress: (this.primarySMTPAddressChanged && this.primarySMTPAddress) ? this.primarySMTPAddress : undefined,
                provisionedPlans: (this.provisionedPlansChanged) ? (function (provisionedPlans) {
                    if (!provisionedPlans) {
                        return undefined;
                    }
                    var converted = [];
                    provisionedPlans.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisionedPlans) : undefined,
                provisioningErrors: (this.provisioningErrorsChanged) ? (function (provisioningErrors) {
                    if (!provisioningErrors) {
                        return undefined;
                    }
                    var converted = [];
                    provisioningErrors.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisioningErrors) : undefined,
                proxyAddresses: (this.proxyAddressesChanged && this.proxyAddresses) ? this.proxyAddresses : undefined,
                sipProxyAddress: (this.sipProxyAddressChanged && this.sipProxyAddress) ? this.sipProxyAddress : undefined,
                smtpAddresses: (this.smtpAddressesChanged && this.smtpAddresses) ? this.smtpAddresses : undefined,
                state: (this.stateChanged && this.state) ? this.state : undefined,
                streetAddress: (this.streetAddressChanged && this.streetAddress) ? this.streetAddress : undefined,
                surname: (this.surnameChanged && this.surname) ? this.surname : undefined,
                telephoneNumber: (this.telephoneNumberChanged && this.telephoneNumber) ? this.telephoneNumber : undefined,
                thumbnailPhoto: (this.thumbnailPhotoChanged && this.thumbnailPhoto) ? this.thumbnailPhoto : undefined,
                usageLocation: (this.usageLocationChanged && this.usageLocation) ? this.usageLocation : undefined,
                userPrincipalName: (this.userPrincipalNameChanged && this.userPrincipalName) ? this.userPrincipalName : undefined,
                userType: (this.userTypeChanged && this.userType) ? this.userType : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return User;
    })(DirectoryObject);
    AadGraph.User = User;

    /// <summary>
    /// There are no comments for AssignedLicense in the schema.
    /// </summary>
    var AssignedLicense = (function (_super) {
        __extends(AssignedLicense, _super);
        function AssignedLicense(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AssignedLicense';
            this._disabledPlans = new Array();
            this._disabledPlansChanged = false;
            this._skuIdChanged = false;

            if (!data) {
                return;
            }

            this._disabledPlans = data.disabledPlans;
            this._skuId = data.skuId;
        }
        Object.defineProperty(AssignedLicense.prototype, "disabledPlans", {
            /// <summary>
            /// There are no comments for Property disabledPlans in the schema.
            /// </summary>
            get: function () {
                return this._disabledPlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AssignedLicense.prototype, "disabledPlansChanged", {
            get: function () {
                return this._disabledPlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AssignedLicense.prototype, "skuId", {
            /// <summary>
            /// There are no comments for Property skuId in the schema.
            /// </summary>
            get: function () {
                return this._skuId;
            },
            set: function (value) {
                if (value !== this._skuId) {
                    this._skuIdChanged = true;
                    this.changed = true;
                }
                this._skuId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AssignedLicense.prototype, "skuIdChanged", {
            get: function () {
                return this._skuIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        AssignedLicense.parseAssignedLicense = function (data) {
            if (!data)
                return null;

            return new AssignedLicense(data);
        };

        AssignedLicense.parseAssignedLicenses = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AssignedLicense.parseAssignedLicense(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AssignedLicense.prototype.getRequestBody = function () {
            return {
                disabledPlans: (this.disabledPlansChanged && this.disabledPlans) ? this.disabledPlans : undefined,
                skuId: (this.skuIdChanged && this.skuId) ? this.skuId : undefined,
                'odata.type': this._odataType
            };
        };
        return AssignedLicense;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AssignedLicense = AssignedLicense;

    /// <summary>
    /// There are no comments for ApplicationRef in the schema.
    /// </summary>
    var ApplicationRefFetcher = (function (_super) {
        __extends(ApplicationRefFetcher, _super);
        function ApplicationRefFetcher(context, path) {
            _super.call(this, context, path);
        }
        ApplicationRefFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/applicationRefs' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "appId", type: "Edm.String", value: parsedData.appId }]);
                deferred.resolve(ApplicationRef.parseApplicationRef(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return ApplicationRefFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.ApplicationRefFetcher = ApplicationRefFetcher;

    /// <summary>
    /// There are no comments for ApplicationRef in the schema.
    /// </summary>
    var ApplicationRef = (function (_super) {
        __extends(ApplicationRef, _super);
        function ApplicationRef(context, path, data) {
            var _this = this;
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ApplicationRef';
            this._appIdChanged = false;
            this._appPermissions = new AadGraph.Extensions.ObservableCollection();
            this._appPermissionsChanged = false;
            this._appPermissionsChangedListener = (function (value) {
                _this._appPermissionsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._availableToOtherTenantsChanged = false;
            this._displayNameChanged = false;
            this._errorUrlChanged = false;
            this._homepageChanged = false;
            this._identifierUris = new Array();
            this._identifierUrisChanged = false;
            this._mainLogoChanged = false;
            this._logoutUrlChanged = false;
            this._publisherNameChanged = false;
            this._publicClientChanged = false;
            this._replyUrls = new Array();
            this._replyUrlsChanged = false;
            this._requiredResourceAccess = new AadGraph.Extensions.ObservableCollection();
            this._requiredResourceAccessChanged = false;
            this._requiredResourceAccessChangedListener = (function (value) {
                _this._requiredResourceAccessChanged = true;
                _this.changed = true;
            }).bind(this);
            this._resourceApplicationSetChanged = false;
            this._samlMetadataUrlChanged = false;
            this._webApiChanged = false;
            this._webAppChanged = false;

            if (!data) {
                this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
                this._requiredResourceAccess.addChangedListener(this._requiredResourceAccessChangedListener);
                return;
            }

            this._appId = data.appId;
            this._appPermissions = AppPermission.parseAppPermissions(data.appPermissions);
            this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
            this._availableToOtherTenants = data.availableToOtherTenants;
            this._displayName = data.displayName;
            this._errorUrl = data.errorUrl;
            this._homepage = data.homepage;
            this._identifierUris = data.identifierUris;
            this._mainLogo = data.mainLogo;
            this._logoutUrl = data.logoutUrl;
            this._publisherName = data.publisherName;
            this._publicClient = data.publicClient;
            this._replyUrls = data.replyUrls;
            this._requiredResourceAccess = RequiredResourceAccess.parseRequiredResourceAccesses(data.requiredResourceAccess);
            this._requiredResourceAccess.addChangedListener(this._requiredResourceAccessChangedListener);
            this._resourceApplicationSet = data.resourceApplicationSet;
            this._samlMetadataUrl = data.samlMetadataUrl;
            this._webApi = data.webApi;
            this._webApp = data.webApp;
        }
        Object.defineProperty(ApplicationRef.prototype, "appId", {
            /// <summary>
            /// There are no comments for Property appId in the schema.
            /// </summary>
            get: function () {
                return this._appId;
            },
            set: function (value) {
                if (value !== this._appId) {
                    this._appIdChanged = true;
                    this.changed = true;
                }
                this._appId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "appIdChanged", {
            get: function () {
                return this._appIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "appPermissions", {
            /// <summary>
            /// There are no comments for Property appPermissions in the schema.
            /// </summary>
            get: function () {
                return this._appPermissions;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "appPermissionsChanged", {
            get: function () {
                return this._appPermissionsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "availableToOtherTenants", {
            /// <summary>
            /// There are no comments for Property availableToOtherTenants in the schema.
            /// </summary>
            get: function () {
                return this._availableToOtherTenants;
            },
            set: function (value) {
                if (value !== this._availableToOtherTenants) {
                    this._availableToOtherTenantsChanged = true;
                    this.changed = true;
                }
                this._availableToOtherTenants = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "availableToOtherTenantsChanged", {
            get: function () {
                return this._availableToOtherTenantsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "errorUrl", {
            /// <summary>
            /// There are no comments for Property errorUrl in the schema.
            /// </summary>
            get: function () {
                return this._errorUrl;
            },
            set: function (value) {
                if (value !== this._errorUrl) {
                    this._errorUrlChanged = true;
                    this.changed = true;
                }
                this._errorUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "errorUrlChanged", {
            get: function () {
                return this._errorUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "homepage", {
            /// <summary>
            /// There are no comments for Property homepage in the schema.
            /// </summary>
            get: function () {
                return this._homepage;
            },
            set: function (value) {
                if (value !== this._homepage) {
                    this._homepageChanged = true;
                    this.changed = true;
                }
                this._homepage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "homepageChanged", {
            get: function () {
                return this._homepageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "identifierUris", {
            /// <summary>
            /// There are no comments for Property identifierUris in the schema.
            /// </summary>
            get: function () {
                return this._identifierUris;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "identifierUrisChanged", {
            get: function () {
                return this._identifierUrisChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "mainLogo", {
            /// <summary>
            /// There are no comments for Property mainLogo in the schema.
            /// </summary>
            get: function () {
                return this._mainLogo;
            },
            set: function (value) {
                if (value !== this._mainLogo) {
                    this._mainLogoChanged = true;
                    this.changed = true;
                }
                this._mainLogo = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "mainLogoChanged", {
            get: function () {
                return this._mainLogoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "logoutUrl", {
            /// <summary>
            /// There are no comments for Property logoutUrl in the schema.
            /// </summary>
            get: function () {
                return this._logoutUrl;
            },
            set: function (value) {
                if (value !== this._logoutUrl) {
                    this._logoutUrlChanged = true;
                    this.changed = true;
                }
                this._logoutUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "logoutUrlChanged", {
            get: function () {
                return this._logoutUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "publisherName", {
            /// <summary>
            /// There are no comments for Property publisherName in the schema.
            /// </summary>
            get: function () {
                return this._publisherName;
            },
            set: function (value) {
                if (value !== this._publisherName) {
                    this._publisherNameChanged = true;
                    this.changed = true;
                }
                this._publisherName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "publisherNameChanged", {
            get: function () {
                return this._publisherNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "publicClient", {
            /// <summary>
            /// There are no comments for Property publicClient in the schema.
            /// </summary>
            get: function () {
                return this._publicClient;
            },
            set: function (value) {
                if (value !== this._publicClient) {
                    this._publicClientChanged = true;
                    this.changed = true;
                }
                this._publicClient = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "publicClientChanged", {
            get: function () {
                return this._publicClientChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "replyUrls", {
            /// <summary>
            /// There are no comments for Property replyUrls in the schema.
            /// </summary>
            get: function () {
                return this._replyUrls;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "replyUrlsChanged", {
            get: function () {
                return this._replyUrlsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "requiredResourceAccess", {
            /// <summary>
            /// There are no comments for Property requiredResourceAccess in the schema.
            /// </summary>
            get: function () {
                return this._requiredResourceAccess;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "requiredResourceAccessChanged", {
            get: function () {
                return this._requiredResourceAccessChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "resourceApplicationSet", {
            /// <summary>
            /// There are no comments for Property resourceApplicationSet in the schema.
            /// </summary>
            get: function () {
                return this._resourceApplicationSet;
            },
            set: function (value) {
                if (value !== this._resourceApplicationSet) {
                    this._resourceApplicationSetChanged = true;
                    this.changed = true;
                }
                this._resourceApplicationSet = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "resourceApplicationSetChanged", {
            get: function () {
                return this._resourceApplicationSetChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "samlMetadataUrl", {
            /// <summary>
            /// There are no comments for Property samlMetadataUrl in the schema.
            /// </summary>
            get: function () {
                return this._samlMetadataUrl;
            },
            set: function (value) {
                if (value !== this._samlMetadataUrl) {
                    this._samlMetadataUrlChanged = true;
                    this.changed = true;
                }
                this._samlMetadataUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "samlMetadataUrlChanged", {
            get: function () {
                return this._samlMetadataUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "webApi", {
            /// <summary>
            /// There are no comments for Property webApi in the schema.
            /// </summary>
            get: function () {
                return this._webApi;
            },
            set: function (value) {
                if (value !== this._webApi) {
                    this._webApiChanged = true;
                    this.changed = true;
                }
                this._webApi = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "webApiChanged", {
            get: function () {
                return this._webApiChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ApplicationRef.prototype, "webApp", {
            /// <summary>
            /// There are no comments for Property webApp in the schema.
            /// </summary>
            get: function () {
                return this._webApp;
            },
            set: function (value) {
                if (value !== this._webApp) {
                    this._webAppChanged = true;
                    this.changed = true;
                }
                this._webApp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ApplicationRef.prototype, "webAppChanged", {
            get: function () {
                return this._webAppChanged;
            },
            enumerable: true,
            configurable: true
        });

        ApplicationRef.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/applicationRefs' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "appId", type: "Edm.String", value: parsedData.appId }]);
                deferred.resolve(ApplicationRef.parseApplicationRef(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ApplicationRef.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ApplicationRef.parseApplicationRef = function (context, path, data) {
            if (!data)
                return null;

            return new ApplicationRef(context, path, data);
        };

        ApplicationRef.parseApplicationRefs = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ApplicationRef.parseApplicationRef(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        ApplicationRef.prototype.getRequestBody = function () {
            return {
                appId: (this.appIdChanged && this.appId) ? this.appId : undefined,
                appPermissions: (this.appPermissionsChanged) ? (function (appPermissions) {
                    if (!appPermissions) {
                        return undefined;
                    }
                    var converted = [];
                    appPermissions.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.appPermissions) : undefined,
                availableToOtherTenants: (this.availableToOtherTenantsChanged && this.availableToOtherTenants) ? this.availableToOtherTenants : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                errorUrl: (this.errorUrlChanged && this.errorUrl) ? this.errorUrl : undefined,
                homepage: (this.homepageChanged && this.homepage) ? this.homepage : undefined,
                identifierUris: (this.identifierUrisChanged && this.identifierUris) ? this.identifierUris : undefined,
                mainLogo: (this.mainLogoChanged && this.mainLogo) ? this.mainLogo : undefined,
                logoutUrl: (this.logoutUrlChanged && this.logoutUrl) ? this.logoutUrl : undefined,
                publisherName: (this.publisherNameChanged && this.publisherName) ? this.publisherName : undefined,
                publicClient: (this.publicClientChanged && this.publicClient) ? this.publicClient : undefined,
                replyUrls: (this.replyUrlsChanged && this.replyUrls) ? this.replyUrls : undefined,
                requiredResourceAccess: (this.requiredResourceAccessChanged) ? (function (requiredResourceAccess) {
                    if (!requiredResourceAccess) {
                        return undefined;
                    }
                    var converted = [];
                    requiredResourceAccess.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.requiredResourceAccess) : undefined,
                resourceApplicationSet: (this.resourceApplicationSetChanged && this.resourceApplicationSet) ? this.resourceApplicationSet : undefined,
                samlMetadataUrl: (this.samlMetadataUrlChanged && this.samlMetadataUrl) ? this.samlMetadataUrl : undefined,
                webApi: (this.webApiChanged && this.webApi) ? this.webApi : undefined,
                webApp: (this.webAppChanged && this.webApp) ? this.webApp : undefined,
                'odata.type': this._odataType
            };
        };
        return ApplicationRef;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.ApplicationRef = ApplicationRef;

    /// <summary>
    /// There are no comments for AppPermission in the schema.
    /// </summary>
    var AppPermission = (function (_super) {
        __extends(AppPermission, _super);
        function AppPermission(data) {
            var _this = this;
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AppPermission';
            this._claimValueChanged = false;
            this._descriptionChanged = false;
            this._directAccessGrantTypes = new Array();
            this._directAccessGrantTypesChanged = false;
            this._displayNameChanged = false;
            this._impersonationAccessGrantTypes = new AadGraph.Extensions.ObservableCollection();
            this._impersonationAccessGrantTypesChanged = false;
            this._impersonationAccessGrantTypesChangedListener = (function (value) {
                _this._impersonationAccessGrantTypesChanged = true;
                _this.changed = true;
            }).bind(this);
            this._isDisabledChanged = false;
            this._originChanged = false;
            this._permissionIdChanged = false;
            this._resourceScopeTypeChanged = false;
            this._userConsentDescriptionChanged = false;
            this._userConsentDisplayNameChanged = false;

            if (!data) {
                this._impersonationAccessGrantTypes.addChangedListener(this._impersonationAccessGrantTypesChangedListener);
                return;
            }

            this._claimValue = data.claimValue;
            this._description = data.description;
            this._directAccessGrantTypes = data.directAccessGrantTypes;
            this._displayName = data.displayName;
            this._impersonationAccessGrantTypes = ImpersonationAccessGrantType.parseImpersonationAccessGrantTypes(data.impersonationAccessGrantTypes);
            this._impersonationAccessGrantTypes.addChangedListener(this._impersonationAccessGrantTypesChangedListener);
            this._isDisabled = data.isDisabled;
            this._origin = data.origin;
            this._permissionId = data.permissionId;
            this._resourceScopeType = data.resourceScopeType;
            this._userConsentDescription = data.userConsentDescription;
            this._userConsentDisplayName = data.userConsentDisplayName;
        }
        Object.defineProperty(AppPermission.prototype, "claimValue", {
            /// <summary>
            /// There are no comments for Property claimValue in the schema.
            /// </summary>
            get: function () {
                return this._claimValue;
            },
            set: function (value) {
                if (value !== this._claimValue) {
                    this._claimValueChanged = true;
                    this.changed = true;
                }
                this._claimValue = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "claimValueChanged", {
            get: function () {
                return this._claimValueChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "description", {
            /// <summary>
            /// There are no comments for Property description in the schema.
            /// </summary>
            get: function () {
                return this._description;
            },
            set: function (value) {
                if (value !== this._description) {
                    this._descriptionChanged = true;
                    this.changed = true;
                }
                this._description = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "descriptionChanged", {
            get: function () {
                return this._descriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "directAccessGrantTypes", {
            /// <summary>
            /// There are no comments for Property directAccessGrantTypes in the schema.
            /// </summary>
            get: function () {
                return this._directAccessGrantTypes;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "directAccessGrantTypesChanged", {
            get: function () {
                return this._directAccessGrantTypesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "impersonationAccessGrantTypes", {
            /// <summary>
            /// There are no comments for Property impersonationAccessGrantTypes in the schema.
            /// </summary>
            get: function () {
                return this._impersonationAccessGrantTypes;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "impersonationAccessGrantTypesChanged", {
            get: function () {
                return this._impersonationAccessGrantTypesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "isDisabled", {
            /// <summary>
            /// There are no comments for Property isDisabled in the schema.
            /// </summary>
            get: function () {
                return this._isDisabled;
            },
            set: function (value) {
                if (value !== this._isDisabled) {
                    this._isDisabledChanged = true;
                    this.changed = true;
                }
                this._isDisabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "isDisabledChanged", {
            get: function () {
                return this._isDisabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "origin", {
            /// <summary>
            /// There are no comments for Property origin in the schema.
            /// </summary>
            get: function () {
                return this._origin;
            },
            set: function (value) {
                if (value !== this._origin) {
                    this._originChanged = true;
                    this.changed = true;
                }
                this._origin = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "originChanged", {
            get: function () {
                return this._originChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "permissionId", {
            /// <summary>
            /// There are no comments for Property permissionId in the schema.
            /// </summary>
            get: function () {
                return this._permissionId;
            },
            set: function (value) {
                if (value !== this._permissionId) {
                    this._permissionIdChanged = true;
                    this.changed = true;
                }
                this._permissionId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "permissionIdChanged", {
            get: function () {
                return this._permissionIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "resourceScopeType", {
            /// <summary>
            /// There are no comments for Property resourceScopeType in the schema.
            /// </summary>
            get: function () {
                return this._resourceScopeType;
            },
            set: function (value) {
                if (value !== this._resourceScopeType) {
                    this._resourceScopeTypeChanged = true;
                    this.changed = true;
                }
                this._resourceScopeType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "resourceScopeTypeChanged", {
            get: function () {
                return this._resourceScopeTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "userConsentDescription", {
            /// <summary>
            /// There are no comments for Property userConsentDescription in the schema.
            /// </summary>
            get: function () {
                return this._userConsentDescription;
            },
            set: function (value) {
                if (value !== this._userConsentDescription) {
                    this._userConsentDescriptionChanged = true;
                    this.changed = true;
                }
                this._userConsentDescription = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "userConsentDescriptionChanged", {
            get: function () {
                return this._userConsentDescriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppPermission.prototype, "userConsentDisplayName", {
            /// <summary>
            /// There are no comments for Property userConsentDisplayName in the schema.
            /// </summary>
            get: function () {
                return this._userConsentDisplayName;
            },
            set: function (value) {
                if (value !== this._userConsentDisplayName) {
                    this._userConsentDisplayNameChanged = true;
                    this.changed = true;
                }
                this._userConsentDisplayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppPermission.prototype, "userConsentDisplayNameChanged", {
            get: function () {
                return this._userConsentDisplayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        AppPermission.parseAppPermission = function (data) {
            if (!data)
                return null;

            return new AppPermission(data);
        };

        AppPermission.parseAppPermissions = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AppPermission.parseAppPermission(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AppPermission.prototype.getRequestBody = function () {
            return {
                claimValue: (this.claimValueChanged && this.claimValue) ? this.claimValue : undefined,
                description: (this.descriptionChanged && this.description) ? this.description : undefined,
                directAccessGrantTypes: (this.directAccessGrantTypesChanged && this.directAccessGrantTypes) ? this.directAccessGrantTypes : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                impersonationAccessGrantTypes: (this.impersonationAccessGrantTypesChanged) ? (function (impersonationAccessGrantTypes) {
                    if (!impersonationAccessGrantTypes) {
                        return undefined;
                    }
                    var converted = [];
                    impersonationAccessGrantTypes.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.impersonationAccessGrantTypes) : undefined,
                isDisabled: (this.isDisabledChanged && this.isDisabled) ? this.isDisabled : undefined,
                origin: (this.originChanged && this.origin) ? this.origin : undefined,
                permissionId: (this.permissionIdChanged && this.permissionId) ? this.permissionId : undefined,
                resourceScopeType: (this.resourceScopeTypeChanged && this.resourceScopeType) ? this.resourceScopeType : undefined,
                userConsentDescription: (this.userConsentDescriptionChanged && this.userConsentDescription) ? this.userConsentDescription : undefined,
                userConsentDisplayName: (this.userConsentDisplayNameChanged && this.userConsentDisplayName) ? this.userConsentDisplayName : undefined,
                'odata.type': this._odataType
            };
        };
        return AppPermission;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AppPermission = AppPermission;

    /// <summary>
    /// There are no comments for ImpersonationAccessGrantType in the schema.
    /// </summary>
    var ImpersonationAccessGrantType = (function (_super) {
        __extends(ImpersonationAccessGrantType, _super);
        function ImpersonationAccessGrantType(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ImpersonationAccessGrantType';
            this._impersonatedChanged = false;
            this._impersonatorChanged = false;

            if (!data) {
                return;
            }

            this._impersonated = data.impersonated;
            this._impersonator = data.impersonator;
        }
        Object.defineProperty(ImpersonationAccessGrantType.prototype, "impersonated", {
            /// <summary>
            /// There are no comments for Property impersonated in the schema.
            /// </summary>
            get: function () {
                return this._impersonated;
            },
            set: function (value) {
                if (value !== this._impersonated) {
                    this._impersonatedChanged = true;
                    this.changed = true;
                }
                this._impersonated = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrantType.prototype, "impersonatedChanged", {
            get: function () {
                return this._impersonatedChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrantType.prototype, "impersonator", {
            /// <summary>
            /// There are no comments for Property impersonator in the schema.
            /// </summary>
            get: function () {
                return this._impersonator;
            },
            set: function (value) {
                if (value !== this._impersonator) {
                    this._impersonatorChanged = true;
                    this.changed = true;
                }
                this._impersonator = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrantType.prototype, "impersonatorChanged", {
            get: function () {
                return this._impersonatorChanged;
            },
            enumerable: true,
            configurable: true
        });

        ImpersonationAccessGrantType.parseImpersonationAccessGrantType = function (data) {
            if (!data)
                return null;

            return new ImpersonationAccessGrantType(data);
        };

        ImpersonationAccessGrantType.parseImpersonationAccessGrantTypes = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ImpersonationAccessGrantType.parseImpersonationAccessGrantType(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        ImpersonationAccessGrantType.prototype.getRequestBody = function () {
            return {
                impersonated: (this.impersonatedChanged && this.impersonated) ? this.impersonated : undefined,
                impersonator: (this.impersonatorChanged && this.impersonator) ? this.impersonator : undefined,
                'odata.type': this._odataType
            };
        };
        return ImpersonationAccessGrantType;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.ImpersonationAccessGrantType = ImpersonationAccessGrantType;

    /// <summary>
    /// There are no comments for RequiredResourceAccess in the schema.
    /// </summary>
    var RequiredResourceAccess = (function (_super) {
        __extends(RequiredResourceAccess, _super);
        function RequiredResourceAccess(data) {
            var _this = this;
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.RequiredResourceAccess';
            this._resourceAppIdChanged = false;
            this._requiredAppPermissions = new AadGraph.Extensions.ObservableCollection();
            this._requiredAppPermissionsChanged = false;
            this._requiredAppPermissionsChangedListener = (function (value) {
                _this._requiredAppPermissionsChanged = true;
                _this.changed = true;
            }).bind(this);

            if (!data) {
                this._requiredAppPermissions.addChangedListener(this._requiredAppPermissionsChangedListener);
                return;
            }

            this._resourceAppId = data.resourceAppId;
            this._requiredAppPermissions = RequiredAppPermission.parseRequiredAppPermissions(data.requiredAppPermissions);
            this._requiredAppPermissions.addChangedListener(this._requiredAppPermissionsChangedListener);
        }
        Object.defineProperty(RequiredResourceAccess.prototype, "resourceAppId", {
            /// <summary>
            /// There are no comments for Property resourceAppId in the schema.
            /// </summary>
            get: function () {
                return this._resourceAppId;
            },
            set: function (value) {
                if (value !== this._resourceAppId) {
                    this._resourceAppIdChanged = true;
                    this.changed = true;
                }
                this._resourceAppId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(RequiredResourceAccess.prototype, "resourceAppIdChanged", {
            get: function () {
                return this._resourceAppIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RequiredResourceAccess.prototype, "requiredAppPermissions", {
            /// <summary>
            /// There are no comments for Property requiredAppPermissions in the schema.
            /// </summary>
            get: function () {
                return this._requiredAppPermissions;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RequiredResourceAccess.prototype, "requiredAppPermissionsChanged", {
            get: function () {
                return this._requiredAppPermissionsChanged;
            },
            enumerable: true,
            configurable: true
        });

        RequiredResourceAccess.parseRequiredResourceAccess = function (data) {
            if (!data)
                return null;

            return new RequiredResourceAccess(data);
        };

        RequiredResourceAccess.parseRequiredResourceAccesses = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(RequiredResourceAccess.parseRequiredResourceAccess(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        RequiredResourceAccess.prototype.getRequestBody = function () {
            return {
                resourceAppId: (this.resourceAppIdChanged && this.resourceAppId) ? this.resourceAppId : undefined,
                requiredAppPermissions: (this.requiredAppPermissionsChanged) ? (function (requiredAppPermissions) {
                    if (!requiredAppPermissions) {
                        return undefined;
                    }
                    var converted = [];
                    requiredAppPermissions.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.requiredAppPermissions) : undefined,
                'odata.type': this._odataType
            };
        };
        return RequiredResourceAccess;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.RequiredResourceAccess = RequiredResourceAccess;

    /// <summary>
    /// There are no comments for RequiredAppPermission in the schema.
    /// </summary>
    var RequiredAppPermission = (function (_super) {
        __extends(RequiredAppPermission, _super);
        function RequiredAppPermission(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.RequiredAppPermission';
            this._permissionIdChanged = false;
            this._directAccessGrantChanged = false;
            this._impersonationAccessGrants = new Array();
            this._impersonationAccessGrantsChanged = false;

            if (!data) {
                return;
            }

            this._permissionId = data.permissionId;
            this._directAccessGrant = data.directAccessGrant;
            this._impersonationAccessGrants = data.impersonationAccessGrants;
        }
        Object.defineProperty(RequiredAppPermission.prototype, "permissionId", {
            /// <summary>
            /// There are no comments for Property permissionId in the schema.
            /// </summary>
            get: function () {
                return this._permissionId;
            },
            set: function (value) {
                if (value !== this._permissionId) {
                    this._permissionIdChanged = true;
                    this.changed = true;
                }
                this._permissionId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(RequiredAppPermission.prototype, "permissionIdChanged", {
            get: function () {
                return this._permissionIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RequiredAppPermission.prototype, "directAccessGrant", {
            /// <summary>
            /// There are no comments for Property directAccessGrant in the schema.
            /// </summary>
            get: function () {
                return this._directAccessGrant;
            },
            set: function (value) {
                if (value !== this._directAccessGrant) {
                    this._directAccessGrantChanged = true;
                    this.changed = true;
                }
                this._directAccessGrant = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(RequiredAppPermission.prototype, "directAccessGrantChanged", {
            get: function () {
                return this._directAccessGrantChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RequiredAppPermission.prototype, "impersonationAccessGrants", {
            /// <summary>
            /// There are no comments for Property impersonationAccessGrants in the schema.
            /// </summary>
            get: function () {
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RequiredAppPermission.prototype, "impersonationAccessGrantsChanged", {
            get: function () {
                return this._impersonationAccessGrantsChanged;
            },
            enumerable: true,
            configurable: true
        });

        RequiredAppPermission.parseRequiredAppPermission = function (data) {
            if (!data)
                return null;

            return new RequiredAppPermission(data);
        };

        RequiredAppPermission.parseRequiredAppPermissions = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(RequiredAppPermission.parseRequiredAppPermission(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        RequiredAppPermission.prototype.getRequestBody = function () {
            return {
                permissionId: (this.permissionIdChanged && this.permissionId) ? this.permissionId : undefined,
                directAccessGrant: (this.directAccessGrantChanged && this.directAccessGrant) ? this.directAccessGrant : undefined,
                impersonationAccessGrants: (this.impersonationAccessGrantsChanged && this.impersonationAccessGrants) ? this.impersonationAccessGrants : undefined,
                'odata.type': this._odataType
            };
        };
        return RequiredAppPermission;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.RequiredAppPermission = RequiredAppPermission;

    /// <summary>
    /// There are no comments for Notification in the schema.
    /// </summary>
    var NotificationFetcher = (function (_super) {
        __extends(NotificationFetcher, _super);
        function NotificationFetcher(context, path) {
            _super.call(this, context, path);
        }
        NotificationFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/notifications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Notification.parseNotification(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return NotificationFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.NotificationFetcher = NotificationFetcher;

    /// <summary>
    /// There are no comments for Notification in the schema.
    /// </summary>
    var Notification = (function (_super) {
        __extends(Notification, _super);
        function Notification(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Notification';
            this._callbackUriChanged = false;
            this._filters = new Array();
            this._filtersChanged = false;

            if (!data) {
                return;
            }

            this._callbackUri = data.callbackUri;
            this._filters = data.filters;
        }
        Object.defineProperty(Notification.prototype, "callbackUri", {
            /// <summary>
            /// There are no comments for Property callbackUri in the schema.
            /// </summary>
            get: function () {
                return this._callbackUri;
            },
            set: function (value) {
                if (value !== this._callbackUri) {
                    this._callbackUriChanged = true;
                    this.changed = true;
                }
                this._callbackUri = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Notification.prototype, "callbackUriChanged", {
            get: function () {
                return this._callbackUriChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Notification.prototype, "filters", {
            /// <summary>
            /// There are no comments for Property filters in the schema.
            /// </summary>
            get: function () {
                return this._filters;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Notification.prototype, "filtersChanged", {
            get: function () {
                return this._filtersChanged;
            },
            enumerable: true,
            configurable: true
        });

        Notification.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/notifications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Notification.parseNotification(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Notification.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Notification.parseNotification = function (context, path, data) {
            if (!data)
                return null;

            return new Notification(context, path, data);
        };

        Notification.parseNotifications = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Notification.parseNotification(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Notification.prototype.getRequestBody = function () {
            return {
                callbackUri: (this.callbackUriChanged && this.callbackUri) ? this.callbackUri : undefined,
                filters: (this.filtersChanged && this.filters) ? this.filters : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Notification;
    })(DirectoryObject);
    AadGraph.Notification = Notification;

    /// <summary>
    /// There are no comments for AppMetadata in the schema.
    /// </summary>
    var AppMetadata = (function (_super) {
        __extends(AppMetadata, _super);
        function AppMetadata(data) {
            var _this = this;
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AppMetadata';
            this._versionChanged = false;
            this._data = new AadGraph.Extensions.ObservableCollection();
            this._dataChanged = false;
            this._dataChangedListener = (function (value) {
                _this._dataChanged = true;
                _this.changed = true;
            }).bind(this);

            if (!data) {
                this._data.addChangedListener(this._dataChangedListener);
                return;
            }

            this._version = data.version;
            this._data = AppMetadataEntry.parseAppMetadataEntries(data.data);
            this._data.addChangedListener(this._dataChangedListener);
        }
        Object.defineProperty(AppMetadata.prototype, "version", {
            /// <summary>
            /// There are no comments for Property version in the schema.
            /// </summary>
            get: function () {
                return this._version;
            },
            set: function (value) {
                if (value !== this._version) {
                    this._versionChanged = true;
                    this.changed = true;
                }
                this._version = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppMetadata.prototype, "versionChanged", {
            get: function () {
                return this._versionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppMetadata.prototype, "data", {
            /// <summary>
            /// There are no comments for Property data in the schema.
            /// </summary>
            get: function () {
                return this._data;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppMetadata.prototype, "dataChanged", {
            get: function () {
                return this._dataChanged;
            },
            enumerable: true,
            configurable: true
        });

        AppMetadata.parseAppMetadata = function (data) {
            if (!data)
                return null;

            return new AppMetadata(data);
        };

        AppMetadata.parseAppMetadatas = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AppMetadata.parseAppMetadata(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AppMetadata.prototype.getRequestBody = function () {
            return {
                version: (this.versionChanged && this.version) ? this.version : undefined,
                data: (this.dataChanged) ? (function (data) {
                    if (!data) {
                        return undefined;
                    }
                    var converted = [];
                    data.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.data) : undefined,
                'odata.type': this._odataType
            };
        };
        return AppMetadata;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AppMetadata = AppMetadata;

    /// <summary>
    /// There are no comments for AppMetadataEntry in the schema.
    /// </summary>
    var AppMetadataEntry = (function (_super) {
        __extends(AppMetadataEntry, _super);
        function AppMetadataEntry(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AppMetadataEntry';
            this._keyChanged = false;
            this._valueChanged = false;

            if (!data) {
                return;
            }

            this._key = data.key;
            this._value = data.value;
        }
        Object.defineProperty(AppMetadataEntry.prototype, "key", {
            /// <summary>
            /// There are no comments for Property key in the schema.
            /// </summary>
            get: function () {
                return this._key;
            },
            set: function (value) {
                if (value !== this._key) {
                    this._keyChanged = true;
                    this.changed = true;
                }
                this._key = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppMetadataEntry.prototype, "keyChanged", {
            get: function () {
                return this._keyChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AppMetadataEntry.prototype, "value", {
            /// <summary>
            /// There are no comments for Property value in the schema.
            /// </summary>
            get: function () {
                return this._value;
            },
            set: function (value) {
                if (value !== this._value) {
                    this._valueChanged = true;
                    this.changed = true;
                }
                this._value = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AppMetadataEntry.prototype, "valueChanged", {
            get: function () {
                return this._valueChanged;
            },
            enumerable: true,
            configurable: true
        });

        AppMetadataEntry.parseAppMetadataEntry = function (data) {
            if (!data)
                return null;

            return new AppMetadataEntry(data);
        };

        AppMetadataEntry.parseAppMetadataEntries = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AppMetadataEntry.parseAppMetadataEntry(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AppMetadataEntry.prototype.getRequestBody = function () {
            return {
                key: (this.keyChanged && this.key) ? this.key : undefined,
                value: (this.valueChanged && this.value) ? this.value : undefined,
                'odata.type': this._odataType
            };
        };
        return AppMetadataEntry;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AppMetadataEntry = AppMetadataEntry;

    /// <summary>
    /// There are no comments for KeyCredential in the schema.
    /// </summary>
    var KeyCredential = (function (_super) {
        __extends(KeyCredential, _super);
        function KeyCredential(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.KeyCredential';
            this._customKeyIdentifierChanged = false;
            this._endDateChanged = false;
            this._keyIdChanged = false;
            this._startDateChanged = false;
            this._typeChanged = false;
            this._usageChanged = false;
            this._valueChanged = false;

            if (!data) {
                return;
            }

            this._customKeyIdentifier = data.customKeyIdentifier;
            this._endDate = (data.endDate !== null) ? new Date(data.endDate) : null;
            this._keyId = data.keyId;
            this._startDate = (data.startDate !== null) ? new Date(data.startDate) : null;
            this._type = data.type;
            this._usage = data.usage;
            this._value = data.value;
        }
        Object.defineProperty(KeyCredential.prototype, "customKeyIdentifier", {
            /// <summary>
            /// There are no comments for Property customKeyIdentifier in the schema.
            /// </summary>
            get: function () {
                return this._customKeyIdentifier;
            },
            set: function (value) {
                if (value !== this._customKeyIdentifier) {
                    this._customKeyIdentifierChanged = true;
                    this.changed = true;
                }
                this._customKeyIdentifier = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "customKeyIdentifierChanged", {
            get: function () {
                return this._customKeyIdentifierChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "endDate", {
            /// <summary>
            /// There are no comments for Property endDate in the schema.
            /// </summary>
            get: function () {
                return this._endDate;
            },
            set: function (value) {
                if (value !== this._endDate) {
                    this._endDateChanged = true;
                    this.changed = true;
                }
                this._endDate = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "endDateChanged", {
            get: function () {
                return this._endDateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "keyId", {
            /// <summary>
            /// There are no comments for Property keyId in the schema.
            /// </summary>
            get: function () {
                return this._keyId;
            },
            set: function (value) {
                if (value !== this._keyId) {
                    this._keyIdChanged = true;
                    this.changed = true;
                }
                this._keyId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "keyIdChanged", {
            get: function () {
                return this._keyIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "startDate", {
            /// <summary>
            /// There are no comments for Property startDate in the schema.
            /// </summary>
            get: function () {
                return this._startDate;
            },
            set: function (value) {
                if (value !== this._startDate) {
                    this._startDateChanged = true;
                    this.changed = true;
                }
                this._startDate = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "startDateChanged", {
            get: function () {
                return this._startDateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "type", {
            /// <summary>
            /// There are no comments for Property type in the schema.
            /// </summary>
            get: function () {
                return this._type;
            },
            set: function (value) {
                if (value !== this._type) {
                    this._typeChanged = true;
                    this.changed = true;
                }
                this._type = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "typeChanged", {
            get: function () {
                return this._typeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "usage", {
            /// <summary>
            /// There are no comments for Property usage in the schema.
            /// </summary>
            get: function () {
                return this._usage;
            },
            set: function (value) {
                if (value !== this._usage) {
                    this._usageChanged = true;
                    this.changed = true;
                }
                this._usage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "usageChanged", {
            get: function () {
                return this._usageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(KeyCredential.prototype, "value", {
            /// <summary>
            /// There are no comments for Property value in the schema.
            /// </summary>
            get: function () {
                return this._value;
            },
            set: function (value) {
                if (value !== this._value) {
                    this._valueChanged = true;
                    this.changed = true;
                }
                this._value = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(KeyCredential.prototype, "valueChanged", {
            get: function () {
                return this._valueChanged;
            },
            enumerable: true,
            configurable: true
        });

        KeyCredential.parseKeyCredential = function (data) {
            if (!data)
                return null;

            return new KeyCredential(data);
        };

        KeyCredential.parseKeyCredentials = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(KeyCredential.parseKeyCredential(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        KeyCredential.prototype.getRequestBody = function () {
            return {
                customKeyIdentifier: (this.customKeyIdentifierChanged && this.customKeyIdentifier) ? this.customKeyIdentifier : undefined,
                endDate: (this.endDateChanged && this.endDate) ? this.endDate.toString() : undefined,
                keyId: (this.keyIdChanged && this.keyId) ? this.keyId : undefined,
                startDate: (this.startDateChanged && this.startDate) ? this.startDate.toString() : undefined,
                type: (this.typeChanged && this.type) ? this.type : undefined,
                usage: (this.usageChanged && this.usage) ? this.usage : undefined,
                value: (this.valueChanged && this.value) ? this.value : undefined,
                'odata.type': this._odataType
            };
        };
        return KeyCredential;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.KeyCredential = KeyCredential;

    /// <summary>
    /// There are no comments for PasswordCredential in the schema.
    /// </summary>
    var PasswordCredential = (function (_super) {
        __extends(PasswordCredential, _super);
        function PasswordCredential(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.PasswordCredential';
            this._customKeyIdentifierChanged = false;
            this._endDateChanged = false;
            this._keyIdChanged = false;
            this._startDateChanged = false;
            this._valueChanged = false;

            if (!data) {
                return;
            }

            this._customKeyIdentifier = data.customKeyIdentifier;
            this._endDate = (data.endDate !== null) ? new Date(data.endDate) : null;
            this._keyId = data.keyId;
            this._startDate = (data.startDate !== null) ? new Date(data.startDate) : null;
            this._value = data.value;
        }
        Object.defineProperty(PasswordCredential.prototype, "customKeyIdentifier", {
            /// <summary>
            /// There are no comments for Property customKeyIdentifier in the schema.
            /// </summary>
            get: function () {
                return this._customKeyIdentifier;
            },
            set: function (value) {
                if (value !== this._customKeyIdentifier) {
                    this._customKeyIdentifierChanged = true;
                    this.changed = true;
                }
                this._customKeyIdentifier = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordCredential.prototype, "customKeyIdentifierChanged", {
            get: function () {
                return this._customKeyIdentifierChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(PasswordCredential.prototype, "endDate", {
            /// <summary>
            /// There are no comments for Property endDate in the schema.
            /// </summary>
            get: function () {
                return this._endDate;
            },
            set: function (value) {
                if (value !== this._endDate) {
                    this._endDateChanged = true;
                    this.changed = true;
                }
                this._endDate = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordCredential.prototype, "endDateChanged", {
            get: function () {
                return this._endDateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(PasswordCredential.prototype, "keyId", {
            /// <summary>
            /// There are no comments for Property keyId in the schema.
            /// </summary>
            get: function () {
                return this._keyId;
            },
            set: function (value) {
                if (value !== this._keyId) {
                    this._keyIdChanged = true;
                    this.changed = true;
                }
                this._keyId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordCredential.prototype, "keyIdChanged", {
            get: function () {
                return this._keyIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(PasswordCredential.prototype, "startDate", {
            /// <summary>
            /// There are no comments for Property startDate in the schema.
            /// </summary>
            get: function () {
                return this._startDate;
            },
            set: function (value) {
                if (value !== this._startDate) {
                    this._startDateChanged = true;
                    this.changed = true;
                }
                this._startDate = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordCredential.prototype, "startDateChanged", {
            get: function () {
                return this._startDateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(PasswordCredential.prototype, "value", {
            /// <summary>
            /// There are no comments for Property value in the schema.
            /// </summary>
            get: function () {
                return this._value;
            },
            set: function (value) {
                if (value !== this._value) {
                    this._valueChanged = true;
                    this.changed = true;
                }
                this._value = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordCredential.prototype, "valueChanged", {
            get: function () {
                return this._valueChanged;
            },
            enumerable: true,
            configurable: true
        });

        PasswordCredential.parsePasswordCredential = function (data) {
            if (!data)
                return null;

            return new PasswordCredential(data);
        };

        PasswordCredential.parsePasswordCredentials = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(PasswordCredential.parsePasswordCredential(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        PasswordCredential.prototype.getRequestBody = function () {
            return {
                customKeyIdentifier: (this.customKeyIdentifierChanged && this.customKeyIdentifier) ? this.customKeyIdentifier : undefined,
                endDate: (this.endDateChanged && this.endDate) ? this.endDate.toString() : undefined,
                keyId: (this.keyIdChanged && this.keyId) ? this.keyId : undefined,
                startDate: (this.startDateChanged && this.startDate) ? this.startDate.toString() : undefined,
                value: (this.valueChanged && this.value) ? this.value : undefined,
                'odata.type': this._odataType
            };
        };
        return PasswordCredential;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.PasswordCredential = PasswordCredential;

    /// <summary>
    /// There are no comments for CollaborationSpace in the schema.
    /// </summary>
    var CollaborationSpaceFetcher = (function (_super) {
        __extends(CollaborationSpaceFetcher, _super);
        function CollaborationSpaceFetcher(context, path) {
            _super.call(this, context, path);
        }
        CollaborationSpaceFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/collaborationSpaces' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(CollaborationSpace.parseCollaborationSpace(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return CollaborationSpaceFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.CollaborationSpaceFetcher = CollaborationSpaceFetcher;

    /// <summary>
    /// There are no comments for CollaborationSpace in the schema.
    /// </summary>
    var CollaborationSpace = (function (_super) {
        __extends(CollaborationSpace, _super);
        function CollaborationSpace(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.CollaborationSpace';
            this._accountEnabledChanged = false;
            this._allowAccessTo = new Array();
            this._allowAccessToChanged = false;
            this._displayNameChanged = false;
            this._descriptionChanged = false;
            this._mailChanged = false;
            this._mailNicknameChanged = false;
            this._userPrincipalNameChanged = false;
            this._changeMarkerChanged = false;
            this._provisioningSinceChanged = false;

            if (!data) {
                return;
            }

            this._accountEnabled = data.accountEnabled;
            this._allowAccessTo = data.allowAccessTo;
            this._displayName = data.displayName;
            this._description = data.description;
            this._mail = data.mail;
            this._mailNickname = data.mailNickname;
            this._userPrincipalName = data.userPrincipalName;
            this._changeMarker = data.changeMarker;
            this._provisioningSince = (data.provisioningSince !== null) ? new Date(data.provisioningSince) : null;
        }
        Object.defineProperty(CollaborationSpace.prototype, "accountEnabled", {
            /// <summary>
            /// There are no comments for Property accountEnabled in the schema.
            /// </summary>
            get: function () {
                return this._accountEnabled;
            },
            set: function (value) {
                if (value !== this._accountEnabled) {
                    this._accountEnabledChanged = true;
                    this.changed = true;
                }
                this._accountEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "accountEnabledChanged", {
            get: function () {
                return this._accountEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "allowAccessTo", {
            /// <summary>
            /// There are no comments for Property allowAccessTo in the schema.
            /// </summary>
            get: function () {
                return this._allowAccessTo;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "allowAccessToChanged", {
            get: function () {
                return this._allowAccessToChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "description", {
            /// <summary>
            /// There are no comments for Property description in the schema.
            /// </summary>
            get: function () {
                return this._description;
            },
            set: function (value) {
                if (value !== this._description) {
                    this._descriptionChanged = true;
                    this.changed = true;
                }
                this._description = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "descriptionChanged", {
            get: function () {
                return this._descriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "mail", {
            /// <summary>
            /// There are no comments for Property mail in the schema.
            /// </summary>
            get: function () {
                return this._mail;
            },
            set: function (value) {
                if (value !== this._mail) {
                    this._mailChanged = true;
                    this.changed = true;
                }
                this._mail = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "mailChanged", {
            get: function () {
                return this._mailChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "mailNickname", {
            /// <summary>
            /// There are no comments for Property mailNickname in the schema.
            /// </summary>
            get: function () {
                return this._mailNickname;
            },
            set: function (value) {
                if (value !== this._mailNickname) {
                    this._mailNicknameChanged = true;
                    this.changed = true;
                }
                this._mailNickname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "mailNicknameChanged", {
            get: function () {
                return this._mailNicknameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "userPrincipalName", {
            /// <summary>
            /// There are no comments for Property userPrincipalName in the schema.
            /// </summary>
            get: function () {
                return this._userPrincipalName;
            },
            set: function (value) {
                if (value !== this._userPrincipalName) {
                    this._userPrincipalNameChanged = true;
                    this.changed = true;
                }
                this._userPrincipalName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "userPrincipalNameChanged", {
            get: function () {
                return this._userPrincipalNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "changeMarker", {
            /// <summary>
            /// There are no comments for Property changeMarker in the schema.
            /// </summary>
            get: function () {
                return this._changeMarker;
            },
            set: function (value) {
                if (value !== this._changeMarker) {
                    this._changeMarkerChanged = true;
                    this.changed = true;
                }
                this._changeMarker = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "changeMarkerChanged", {
            get: function () {
                return this._changeMarkerChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(CollaborationSpace.prototype, "provisioningSince", {
            /// <summary>
            /// There are no comments for Property provisioningSince in the schema.
            /// </summary>
            get: function () {
                return this._provisioningSince;
            },
            set: function (value) {
                if (value !== this._provisioningSince) {
                    this._provisioningSinceChanged = true;
                    this.changed = true;
                }
                this._provisioningSince = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(CollaborationSpace.prototype, "provisioningSinceChanged", {
            get: function () {
                return this._provisioningSinceChanged;
            },
            enumerable: true,
            configurable: true
        });

        CollaborationSpace.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/collaborationSpaces' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(CollaborationSpace.parseCollaborationSpace(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        CollaborationSpace.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        CollaborationSpace.parseCollaborationSpace = function (context, path, data) {
            if (!data)
                return null;

            return new CollaborationSpace(context, path, data);
        };

        CollaborationSpace.parseCollaborationSpaces = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(CollaborationSpace.parseCollaborationSpace(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        CollaborationSpace.prototype.getRequestBody = function () {
            return {
                accountEnabled: (this.accountEnabledChanged && this.accountEnabled) ? this.accountEnabled : undefined,
                allowAccessTo: (this.allowAccessToChanged && this.allowAccessTo) ? this.allowAccessTo : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                description: (this.descriptionChanged && this.description) ? this.description : undefined,
                mail: (this.mailChanged && this.mail) ? this.mail : undefined,
                mailNickname: (this.mailNicknameChanged && this.mailNickname) ? this.mailNickname : undefined,
                userPrincipalName: (this.userPrincipalNameChanged && this.userPrincipalName) ? this.userPrincipalName : undefined,
                changeMarker: (this.changeMarkerChanged && this.changeMarker) ? this.changeMarker : undefined,
                provisioningSince: (this.provisioningSinceChanged && this.provisioningSince) ? this.provisioningSince.toString() : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return CollaborationSpace;
    })(DirectoryObject);
    AadGraph.CollaborationSpace = CollaborationSpace;

    /// <summary>
    /// There are no comments for Contact in the schema.
    /// </summary>
    var ContactFetcher = (function (_super) {
        __extends(ContactFetcher, _super);
        function ContactFetcher(context, path) {
            _super.call(this, context, path);
        }
        ContactFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/contacts' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Contact.parseContact(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return ContactFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.ContactFetcher = ContactFetcher;

    /// <summary>
    /// There are no comments for Contact in the schema.
    /// </summary>
    var Contact = (function (_super) {
        __extends(Contact, _super);
        function Contact(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Contact';
            this._cityChanged = false;
            this._countryChanged = false;
            this._departmentChanged = false;
            this._dirSyncEnabledChanged = false;
            this._displayNameChanged = false;
            this._facsimileTelephoneNumberChanged = false;
            this._givenNameChanged = false;
            this._jobTitleChanged = false;
            this._lastDirSyncTimeChanged = false;
            this._mailChanged = false;
            this._mailNicknameChanged = false;
            this._mobileChanged = false;
            this._physicalDeliveryOfficeNameChanged = false;
            this._postalCodeChanged = false;
            this._provisioningErrors = new AadGraph.Extensions.ObservableCollection();
            this._provisioningErrorsChanged = false;
            this._provisioningErrorsChangedListener = (function (value) {
                _this._provisioningErrorsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._proxyAddresses = new Array();
            this._proxyAddressesChanged = false;
            this._sipProxyAddressChanged = false;
            this._stateChanged = false;
            this._streetAddressChanged = false;
            this._surnameChanged = false;
            this._telephoneNumberChanged = false;
            this._thumbnailPhotoChanged = false;

            if (!data) {
                this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
                return;
            }

            this._city = data.city;
            this._country = data.country;
            this._department = data.department;
            this._dirSyncEnabled = data.dirSyncEnabled;
            this._displayName = data.displayName;
            this._facsimileTelephoneNumber = data.facsimileTelephoneNumber;
            this._givenName = data.givenName;
            this._jobTitle = data.jobTitle;
            this._lastDirSyncTime = (data.lastDirSyncTime !== null) ? new Date(data.lastDirSyncTime) : null;
            this._mail = data.mail;
            this._mailNickname = data.mailNickname;
            this._mobile = data.mobile;
            this._physicalDeliveryOfficeName = data.physicalDeliveryOfficeName;
            this._postalCode = data.postalCode;
            this._provisioningErrors = ProvisioningError.parseProvisioningErrors(data.provisioningErrors);
            this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
            this._proxyAddresses = data.proxyAddresses;
            this._sipProxyAddress = data.sipProxyAddress;
            this._state = data.state;
            this._streetAddress = data.streetAddress;
            this._surname = data.surname;
            this._telephoneNumber = data.telephoneNumber;
            this._thumbnailPhoto = data.thumbnailPhoto;
        }
        Object.defineProperty(Contact.prototype, "city", {
            /// <summary>
            /// There are no comments for Property city in the schema.
            /// </summary>
            get: function () {
                return this._city;
            },
            set: function (value) {
                if (value !== this._city) {
                    this._cityChanged = true;
                    this.changed = true;
                }
                this._city = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "cityChanged", {
            get: function () {
                return this._cityChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "country", {
            /// <summary>
            /// There are no comments for Property country in the schema.
            /// </summary>
            get: function () {
                return this._country;
            },
            set: function (value) {
                if (value !== this._country) {
                    this._countryChanged = true;
                    this.changed = true;
                }
                this._country = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "countryChanged", {
            get: function () {
                return this._countryChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "department", {
            /// <summary>
            /// There are no comments for Property department in the schema.
            /// </summary>
            get: function () {
                return this._department;
            },
            set: function (value) {
                if (value !== this._department) {
                    this._departmentChanged = true;
                    this.changed = true;
                }
                this._department = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "departmentChanged", {
            get: function () {
                return this._departmentChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "dirSyncEnabled", {
            /// <summary>
            /// There are no comments for Property dirSyncEnabled in the schema.
            /// </summary>
            get: function () {
                return this._dirSyncEnabled;
            },
            set: function (value) {
                if (value !== this._dirSyncEnabled) {
                    this._dirSyncEnabledChanged = true;
                    this.changed = true;
                }
                this._dirSyncEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "dirSyncEnabledChanged", {
            get: function () {
                return this._dirSyncEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "facsimileTelephoneNumber", {
            /// <summary>
            /// There are no comments for Property facsimileTelephoneNumber in the schema.
            /// </summary>
            get: function () {
                return this._facsimileTelephoneNumber;
            },
            set: function (value) {
                if (value !== this._facsimileTelephoneNumber) {
                    this._facsimileTelephoneNumberChanged = true;
                    this.changed = true;
                }
                this._facsimileTelephoneNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "facsimileTelephoneNumberChanged", {
            get: function () {
                return this._facsimileTelephoneNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "givenName", {
            /// <summary>
            /// There are no comments for Property givenName in the schema.
            /// </summary>
            get: function () {
                return this._givenName;
            },
            set: function (value) {
                if (value !== this._givenName) {
                    this._givenNameChanged = true;
                    this.changed = true;
                }
                this._givenName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "givenNameChanged", {
            get: function () {
                return this._givenNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "jobTitle", {
            /// <summary>
            /// There are no comments for Property jobTitle in the schema.
            /// </summary>
            get: function () {
                return this._jobTitle;
            },
            set: function (value) {
                if (value !== this._jobTitle) {
                    this._jobTitleChanged = true;
                    this.changed = true;
                }
                this._jobTitle = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "jobTitleChanged", {
            get: function () {
                return this._jobTitleChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "lastDirSyncTime", {
            /// <summary>
            /// There are no comments for Property lastDirSyncTime in the schema.
            /// </summary>
            get: function () {
                return this._lastDirSyncTime;
            },
            set: function (value) {
                if (value !== this._lastDirSyncTime) {
                    this._lastDirSyncTimeChanged = true;
                    this.changed = true;
                }
                this._lastDirSyncTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "lastDirSyncTimeChanged", {
            get: function () {
                return this._lastDirSyncTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "mail", {
            /// <summary>
            /// There are no comments for Property mail in the schema.
            /// </summary>
            get: function () {
                return this._mail;
            },
            set: function (value) {
                if (value !== this._mail) {
                    this._mailChanged = true;
                    this.changed = true;
                }
                this._mail = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "mailChanged", {
            get: function () {
                return this._mailChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "mailNickname", {
            /// <summary>
            /// There are no comments for Property mailNickname in the schema.
            /// </summary>
            get: function () {
                return this._mailNickname;
            },
            set: function (value) {
                if (value !== this._mailNickname) {
                    this._mailNicknameChanged = true;
                    this.changed = true;
                }
                this._mailNickname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "mailNicknameChanged", {
            get: function () {
                return this._mailNicknameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "mobile", {
            /// <summary>
            /// There are no comments for Property mobile in the schema.
            /// </summary>
            get: function () {
                return this._mobile;
            },
            set: function (value) {
                if (value !== this._mobile) {
                    this._mobileChanged = true;
                    this.changed = true;
                }
                this._mobile = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "mobileChanged", {
            get: function () {
                return this._mobileChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "physicalDeliveryOfficeName", {
            /// <summary>
            /// There are no comments for Property physicalDeliveryOfficeName in the schema.
            /// </summary>
            get: function () {
                return this._physicalDeliveryOfficeName;
            },
            set: function (value) {
                if (value !== this._physicalDeliveryOfficeName) {
                    this._physicalDeliveryOfficeNameChanged = true;
                    this.changed = true;
                }
                this._physicalDeliveryOfficeName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "physicalDeliveryOfficeNameChanged", {
            get: function () {
                return this._physicalDeliveryOfficeNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "postalCode", {
            /// <summary>
            /// There are no comments for Property postalCode in the schema.
            /// </summary>
            get: function () {
                return this._postalCode;
            },
            set: function (value) {
                if (value !== this._postalCode) {
                    this._postalCodeChanged = true;
                    this.changed = true;
                }
                this._postalCode = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "postalCodeChanged", {
            get: function () {
                return this._postalCodeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "provisioningErrors", {
            /// <summary>
            /// There are no comments for Property provisioningErrors in the schema.
            /// </summary>
            get: function () {
                return this._provisioningErrors;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "provisioningErrorsChanged", {
            get: function () {
                return this._provisioningErrorsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "proxyAddresses", {
            /// <summary>
            /// There are no comments for Property proxyAddresses in the schema.
            /// </summary>
            get: function () {
                return this._proxyAddresses;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "proxyAddressesChanged", {
            get: function () {
                return this._proxyAddressesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "sipProxyAddress", {
            /// <summary>
            /// There are no comments for Property sipProxyAddress in the schema.
            /// </summary>
            get: function () {
                return this._sipProxyAddress;
            },
            set: function (value) {
                if (value !== this._sipProxyAddress) {
                    this._sipProxyAddressChanged = true;
                    this.changed = true;
                }
                this._sipProxyAddress = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "sipProxyAddressChanged", {
            get: function () {
                return this._sipProxyAddressChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "state", {
            /// <summary>
            /// There are no comments for Property state in the schema.
            /// </summary>
            get: function () {
                return this._state;
            },
            set: function (value) {
                if (value !== this._state) {
                    this._stateChanged = true;
                    this.changed = true;
                }
                this._state = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "stateChanged", {
            get: function () {
                return this._stateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "streetAddress", {
            /// <summary>
            /// There are no comments for Property streetAddress in the schema.
            /// </summary>
            get: function () {
                return this._streetAddress;
            },
            set: function (value) {
                if (value !== this._streetAddress) {
                    this._streetAddressChanged = true;
                    this.changed = true;
                }
                this._streetAddress = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "streetAddressChanged", {
            get: function () {
                return this._streetAddressChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "surname", {
            /// <summary>
            /// There are no comments for Property surname in the schema.
            /// </summary>
            get: function () {
                return this._surname;
            },
            set: function (value) {
                if (value !== this._surname) {
                    this._surnameChanged = true;
                    this.changed = true;
                }
                this._surname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "surnameChanged", {
            get: function () {
                return this._surnameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "telephoneNumber", {
            /// <summary>
            /// There are no comments for Property telephoneNumber in the schema.
            /// </summary>
            get: function () {
                return this._telephoneNumber;
            },
            set: function (value) {
                if (value !== this._telephoneNumber) {
                    this._telephoneNumberChanged = true;
                    this.changed = true;
                }
                this._telephoneNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "telephoneNumberChanged", {
            get: function () {
                return this._telephoneNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Contact.prototype, "thumbnailPhoto", {
            /// <summary>
            /// There are no comments for Property thumbnailPhoto in the schema.
            /// </summary>
            get: function () {
                return this._thumbnailPhoto;
            },
            set: function (value) {
                if (value !== this._thumbnailPhoto) {
                    this._thumbnailPhotoChanged = true;
                    this.changed = true;
                }
                this._thumbnailPhoto = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Contact.prototype, "thumbnailPhotoChanged", {
            get: function () {
                return this._thumbnailPhotoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Contact.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/contacts' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Contact.parseContact(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Contact.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Contact.parseContact = function (context, path, data) {
            if (!data)
                return null;

            return new Contact(context, path, data);
        };

        Contact.parseContacts = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Contact.parseContact(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Contact.prototype.getRequestBody = function () {
            return {
                city: (this.cityChanged && this.city) ? this.city : undefined,
                country: (this.countryChanged && this.country) ? this.country : undefined,
                department: (this.departmentChanged && this.department) ? this.department : undefined,
                dirSyncEnabled: (this.dirSyncEnabledChanged && this.dirSyncEnabled) ? this.dirSyncEnabled : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                facsimileTelephoneNumber: (this.facsimileTelephoneNumberChanged && this.facsimileTelephoneNumber) ? this.facsimileTelephoneNumber : undefined,
                givenName: (this.givenNameChanged && this.givenName) ? this.givenName : undefined,
                jobTitle: (this.jobTitleChanged && this.jobTitle) ? this.jobTitle : undefined,
                lastDirSyncTime: (this.lastDirSyncTimeChanged && this.lastDirSyncTime) ? this.lastDirSyncTime.toString() : undefined,
                mail: (this.mailChanged && this.mail) ? this.mail : undefined,
                mailNickname: (this.mailNicknameChanged && this.mailNickname) ? this.mailNickname : undefined,
                mobile: (this.mobileChanged && this.mobile) ? this.mobile : undefined,
                physicalDeliveryOfficeName: (this.physicalDeliveryOfficeNameChanged && this.physicalDeliveryOfficeName) ? this.physicalDeliveryOfficeName : undefined,
                postalCode: (this.postalCodeChanged && this.postalCode) ? this.postalCode : undefined,
                provisioningErrors: (this.provisioningErrorsChanged) ? (function (provisioningErrors) {
                    if (!provisioningErrors) {
                        return undefined;
                    }
                    var converted = [];
                    provisioningErrors.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisioningErrors) : undefined,
                proxyAddresses: (this.proxyAddressesChanged && this.proxyAddresses) ? this.proxyAddresses : undefined,
                sipProxyAddress: (this.sipProxyAddressChanged && this.sipProxyAddress) ? this.sipProxyAddress : undefined,
                state: (this.stateChanged && this.state) ? this.state : undefined,
                streetAddress: (this.streetAddressChanged && this.streetAddress) ? this.streetAddress : undefined,
                surname: (this.surnameChanged && this.surname) ? this.surname : undefined,
                telephoneNumber: (this.telephoneNumberChanged && this.telephoneNumber) ? this.telephoneNumber : undefined,
                thumbnailPhoto: (this.thumbnailPhotoChanged && this.thumbnailPhoto) ? this.thumbnailPhoto : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Contact;
    })(DirectoryObject);
    AadGraph.Contact = Contact;

    /// <summary>
    /// There are no comments for ProvisioningError in the schema.
    /// </summary>
    var ProvisioningError = (function (_super) {
        __extends(ProvisioningError, _super);
        function ProvisioningError(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ProvisioningError';
            this._errorDetailChanged = false;
            this._resolvedChanged = false;
            this._serviceChanged = false;
            this._timestampChanged = false;

            if (!data) {
                return;
            }

            this._errorDetail = data.errorDetail;
            this._resolved = data.resolved;
            this._service = data.service;
            this._timestamp = (data.timestamp !== null) ? new Date(data.timestamp) : null;
        }
        Object.defineProperty(ProvisioningError.prototype, "errorDetail", {
            /// <summary>
            /// There are no comments for Property errorDetail in the schema.
            /// </summary>
            get: function () {
                return this._errorDetail;
            },
            set: function (value) {
                if (value !== this._errorDetail) {
                    this._errorDetailChanged = true;
                    this.changed = true;
                }
                this._errorDetail = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisioningError.prototype, "errorDetailChanged", {
            get: function () {
                return this._errorDetailChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ProvisioningError.prototype, "resolved", {
            /// <summary>
            /// There are no comments for Property resolved in the schema.
            /// </summary>
            get: function () {
                return this._resolved;
            },
            set: function (value) {
                if (value !== this._resolved) {
                    this._resolvedChanged = true;
                    this.changed = true;
                }
                this._resolved = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisioningError.prototype, "resolvedChanged", {
            get: function () {
                return this._resolvedChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ProvisioningError.prototype, "service", {
            /// <summary>
            /// There are no comments for Property service in the schema.
            /// </summary>
            get: function () {
                return this._service;
            },
            set: function (value) {
                if (value !== this._service) {
                    this._serviceChanged = true;
                    this.changed = true;
                }
                this._service = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisioningError.prototype, "serviceChanged", {
            get: function () {
                return this._serviceChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ProvisioningError.prototype, "timestamp", {
            /// <summary>
            /// There are no comments for Property timestamp in the schema.
            /// </summary>
            get: function () {
                return this._timestamp;
            },
            set: function (value) {
                if (value !== this._timestamp) {
                    this._timestampChanged = true;
                    this.changed = true;
                }
                this._timestamp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisioningError.prototype, "timestampChanged", {
            get: function () {
                return this._timestampChanged;
            },
            enumerable: true,
            configurable: true
        });

        ProvisioningError.parseProvisioningError = function (data) {
            if (!data)
                return null;

            return new ProvisioningError(data);
        };

        ProvisioningError.parseProvisioningErrors = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ProvisioningError.parseProvisioningError(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        ProvisioningError.prototype.getRequestBody = function () {
            return {
                errorDetail: (this.errorDetailChanged && this.errorDetail) ? this.errorDetail : undefined,
                resolved: (this.resolvedChanged && this.resolved) ? this.resolved : undefined,
                service: (this.serviceChanged && this.service) ? this.service : undefined,
                timestamp: (this.timestampChanged && this.timestamp) ? this.timestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return ProvisioningError;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.ProvisioningError = ProvisioningError;

    /// <summary>
    /// There are no comments for Device in the schema.
    /// </summary>
    var DeviceFetcher = (function (_super) {
        __extends(DeviceFetcher, _super);
        function DeviceFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(DeviceFetcher.prototype, "registeredOwners", {
            /// <summary>
            /// There are no comments for Query Property registeredOwners in the schema.
            /// </summary>
            get: function () {
                if (this._registeredOwners === undefined) {
                    this._registeredOwners = new DirectoryObjects(this.context, this.getPath("registeredOwners"));
                }
                return this._registeredOwners;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceFetcher.prototype, "registeredUsers", {
            /// <summary>
            /// There are no comments for Query Property registeredUsers in the schema.
            /// </summary>
            get: function () {
                if (this._registeredUsers === undefined) {
                    this._registeredUsers = new DirectoryObjects(this.context, this.getPath("registeredUsers"));
                }
                return this._registeredUsers;
            },
            enumerable: true,
            configurable: true
        });

        DeviceFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/devices' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Device.parseDevice(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return DeviceFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.DeviceFetcher = DeviceFetcher;

    /// <summary>
    /// There are no comments for Device in the schema.
    /// </summary>
    var Device = (function (_super) {
        __extends(Device, _super);
        function Device(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Device';
            this._accountEnabledChanged = false;
            this._alternativeSecurityIds = new AadGraph.Extensions.ObservableCollection();
            this._alternativeSecurityIdsChanged = false;
            this._alternativeSecurityIdsChangedListener = (function (value) {
                _this._alternativeSecurityIdsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._approximateLastLogonTimestampChanged = false;
            this._deviceIdChanged = false;
            this._deviceObjectVersionChanged = false;
            this._deviceOSTypeChanged = false;
            this._deviceOSVersionChanged = false;
            this._devicePhysicalIds = new Array();
            this._devicePhysicalIdsChanged = false;
            this._dirSyncEnabledChanged = false;
            this._displayNameChanged = false;
            this._lastDirSyncTimeChanged = false;

            if (!data) {
                this._alternativeSecurityIds.addChangedListener(this._alternativeSecurityIdsChangedListener);
                return;
            }

            this._accountEnabled = data.accountEnabled;
            this._alternativeSecurityIds = AlternativeSecurityId.parseAlternativeSecurityIds(data.alternativeSecurityIds);
            this._alternativeSecurityIds.addChangedListener(this._alternativeSecurityIdsChangedListener);
            this._approximateLastLogonTimestamp = (data.approximateLastLogonTimestamp !== null) ? new Date(data.approximateLastLogonTimestamp) : null;
            this._deviceId = data.deviceId;
            this._deviceObjectVersion = data.deviceObjectVersion;
            this._deviceOSType = data.deviceOSType;
            this._deviceOSVersion = data.deviceOSVersion;
            this._devicePhysicalIds = data.devicePhysicalIds;
            this._dirSyncEnabled = data.dirSyncEnabled;
            this._displayName = data.displayName;
            this._lastDirSyncTime = (data.lastDirSyncTime !== null) ? new Date(data.lastDirSyncTime) : null;
        }
        Object.defineProperty(Device.prototype, "accountEnabled", {
            /// <summary>
            /// There are no comments for Property accountEnabled in the schema.
            /// </summary>
            get: function () {
                return this._accountEnabled;
            },
            set: function (value) {
                if (value !== this._accountEnabled) {
                    this._accountEnabledChanged = true;
                    this.changed = true;
                }
                this._accountEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "accountEnabledChanged", {
            get: function () {
                return this._accountEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "alternativeSecurityIds", {
            /// <summary>
            /// There are no comments for Property alternativeSecurityIds in the schema.
            /// </summary>
            get: function () {
                return this._alternativeSecurityIds;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "alternativeSecurityIdsChanged", {
            get: function () {
                return this._alternativeSecurityIdsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "approximateLastLogonTimestamp", {
            /// <summary>
            /// There are no comments for Property approximateLastLogonTimestamp in the schema.
            /// </summary>
            get: function () {
                return this._approximateLastLogonTimestamp;
            },
            set: function (value) {
                if (value !== this._approximateLastLogonTimestamp) {
                    this._approximateLastLogonTimestampChanged = true;
                    this.changed = true;
                }
                this._approximateLastLogonTimestamp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "approximateLastLogonTimestampChanged", {
            get: function () {
                return this._approximateLastLogonTimestampChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "deviceId", {
            /// <summary>
            /// There are no comments for Property deviceId in the schema.
            /// </summary>
            get: function () {
                return this._deviceId;
            },
            set: function (value) {
                if (value !== this._deviceId) {
                    this._deviceIdChanged = true;
                    this.changed = true;
                }
                this._deviceId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "deviceIdChanged", {
            get: function () {
                return this._deviceIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "deviceObjectVersion", {
            /// <summary>
            /// There are no comments for Property deviceObjectVersion in the schema.
            /// </summary>
            get: function () {
                return this._deviceObjectVersion;
            },
            set: function (value) {
                if (value !== this._deviceObjectVersion) {
                    this._deviceObjectVersionChanged = true;
                    this.changed = true;
                }
                this._deviceObjectVersion = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "deviceObjectVersionChanged", {
            get: function () {
                return this._deviceObjectVersionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "deviceOSType", {
            /// <summary>
            /// There are no comments for Property deviceOSType in the schema.
            /// </summary>
            get: function () {
                return this._deviceOSType;
            },
            set: function (value) {
                if (value !== this._deviceOSType) {
                    this._deviceOSTypeChanged = true;
                    this.changed = true;
                }
                this._deviceOSType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "deviceOSTypeChanged", {
            get: function () {
                return this._deviceOSTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "deviceOSVersion", {
            /// <summary>
            /// There are no comments for Property deviceOSVersion in the schema.
            /// </summary>
            get: function () {
                return this._deviceOSVersion;
            },
            set: function (value) {
                if (value !== this._deviceOSVersion) {
                    this._deviceOSVersionChanged = true;
                    this.changed = true;
                }
                this._deviceOSVersion = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "deviceOSVersionChanged", {
            get: function () {
                return this._deviceOSVersionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "devicePhysicalIds", {
            /// <summary>
            /// There are no comments for Property devicePhysicalIds in the schema.
            /// </summary>
            get: function () {
                return this._devicePhysicalIds;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "devicePhysicalIdsChanged", {
            get: function () {
                return this._devicePhysicalIdsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "dirSyncEnabled", {
            /// <summary>
            /// There are no comments for Property dirSyncEnabled in the schema.
            /// </summary>
            get: function () {
                return this._dirSyncEnabled;
            },
            set: function (value) {
                if (value !== this._dirSyncEnabled) {
                    this._dirSyncEnabledChanged = true;
                    this.changed = true;
                }
                this._dirSyncEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "dirSyncEnabledChanged", {
            get: function () {
                return this._dirSyncEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "lastDirSyncTime", {
            /// <summary>
            /// There are no comments for Property lastDirSyncTime in the schema.
            /// </summary>
            get: function () {
                return this._lastDirSyncTime;
            },
            set: function (value) {
                if (value !== this._lastDirSyncTime) {
                    this._lastDirSyncTimeChanged = true;
                    this.changed = true;
                }
                this._lastDirSyncTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Device.prototype, "lastDirSyncTimeChanged", {
            get: function () {
                return this._lastDirSyncTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "registeredOwners", {
            /// <summary>
            /// There are no comments for Query Property registeredOwners in the schema.
            /// </summary>
            get: function () {
                if (this._registeredOwners === undefined) {
                    this._registeredOwners = new DirectoryObjects(this.context, this.getPath("registeredOwners"));
                }
                return this._registeredOwners;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Device.prototype, "registeredUsers", {
            /// <summary>
            /// There are no comments for Query Property registeredUsers in the schema.
            /// </summary>
            get: function () {
                if (this._registeredUsers === undefined) {
                    this._registeredUsers = new DirectoryObjects(this.context, this.getPath("registeredUsers"));
                }
                return this._registeredUsers;
            },
            enumerable: true,
            configurable: true
        });

        Device.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/devices' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Device.parseDevice(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Device.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Device.parseDevice = function (context, path, data) {
            if (!data)
                return null;

            return new Device(context, path, data);
        };

        Device.parseDevices = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Device.parseDevice(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Device.prototype.getRequestBody = function () {
            return {
                accountEnabled: (this.accountEnabledChanged && this.accountEnabled) ? this.accountEnabled : undefined,
                alternativeSecurityIds: (this.alternativeSecurityIdsChanged) ? (function (alternativeSecurityIds) {
                    if (!alternativeSecurityIds) {
                        return undefined;
                    }
                    var converted = [];
                    alternativeSecurityIds.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.alternativeSecurityIds) : undefined,
                approximateLastLogonTimestamp: (this.approximateLastLogonTimestampChanged && this.approximateLastLogonTimestamp) ? this.approximateLastLogonTimestamp.toString() : undefined,
                deviceId: (this.deviceIdChanged && this.deviceId) ? this.deviceId : undefined,
                deviceObjectVersion: (this.deviceObjectVersionChanged && this.deviceObjectVersion) ? this.deviceObjectVersion : undefined,
                deviceOSType: (this.deviceOSTypeChanged && this.deviceOSType) ? this.deviceOSType : undefined,
                deviceOSVersion: (this.deviceOSVersionChanged && this.deviceOSVersion) ? this.deviceOSVersion : undefined,
                devicePhysicalIds: (this.devicePhysicalIdsChanged && this.devicePhysicalIds) ? this.devicePhysicalIds : undefined,
                dirSyncEnabled: (this.dirSyncEnabledChanged && this.dirSyncEnabled) ? this.dirSyncEnabled : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                lastDirSyncTime: (this.lastDirSyncTimeChanged && this.lastDirSyncTime) ? this.lastDirSyncTime.toString() : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Device;
    })(DirectoryObject);
    AadGraph.Device = Device;

    /// <summary>
    /// There are no comments for AlternativeSecurityId in the schema.
    /// </summary>
    var AlternativeSecurityId = (function (_super) {
        __extends(AlternativeSecurityId, _super);
        function AlternativeSecurityId(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AlternativeSecurityId';
            this._typeChanged = false;
            this._identityProviderChanged = false;
            this._keyChanged = false;

            if (!data) {
                return;
            }

            this._type = data.type;
            this._identityProvider = data.identityProvider;
            this._key = data.key;
        }
        Object.defineProperty(AlternativeSecurityId.prototype, "type", {
            /// <summary>
            /// There are no comments for Property type in the schema.
            /// </summary>
            get: function () {
                return this._type;
            },
            set: function (value) {
                if (value !== this._type) {
                    this._typeChanged = true;
                    this.changed = true;
                }
                this._type = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AlternativeSecurityId.prototype, "typeChanged", {
            get: function () {
                return this._typeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AlternativeSecurityId.prototype, "identityProvider", {
            /// <summary>
            /// There are no comments for Property identityProvider in the schema.
            /// </summary>
            get: function () {
                return this._identityProvider;
            },
            set: function (value) {
                if (value !== this._identityProvider) {
                    this._identityProviderChanged = true;
                    this.changed = true;
                }
                this._identityProvider = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AlternativeSecurityId.prototype, "identityProviderChanged", {
            get: function () {
                return this._identityProviderChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AlternativeSecurityId.prototype, "key", {
            /// <summary>
            /// There are no comments for Property key in the schema.
            /// </summary>
            get: function () {
                return this._key;
            },
            set: function (value) {
                if (value !== this._key) {
                    this._keyChanged = true;
                    this.changed = true;
                }
                this._key = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AlternativeSecurityId.prototype, "keyChanged", {
            get: function () {
                return this._keyChanged;
            },
            enumerable: true,
            configurable: true
        });

        AlternativeSecurityId.parseAlternativeSecurityId = function (data) {
            if (!data)
                return null;

            return new AlternativeSecurityId(data);
        };

        AlternativeSecurityId.parseAlternativeSecurityIds = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AlternativeSecurityId.parseAlternativeSecurityId(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AlternativeSecurityId.prototype.getRequestBody = function () {
            return {
                type: (this.typeChanged && this.type) ? this.type : undefined,
                identityProvider: (this.identityProviderChanged && this.identityProvider) ? this.identityProvider : undefined,
                key: (this.keyChanged && this.key) ? this.key : undefined,
                'odata.type': this._odataType
            };
        };
        return AlternativeSecurityId;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AlternativeSecurityId = AlternativeSecurityId;

    /// <summary>
    /// There are no comments for DeviceConfiguration in the schema.
    /// </summary>
    var DeviceConfigurationFetcher = (function (_super) {
        __extends(DeviceConfigurationFetcher, _super);
        function DeviceConfigurationFetcher(context, path) {
            _super.call(this, context, path);
        }
        DeviceConfigurationFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/deviceConfigurations' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DeviceConfiguration.parseDeviceConfiguration(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return DeviceConfigurationFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.DeviceConfigurationFetcher = DeviceConfigurationFetcher;

    /// <summary>
    /// There are no comments for DeviceConfiguration in the schema.
    /// </summary>
    var DeviceConfiguration = (function (_super) {
        __extends(DeviceConfiguration, _super);
        function DeviceConfiguration(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.DeviceConfiguration';
            this._publicIssuerCertificates = new Array();
            this._publicIssuerCertificatesChanged = false;
            this._cloudPublicIssuerCertificates = new Array();
            this._cloudPublicIssuerCertificatesChanged = false;
            this._registrationQuotaChanged = false;
            this._maximumRegistrationInactivityPeriodChanged = false;

            if (!data) {
                return;
            }

            this._publicIssuerCertificates = data.publicIssuerCertificates;
            this._cloudPublicIssuerCertificates = data.cloudPublicIssuerCertificates;
            this._registrationQuota = data.registrationQuota;
            this._maximumRegistrationInactivityPeriod = data.maximumRegistrationInactivityPeriod;
        }
        Object.defineProperty(DeviceConfiguration.prototype, "publicIssuerCertificates", {
            /// <summary>
            /// There are no comments for Property publicIssuerCertificates in the schema.
            /// </summary>
            get: function () {
                return this._publicIssuerCertificates;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceConfiguration.prototype, "publicIssuerCertificatesChanged", {
            get: function () {
                return this._publicIssuerCertificatesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceConfiguration.prototype, "cloudPublicIssuerCertificates", {
            /// <summary>
            /// There are no comments for Property cloudPublicIssuerCertificates in the schema.
            /// </summary>
            get: function () {
                return this._cloudPublicIssuerCertificates;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceConfiguration.prototype, "cloudPublicIssuerCertificatesChanged", {
            get: function () {
                return this._cloudPublicIssuerCertificatesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceConfiguration.prototype, "registrationQuota", {
            /// <summary>
            /// There are no comments for Property registrationQuota in the schema.
            /// </summary>
            get: function () {
                return this._registrationQuota;
            },
            set: function (value) {
                if (value !== this._registrationQuota) {
                    this._registrationQuotaChanged = true;
                    this.changed = true;
                }
                this._registrationQuota = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DeviceConfiguration.prototype, "registrationQuotaChanged", {
            get: function () {
                return this._registrationQuotaChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DeviceConfiguration.prototype, "maximumRegistrationInactivityPeriod", {
            /// <summary>
            /// There are no comments for Property maximumRegistrationInactivityPeriod in the schema.
            /// </summary>
            get: function () {
                return this._maximumRegistrationInactivityPeriod;
            },
            set: function (value) {
                if (value !== this._maximumRegistrationInactivityPeriod) {
                    this._maximumRegistrationInactivityPeriodChanged = true;
                    this.changed = true;
                }
                this._maximumRegistrationInactivityPeriod = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DeviceConfiguration.prototype, "maximumRegistrationInactivityPeriodChanged", {
            get: function () {
                return this._maximumRegistrationInactivityPeriodChanged;
            },
            enumerable: true,
            configurable: true
        });

        DeviceConfiguration.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/deviceConfigurations' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DeviceConfiguration.parseDeviceConfiguration(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DeviceConfiguration.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DeviceConfiguration.parseDeviceConfiguration = function (context, path, data) {
            if (!data)
                return null;

            return new DeviceConfiguration(context, path, data);
        };

        DeviceConfiguration.parseDeviceConfigurations = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(DeviceConfiguration.parseDeviceConfiguration(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        DeviceConfiguration.prototype.getRequestBody = function () {
            return {
                publicIssuerCertificates: (this.publicIssuerCertificatesChanged && this.publicIssuerCertificates) ? this.publicIssuerCertificates : undefined,
                cloudPublicIssuerCertificates: (this.cloudPublicIssuerCertificatesChanged && this.cloudPublicIssuerCertificates) ? this.cloudPublicIssuerCertificates : undefined,
                registrationQuota: (this.registrationQuotaChanged && this.registrationQuota) ? this.registrationQuota : undefined,
                maximumRegistrationInactivityPeriod: (this.maximumRegistrationInactivityPeriodChanged && this.maximumRegistrationInactivityPeriod) ? this.maximumRegistrationInactivityPeriod : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return DeviceConfiguration;
    })(DirectoryObject);
    AadGraph.DeviceConfiguration = DeviceConfiguration;

    /// <summary>
    /// There are no comments for DirectoryLinkChange in the schema.
    /// </summary>
    var DirectoryLinkChangeFetcher = (function (_super) {
        __extends(DirectoryLinkChangeFetcher, _super);
        function DirectoryLinkChangeFetcher(context, path) {
            _super.call(this, context, path);
        }
        DirectoryLinkChangeFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directoryLinkChanges' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectoryLinkChange.parseDirectoryLinkChange(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return DirectoryLinkChangeFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.DirectoryLinkChangeFetcher = DirectoryLinkChangeFetcher;

    /// <summary>
    /// There are no comments for DirectoryLinkChange in the schema.
    /// </summary>
    var DirectoryLinkChange = (function (_super) {
        __extends(DirectoryLinkChange, _super);
        function DirectoryLinkChange(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.DirectoryLinkChange';
            this._associationTypeChanged = false;
            this._sourceObjectIdChanged = false;
            this._sourceObjectTypeChanged = false;
            this._sourceObjectUriChanged = false;
            this._targetObjectIdChanged = false;
            this._targetObjectTypeChanged = false;
            this._targetObjectUriChanged = false;

            if (!data) {
                return;
            }

            this._associationType = data.associationType;
            this._sourceObjectId = data.sourceObjectId;
            this._sourceObjectType = data.sourceObjectType;
            this._sourceObjectUri = data.sourceObjectUri;
            this._targetObjectId = data.targetObjectId;
            this._targetObjectType = data.targetObjectType;
            this._targetObjectUri = data.targetObjectUri;
        }
        Object.defineProperty(DirectoryLinkChange.prototype, "associationType", {
            /// <summary>
            /// There are no comments for Property associationType in the schema.
            /// </summary>
            get: function () {
                return this._associationType;
            },
            set: function (value) {
                if (value !== this._associationType) {
                    this._associationTypeChanged = true;
                    this.changed = true;
                }
                this._associationType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "associationTypeChanged", {
            get: function () {
                return this._associationTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectId", {
            /// <summary>
            /// There are no comments for Property sourceObjectId in the schema.
            /// </summary>
            get: function () {
                return this._sourceObjectId;
            },
            set: function (value) {
                if (value !== this._sourceObjectId) {
                    this._sourceObjectIdChanged = true;
                    this.changed = true;
                }
                this._sourceObjectId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectIdChanged", {
            get: function () {
                return this._sourceObjectIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectType", {
            /// <summary>
            /// There are no comments for Property sourceObjectType in the schema.
            /// </summary>
            get: function () {
                return this._sourceObjectType;
            },
            set: function (value) {
                if (value !== this._sourceObjectType) {
                    this._sourceObjectTypeChanged = true;
                    this.changed = true;
                }
                this._sourceObjectType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectTypeChanged", {
            get: function () {
                return this._sourceObjectTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectUri", {
            /// <summary>
            /// There are no comments for Property sourceObjectUri in the schema.
            /// </summary>
            get: function () {
                return this._sourceObjectUri;
            },
            set: function (value) {
                if (value !== this._sourceObjectUri) {
                    this._sourceObjectUriChanged = true;
                    this.changed = true;
                }
                this._sourceObjectUri = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "sourceObjectUriChanged", {
            get: function () {
                return this._sourceObjectUriChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectId", {
            /// <summary>
            /// There are no comments for Property targetObjectId in the schema.
            /// </summary>
            get: function () {
                return this._targetObjectId;
            },
            set: function (value) {
                if (value !== this._targetObjectId) {
                    this._targetObjectIdChanged = true;
                    this.changed = true;
                }
                this._targetObjectId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectIdChanged", {
            get: function () {
                return this._targetObjectIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectType", {
            /// <summary>
            /// There are no comments for Property targetObjectType in the schema.
            /// </summary>
            get: function () {
                return this._targetObjectType;
            },
            set: function (value) {
                if (value !== this._targetObjectType) {
                    this._targetObjectTypeChanged = true;
                    this.changed = true;
                }
                this._targetObjectType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectTypeChanged", {
            get: function () {
                return this._targetObjectTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectUri", {
            /// <summary>
            /// There are no comments for Property targetObjectUri in the schema.
            /// </summary>
            get: function () {
                return this._targetObjectUri;
            },
            set: function (value) {
                if (value !== this._targetObjectUri) {
                    this._targetObjectUriChanged = true;
                    this.changed = true;
                }
                this._targetObjectUri = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectoryLinkChange.prototype, "targetObjectUriChanged", {
            get: function () {
                return this._targetObjectUriChanged;
            },
            enumerable: true,
            configurable: true
        });

        DirectoryLinkChange.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directoryLinkChanges' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectoryLinkChange.parseDirectoryLinkChange(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryLinkChange.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectoryLinkChange.parseDirectoryLinkChange = function (context, path, data) {
            if (!data)
                return null;

            return new DirectoryLinkChange(context, path, data);
        };

        DirectoryLinkChange.parseDirectoryLinkChanges = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(DirectoryLinkChange.parseDirectoryLinkChange(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        DirectoryLinkChange.prototype.getRequestBody = function () {
            return {
                associationType: (this.associationTypeChanged && this.associationType) ? this.associationType : undefined,
                sourceObjectId: (this.sourceObjectIdChanged && this.sourceObjectId) ? this.sourceObjectId : undefined,
                sourceObjectType: (this.sourceObjectTypeChanged && this.sourceObjectType) ? this.sourceObjectType : undefined,
                sourceObjectUri: (this.sourceObjectUriChanged && this.sourceObjectUri) ? this.sourceObjectUri : undefined,
                targetObjectId: (this.targetObjectIdChanged && this.targetObjectId) ? this.targetObjectId : undefined,
                targetObjectType: (this.targetObjectTypeChanged && this.targetObjectType) ? this.targetObjectType : undefined,
                targetObjectUri: (this.targetObjectUriChanged && this.targetObjectUri) ? this.targetObjectUri : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return DirectoryLinkChange;
    })(DirectoryObject);
    AadGraph.DirectoryLinkChange = DirectoryLinkChange;

    /// <summary>
    /// There are no comments for DirectAccessGrant in the schema.
    /// </summary>
    var DirectAccessGrantFetcher = (function (_super) {
        __extends(DirectAccessGrantFetcher, _super);
        function DirectAccessGrantFetcher(context, path) {
            _super.call(this, context, path);
        }
        DirectAccessGrantFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectAccessGrant.parseDirectAccessGrant(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return DirectAccessGrantFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.DirectAccessGrantFetcher = DirectAccessGrantFetcher;

    /// <summary>
    /// There are no comments for DirectAccessGrant in the schema.
    /// </summary>
    var DirectAccessGrant = (function (_super) {
        __extends(DirectAccessGrant, _super);
        function DirectAccessGrant(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.DirectAccessGrant';
            this._creationTimestampChanged = false;
            this._permissionIdChanged = false;
            this._principalDisplayNameChanged = false;
            this._principalIdChanged = false;
            this._principalTypeChanged = false;
            this._resourceDisplayNameChanged = false;
            this._resourceIdChanged = false;

            if (!data) {
                return;
            }

            this._creationTimestamp = (data.creationTimestamp !== null) ? new Date(data.creationTimestamp) : null;
            this._permissionId = data.permissionId;
            this._principalDisplayName = data.principalDisplayName;
            this._principalId = data.principalId;
            this._principalType = data.principalType;
            this._resourceDisplayName = data.resourceDisplayName;
            this._resourceId = data.resourceId;
        }
        Object.defineProperty(DirectAccessGrant.prototype, "creationTimestamp", {
            /// <summary>
            /// There are no comments for Property creationTimestamp in the schema.
            /// </summary>
            get: function () {
                return this._creationTimestamp;
            },
            set: function (value) {
                if (value !== this._creationTimestamp) {
                    this._creationTimestampChanged = true;
                    this.changed = true;
                }
                this._creationTimestamp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "creationTimestampChanged", {
            get: function () {
                return this._creationTimestampChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "permissionId", {
            /// <summary>
            /// There are no comments for Property permissionId in the schema.
            /// </summary>
            get: function () {
                return this._permissionId;
            },
            set: function (value) {
                if (value !== this._permissionId) {
                    this._permissionIdChanged = true;
                    this.changed = true;
                }
                this._permissionId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "permissionIdChanged", {
            get: function () {
                return this._permissionIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "principalDisplayName", {
            /// <summary>
            /// There are no comments for Property principalDisplayName in the schema.
            /// </summary>
            get: function () {
                return this._principalDisplayName;
            },
            set: function (value) {
                if (value !== this._principalDisplayName) {
                    this._principalDisplayNameChanged = true;
                    this.changed = true;
                }
                this._principalDisplayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "principalDisplayNameChanged", {
            get: function () {
                return this._principalDisplayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "principalId", {
            /// <summary>
            /// There are no comments for Property principalId in the schema.
            /// </summary>
            get: function () {
                return this._principalId;
            },
            set: function (value) {
                if (value !== this._principalId) {
                    this._principalIdChanged = true;
                    this.changed = true;
                }
                this._principalId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "principalIdChanged", {
            get: function () {
                return this._principalIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "principalType", {
            /// <summary>
            /// There are no comments for Property principalType in the schema.
            /// </summary>
            get: function () {
                return this._principalType;
            },
            set: function (value) {
                if (value !== this._principalType) {
                    this._principalTypeChanged = true;
                    this.changed = true;
                }
                this._principalType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "principalTypeChanged", {
            get: function () {
                return this._principalTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "resourceDisplayName", {
            /// <summary>
            /// There are no comments for Property resourceDisplayName in the schema.
            /// </summary>
            get: function () {
                return this._resourceDisplayName;
            },
            set: function (value) {
                if (value !== this._resourceDisplayName) {
                    this._resourceDisplayNameChanged = true;
                    this.changed = true;
                }
                this._resourceDisplayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "resourceDisplayNameChanged", {
            get: function () {
                return this._resourceDisplayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(DirectAccessGrant.prototype, "resourceId", {
            /// <summary>
            /// There are no comments for Property resourceId in the schema.
            /// </summary>
            get: function () {
                return this._resourceId;
            },
            set: function (value) {
                if (value !== this._resourceId) {
                    this._resourceIdChanged = true;
                    this.changed = true;
                }
                this._resourceId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(DirectAccessGrant.prototype, "resourceIdChanged", {
            get: function () {
                return this._resourceIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        DirectAccessGrant.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/directAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(DirectAccessGrant.parseDirectAccessGrant(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectAccessGrant.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        DirectAccessGrant.parseDirectAccessGrant = function (context, path, data) {
            if (!data)
                return null;

            return new DirectAccessGrant(context, path, data);
        };

        DirectAccessGrant.parseDirectAccessGrants = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(DirectAccessGrant.parseDirectAccessGrant(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        DirectAccessGrant.prototype.getRequestBody = function () {
            return {
                creationTimestamp: (this.creationTimestampChanged && this.creationTimestamp) ? this.creationTimestamp.toString() : undefined,
                permissionId: (this.permissionIdChanged && this.permissionId) ? this.permissionId : undefined,
                principalDisplayName: (this.principalDisplayNameChanged && this.principalDisplayName) ? this.principalDisplayName : undefined,
                principalId: (this.principalIdChanged && this.principalId) ? this.principalId : undefined,
                principalType: (this.principalTypeChanged && this.principalType) ? this.principalType : undefined,
                resourceDisplayName: (this.resourceDisplayNameChanged && this.resourceDisplayName) ? this.resourceDisplayName : undefined,
                resourceId: (this.resourceIdChanged && this.resourceId) ? this.resourceId : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return DirectAccessGrant;
    })(DirectoryObject);
    AadGraph.DirectAccessGrant = DirectAccessGrant;

    /// <summary>
    /// There are no comments for Group in the schema.
    /// </summary>
    var GroupFetcher = (function (_super) {
        __extends(GroupFetcher, _super);
        function GroupFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(GroupFetcher.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(GroupFetcher.prototype, "pendingMembers", {
            /// <summary>
            /// There are no comments for Query Property pendingMembers in the schema.
            /// </summary>
            get: function () {
                if (this._pendingMembers === undefined) {
                    this._pendingMembers = new DirectoryObjects(this.context, this.getPath("pendingMembers"));
                }
                return this._pendingMembers;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(GroupFetcher.prototype, "allowAccessTo", {
            /// <summary>
            /// There are no comments for Query Property allowAccessTo in the schema.
            /// </summary>
            get: function () {
                if (this._allowAccessTo === undefined) {
                    this._allowAccessTo = new DirectoryObjects(this.context, this.getPath("allowAccessTo"));
                }
                return this._allowAccessTo;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(GroupFetcher.prototype, "hasAccessTo", {
            /// <summary>
            /// There are no comments for Query Property hasAccessTo in the schema.
            /// </summary>
            get: function () {
                if (this._hasAccessTo === undefined) {
                    this._hasAccessTo = new DirectoryObjects(this.context, this.getPath("hasAccessTo"));
                }
                return this._hasAccessTo;
            },
            enumerable: true,
            configurable: true
        });

        GroupFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/groups' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Group.parseGroup(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return GroupFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.GroupFetcher = GroupFetcher;

    /// <summary>
    /// There are no comments for Group in the schema.
    /// </summary>
    var Group = (function (_super) {
        __extends(Group, _super);
        function Group(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Group';
            this._exchangeResources = new Array();
            this._exchangeResourcesChanged = false;
            this._descriptionChanged = false;
            this._dirSyncEnabledChanged = false;
            this._displayNameChanged = false;
            this._groupTypeChanged = false;
            this._isPublicChanged = false;
            this._lastDirSyncTimeChanged = false;
            this._mailChanged = false;
            this._mailNicknameChanged = false;
            this._mailEnabledChanged = false;
            this._provisioningErrors = new AadGraph.Extensions.ObservableCollection();
            this._provisioningErrorsChanged = false;
            this._provisioningErrorsChangedListener = (function (value) {
                _this._provisioningErrorsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._proxyAddresses = new Array();
            this._proxyAddressesChanged = false;
            this._securityEnabledChanged = false;
            this._sharepointResources = new Array();
            this._sharepointResourcesChanged = false;

            if (!data) {
                this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
                return;
            }

            this._exchangeResources = data.exchangeResources;
            this._description = data.description;
            this._dirSyncEnabled = data.dirSyncEnabled;
            this._displayName = data.displayName;
            this._groupType = data.groupType;
            this._isPublic = data.isPublic;
            this._lastDirSyncTime = (data.lastDirSyncTime !== null) ? new Date(data.lastDirSyncTime) : null;
            this._mail = data.mail;
            this._mailNickname = data.mailNickname;
            this._mailEnabled = data.mailEnabled;
            this._provisioningErrors = ProvisioningError.parseProvisioningErrors(data.provisioningErrors);
            this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
            this._proxyAddresses = data.proxyAddresses;
            this._securityEnabled = data.securityEnabled;
            this._sharepointResources = data.sharepointResources;
        }
        Object.defineProperty(Group.prototype, "exchangeResources", {
            /// <summary>
            /// There are no comments for Property exchangeResources in the schema.
            /// </summary>
            get: function () {
                return this._exchangeResources;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "exchangeResourcesChanged", {
            get: function () {
                return this._exchangeResourcesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "description", {
            /// <summary>
            /// There are no comments for Property description in the schema.
            /// </summary>
            get: function () {
                return this._description;
            },
            set: function (value) {
                if (value !== this._description) {
                    this._descriptionChanged = true;
                    this.changed = true;
                }
                this._description = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "descriptionChanged", {
            get: function () {
                return this._descriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "dirSyncEnabled", {
            /// <summary>
            /// There are no comments for Property dirSyncEnabled in the schema.
            /// </summary>
            get: function () {
                return this._dirSyncEnabled;
            },
            set: function (value) {
                if (value !== this._dirSyncEnabled) {
                    this._dirSyncEnabledChanged = true;
                    this.changed = true;
                }
                this._dirSyncEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "dirSyncEnabledChanged", {
            get: function () {
                return this._dirSyncEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "groupType", {
            /// <summary>
            /// There are no comments for Property groupType in the schema.
            /// </summary>
            get: function () {
                return this._groupType;
            },
            set: function (value) {
                if (value !== this._groupType) {
                    this._groupTypeChanged = true;
                    this.changed = true;
                }
                this._groupType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "groupTypeChanged", {
            get: function () {
                return this._groupTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "isPublic", {
            /// <summary>
            /// There are no comments for Property isPublic in the schema.
            /// </summary>
            get: function () {
                return this._isPublic;
            },
            set: function (value) {
                if (value !== this._isPublic) {
                    this._isPublicChanged = true;
                    this.changed = true;
                }
                this._isPublic = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "isPublicChanged", {
            get: function () {
                return this._isPublicChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "lastDirSyncTime", {
            /// <summary>
            /// There are no comments for Property lastDirSyncTime in the schema.
            /// </summary>
            get: function () {
                return this._lastDirSyncTime;
            },
            set: function (value) {
                if (value !== this._lastDirSyncTime) {
                    this._lastDirSyncTimeChanged = true;
                    this.changed = true;
                }
                this._lastDirSyncTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "lastDirSyncTimeChanged", {
            get: function () {
                return this._lastDirSyncTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "mail", {
            /// <summary>
            /// There are no comments for Property mail in the schema.
            /// </summary>
            get: function () {
                return this._mail;
            },
            set: function (value) {
                if (value !== this._mail) {
                    this._mailChanged = true;
                    this.changed = true;
                }
                this._mail = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "mailChanged", {
            get: function () {
                return this._mailChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "mailNickname", {
            /// <summary>
            /// There are no comments for Property mailNickname in the schema.
            /// </summary>
            get: function () {
                return this._mailNickname;
            },
            set: function (value) {
                if (value !== this._mailNickname) {
                    this._mailNicknameChanged = true;
                    this.changed = true;
                }
                this._mailNickname = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "mailNicknameChanged", {
            get: function () {
                return this._mailNicknameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "mailEnabled", {
            /// <summary>
            /// There are no comments for Property mailEnabled in the schema.
            /// </summary>
            get: function () {
                return this._mailEnabled;
            },
            set: function (value) {
                if (value !== this._mailEnabled) {
                    this._mailEnabledChanged = true;
                    this.changed = true;
                }
                this._mailEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "mailEnabledChanged", {
            get: function () {
                return this._mailEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "provisioningErrors", {
            /// <summary>
            /// There are no comments for Property provisioningErrors in the schema.
            /// </summary>
            get: function () {
                return this._provisioningErrors;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "provisioningErrorsChanged", {
            get: function () {
                return this._provisioningErrorsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "proxyAddresses", {
            /// <summary>
            /// There are no comments for Property proxyAddresses in the schema.
            /// </summary>
            get: function () {
                return this._proxyAddresses;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "proxyAddressesChanged", {
            get: function () {
                return this._proxyAddressesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "securityEnabled", {
            /// <summary>
            /// There are no comments for Property securityEnabled in the schema.
            /// </summary>
            get: function () {
                return this._securityEnabled;
            },
            set: function (value) {
                if (value !== this._securityEnabled) {
                    this._securityEnabledChanged = true;
                    this.changed = true;
                }
                this._securityEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Group.prototype, "securityEnabledChanged", {
            get: function () {
                return this._securityEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "sharepointResources", {
            /// <summary>
            /// There are no comments for Property sharepointResources in the schema.
            /// </summary>
            get: function () {
                return this._sharepointResources;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "sharepointResourcesChanged", {
            get: function () {
                return this._sharepointResourcesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "pendingMembers", {
            /// <summary>
            /// There are no comments for Query Property pendingMembers in the schema.
            /// </summary>
            get: function () {
                if (this._pendingMembers === undefined) {
                    this._pendingMembers = new DirectoryObjects(this.context, this.getPath("pendingMembers"));
                }
                return this._pendingMembers;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "allowAccessTo", {
            /// <summary>
            /// There are no comments for Query Property allowAccessTo in the schema.
            /// </summary>
            get: function () {
                if (this._allowAccessTo === undefined) {
                    this._allowAccessTo = new DirectoryObjects(this.context, this.getPath("allowAccessTo"));
                }
                return this._allowAccessTo;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Group.prototype, "hasAccessTo", {
            /// <summary>
            /// There are no comments for Query Property hasAccessTo in the schema.
            /// </summary>
            get: function () {
                if (this._hasAccessTo === undefined) {
                    this._hasAccessTo = new DirectoryObjects(this.context, this.getPath("hasAccessTo"));
                }
                return this._hasAccessTo;
            },
            enumerable: true,
            configurable: true
        });

        Group.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/groups' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Group.parseGroup(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Group.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Group.parseGroup = function (context, path, data) {
            if (!data)
                return null;

            return new Group(context, path, data);
        };

        Group.parseGroups = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Group.parseGroup(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Group.prototype.getRequestBody = function () {
            return {
                exchangeResources: (this.exchangeResourcesChanged && this.exchangeResources) ? this.exchangeResources : undefined,
                description: (this.descriptionChanged && this.description) ? this.description : undefined,
                dirSyncEnabled: (this.dirSyncEnabledChanged && this.dirSyncEnabled) ? this.dirSyncEnabled : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                groupType: (this.groupTypeChanged && this.groupType) ? this.groupType : undefined,
                isPublic: (this.isPublicChanged && this.isPublic) ? this.isPublic : undefined,
                lastDirSyncTime: (this.lastDirSyncTimeChanged && this.lastDirSyncTime) ? this.lastDirSyncTime.toString() : undefined,
                mail: (this.mailChanged && this.mail) ? this.mail : undefined,
                mailNickname: (this.mailNicknameChanged && this.mailNickname) ? this.mailNickname : undefined,
                mailEnabled: (this.mailEnabledChanged && this.mailEnabled) ? this.mailEnabled : undefined,
                provisioningErrors: (this.provisioningErrorsChanged) ? (function (provisioningErrors) {
                    if (!provisioningErrors) {
                        return undefined;
                    }
                    var converted = [];
                    provisioningErrors.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisioningErrors) : undefined,
                proxyAddresses: (this.proxyAddressesChanged && this.proxyAddresses) ? this.proxyAddresses : undefined,
                securityEnabled: (this.securityEnabledChanged && this.securityEnabled) ? this.securityEnabled : undefined,
                sharepointResources: (this.sharepointResourcesChanged && this.sharepointResources) ? this.sharepointResources : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Group;
    })(DirectoryObject);
    AadGraph.Group = Group;

    /// <summary>
    /// There are no comments for Role in the schema.
    /// </summary>
    var RoleFetcher = (function (_super) {
        __extends(RoleFetcher, _super);
        function RoleFetcher(context, path) {
            _super.call(this, context, path);
        }
        RoleFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/roles' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Role.parseRole(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return RoleFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.RoleFetcher = RoleFetcher;

    /// <summary>
    /// There are no comments for Role in the schema.
    /// </summary>
    var Role = (function (_super) {
        __extends(Role, _super);
        function Role(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.Role';
            this._descriptionChanged = false;
            this._displayNameChanged = false;
            this._isSystemChanged = false;
            this._roleDisabledChanged = false;

            if (!data) {
                return;
            }

            this._description = data.description;
            this._displayName = data.displayName;
            this._isSystem = data.isSystem;
            this._roleDisabled = data.roleDisabled;
        }
        Object.defineProperty(Role.prototype, "description", {
            /// <summary>
            /// There are no comments for Property description in the schema.
            /// </summary>
            get: function () {
                return this._description;
            },
            set: function (value) {
                if (value !== this._description) {
                    this._descriptionChanged = true;
                    this.changed = true;
                }
                this._description = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Role.prototype, "descriptionChanged", {
            get: function () {
                return this._descriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Role.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Role.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Role.prototype, "isSystem", {
            /// <summary>
            /// There are no comments for Property isSystem in the schema.
            /// </summary>
            get: function () {
                return this._isSystem;
            },
            set: function (value) {
                if (value !== this._isSystem) {
                    this._isSystemChanged = true;
                    this.changed = true;
                }
                this._isSystem = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Role.prototype, "isSystemChanged", {
            get: function () {
                return this._isSystemChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(Role.prototype, "roleDisabled", {
            /// <summary>
            /// There are no comments for Property roleDisabled in the schema.
            /// </summary>
            get: function () {
                return this._roleDisabled;
            },
            set: function (value) {
                if (value !== this._roleDisabled) {
                    this._roleDisabledChanged = true;
                    this.changed = true;
                }
                this._roleDisabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(Role.prototype, "roleDisabledChanged", {
            get: function () {
                return this._roleDisabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Role.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/roles' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(Role.parseRole(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Role.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        Role.parseRole = function (context, path, data) {
            if (!data)
                return null;

            return new Role(context, path, data);
        };

        Role.parseRoles = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(Role.parseRole(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        Role.prototype.getRequestBody = function () {
            return {
                description: (this.descriptionChanged && this.description) ? this.description : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                isSystem: (this.isSystemChanged && this.isSystem) ? this.isSystem : undefined,
                roleDisabled: (this.roleDisabledChanged && this.roleDisabled) ? this.roleDisabled : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return Role;
    })(DirectoryObject);
    AadGraph.Role = Role;

    /// <summary>
    /// There are no comments for RoleTemplate in the schema.
    /// </summary>
    var RoleTemplateFetcher = (function (_super) {
        __extends(RoleTemplateFetcher, _super);
        function RoleTemplateFetcher(context, path) {
            _super.call(this, context, path);
        }
        RoleTemplateFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/roleTemplates' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(RoleTemplate.parseRoleTemplate(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return RoleTemplateFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.RoleTemplateFetcher = RoleTemplateFetcher;

    /// <summary>
    /// There are no comments for RoleTemplate in the schema.
    /// </summary>
    var RoleTemplate = (function (_super) {
        __extends(RoleTemplate, _super);
        function RoleTemplate(context, path, data) {
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.RoleTemplate';
            this._descriptionChanged = false;
            this._displayNameChanged = false;

            if (!data) {
                return;
            }

            this._description = data.description;
            this._displayName = data.displayName;
        }
        Object.defineProperty(RoleTemplate.prototype, "description", {
            /// <summary>
            /// There are no comments for Property description in the schema.
            /// </summary>
            get: function () {
                return this._description;
            },
            set: function (value) {
                if (value !== this._description) {
                    this._descriptionChanged = true;
                    this.changed = true;
                }
                this._description = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(RoleTemplate.prototype, "descriptionChanged", {
            get: function () {
                return this._descriptionChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(RoleTemplate.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(RoleTemplate.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        RoleTemplate.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/roleTemplates' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(RoleTemplate.parseRoleTemplate(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        RoleTemplate.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        RoleTemplate.parseRoleTemplate = function (context, path, data) {
            if (!data)
                return null;

            return new RoleTemplate(context, path, data);
        };

        RoleTemplate.parseRoleTemplates = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(RoleTemplate.parseRoleTemplate(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        RoleTemplate.prototype.getRequestBody = function () {
            return {
                description: (this.descriptionChanged && this.description) ? this.description : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return RoleTemplate;
    })(DirectoryObject);
    AadGraph.RoleTemplate = RoleTemplate;

    /// <summary>
    /// There are no comments for ServicePrincipal in the schema.
    /// </summary>
    var ServicePrincipalFetcher = (function (_super) {
        __extends(ServicePrincipalFetcher, _super);
        function ServicePrincipalFetcher(context, path) {
            _super.call(this, context, path);
        }
        Object.defineProperty(ServicePrincipalFetcher.prototype, "impersonationAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property impersonationAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._impersonationAccessGrants === undefined) {
                    this._impersonationAccessGrants = new ImpersonationAccessGrants(this.context, this.getPath("impersonationAccessGrants"));
                }
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipalFetcher.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipalFetcher.prototype, "directAccessGrantedTo", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrantedTo in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrantedTo === undefined) {
                    this._directAccessGrantedTo = new DirectAccessGrants(this.context, this.getPath("directAccessGrantedTo"));
                }
                return this._directAccessGrantedTo;
            },
            enumerable: true,
            configurable: true
        });

        ServicePrincipalFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/servicePrincipals' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(ServicePrincipal.parseServicePrincipal(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return ServicePrincipalFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.ServicePrincipalFetcher = ServicePrincipalFetcher;

    /// <summary>
    /// There are no comments for ServicePrincipal in the schema.
    /// </summary>
    var ServicePrincipal = (function (_super) {
        __extends(ServicePrincipal, _super);
        function ServicePrincipal(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ServicePrincipal';
            this._accountEnabledChanged = false;
            this._appIdChanged = false;
            this._appMetadataChanged = false;
            this._appMetadataChangedListener = (function (value) {
                _this._appMetadataChanged = true;
                _this.changed = true;
            }).bind(this);
            this._appOwnerTenantIdChanged = false;
            this._appPermissions = new AadGraph.Extensions.ObservableCollection();
            this._appPermissionsChanged = false;
            this._appPermissionsChangedListener = (function (value) {
                _this._appPermissionsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._authenticationPolicyChanged = false;
            this._authenticationPolicyChangedListener = (function (value) {
                _this._authenticationPolicyChanged = true;
                _this.changed = true;
            }).bind(this);
            this._displayNameChanged = false;
            this._errorUrlChanged = false;
            this._explicitAccessGrantRequiredChanged = false;
            this._homepageChanged = false;
            this._keyCredentials = new AadGraph.Extensions.ObservableCollection();
            this._keyCredentialsChanged = false;
            this._keyCredentialsChangedListener = (function (value) {
                _this._keyCredentialsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._logoutUrlChanged = false;
            this._passwordCredentials = new AadGraph.Extensions.ObservableCollection();
            this._passwordCredentialsChanged = false;
            this._passwordCredentialsChangedListener = (function (value) {
                _this._passwordCredentialsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._publisherNameChanged = false;
            this._replyUrls = new Array();
            this._replyUrlsChanged = false;
            this._resourceApplicationSetChanged = false;
            this._samlMetadataUrlChanged = false;
            this._servicePrincipalNames = new Array();
            this._servicePrincipalNamesChanged = false;
            this._tags = new Array();
            this._tagsChanged = false;
            this._webApiChanged = false;
            this._webAppChanged = false;

            if (!data) {
                this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
                this._keyCredentials.addChangedListener(this._keyCredentialsChangedListener);
                this._passwordCredentials.addChangedListener(this._passwordCredentialsChangedListener);
                return;
            }

            this._accountEnabled = data.accountEnabled;
            this._appId = data.appId;
            this._appMetadata = AppMetadata.parseAppMetadata(data.appMetadata);
            if (this._appMetadata) {
                this._appMetadata.addChangedListener(this._appMetadataChangedListener);
            }
            this._appOwnerTenantId = data.appOwnerTenantId;
            this._appPermissions = AppPermission.parseAppPermissions(data.appPermissions);
            this._appPermissions.addChangedListener(this._appPermissionsChangedListener);
            this._authenticationPolicy = ServicePrincipalAuthenticationPolicy.parseServicePrincipalAuthenticationPolicy(data.authenticationPolicy);
            if (this._authenticationPolicy) {
                this._authenticationPolicy.addChangedListener(this._authenticationPolicyChangedListener);
            }
            this._displayName = data.displayName;
            this._errorUrl = data.errorUrl;
            this._explicitAccessGrantRequired = data.explicitAccessGrantRequired;
            this._homepage = data.homepage;
            this._keyCredentials = KeyCredential.parseKeyCredentials(data.keyCredentials);
            this._keyCredentials.addChangedListener(this._keyCredentialsChangedListener);
            this._logoutUrl = data.logoutUrl;
            this._passwordCredentials = PasswordCredential.parsePasswordCredentials(data.passwordCredentials);
            this._passwordCredentials.addChangedListener(this._passwordCredentialsChangedListener);
            this._publisherName = data.publisherName;
            this._replyUrls = data.replyUrls;
            this._resourceApplicationSet = data.resourceApplicationSet;
            this._samlMetadataUrl = data.samlMetadataUrl;
            this._servicePrincipalNames = data.servicePrincipalNames;
            this._tags = data.tags;
            this._webApi = data.webApi;
            this._webApp = data.webApp;
        }
        Object.defineProperty(ServicePrincipal.prototype, "accountEnabled", {
            /// <summary>
            /// There are no comments for Property accountEnabled in the schema.
            /// </summary>
            get: function () {
                return this._accountEnabled;
            },
            set: function (value) {
                if (value !== this._accountEnabled) {
                    this._accountEnabledChanged = true;
                    this.changed = true;
                }
                this._accountEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "accountEnabledChanged", {
            get: function () {
                return this._accountEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "appId", {
            /// <summary>
            /// There are no comments for Property appId in the schema.
            /// </summary>
            get: function () {
                return this._appId;
            },
            set: function (value) {
                if (value !== this._appId) {
                    this._appIdChanged = true;
                    this.changed = true;
                }
                this._appId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "appIdChanged", {
            get: function () {
                return this._appIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "appMetadata", {
            /// <summary>
            /// There are no comments for Property appMetadata in the schema.
            /// </summary>
            get: function () {
                return this._appMetadata;
            },
            set: function (value) {
                if (this._appMetadata) {
                    this._appMetadata.removeChangedListener(this._appMetadataChangedListener);
                }
                if (value !== this._appMetadata) {
                    this._appMetadataChanged = true;
                    this.changed = true;
                }
                if (this._appMetadata) {
                    this._appMetadata.addChangedListener(this._appMetadataChangedListener);
                }
                this._appMetadata = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "appMetadataChanged", {
            get: function () {
                return this._appMetadataChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "appOwnerTenantId", {
            /// <summary>
            /// There are no comments for Property appOwnerTenantId in the schema.
            /// </summary>
            get: function () {
                return this._appOwnerTenantId;
            },
            set: function (value) {
                if (value !== this._appOwnerTenantId) {
                    this._appOwnerTenantIdChanged = true;
                    this.changed = true;
                }
                this._appOwnerTenantId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "appOwnerTenantIdChanged", {
            get: function () {
                return this._appOwnerTenantIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "appPermissions", {
            /// <summary>
            /// There are no comments for Property appPermissions in the schema.
            /// </summary>
            get: function () {
                return this._appPermissions;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "appPermissionsChanged", {
            get: function () {
                return this._appPermissionsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "authenticationPolicy", {
            /// <summary>
            /// There are no comments for Property authenticationPolicy in the schema.
            /// </summary>
            get: function () {
                return this._authenticationPolicy;
            },
            set: function (value) {
                if (this._authenticationPolicy) {
                    this._authenticationPolicy.removeChangedListener(this._authenticationPolicyChangedListener);
                }
                if (value !== this._authenticationPolicy) {
                    this._authenticationPolicyChanged = true;
                    this.changed = true;
                }
                if (this._authenticationPolicy) {
                    this._authenticationPolicy.addChangedListener(this._authenticationPolicyChangedListener);
                }
                this._authenticationPolicy = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "authenticationPolicyChanged", {
            get: function () {
                return this._authenticationPolicyChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "errorUrl", {
            /// <summary>
            /// There are no comments for Property errorUrl in the schema.
            /// </summary>
            get: function () {
                return this._errorUrl;
            },
            set: function (value) {
                if (value !== this._errorUrl) {
                    this._errorUrlChanged = true;
                    this.changed = true;
                }
                this._errorUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "errorUrlChanged", {
            get: function () {
                return this._errorUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "explicitAccessGrantRequired", {
            /// <summary>
            /// There are no comments for Property explicitAccessGrantRequired in the schema.
            /// </summary>
            get: function () {
                return this._explicitAccessGrantRequired;
            },
            set: function (value) {
                if (value !== this._explicitAccessGrantRequired) {
                    this._explicitAccessGrantRequiredChanged = true;
                    this.changed = true;
                }
                this._explicitAccessGrantRequired = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "explicitAccessGrantRequiredChanged", {
            get: function () {
                return this._explicitAccessGrantRequiredChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "homepage", {
            /// <summary>
            /// There are no comments for Property homepage in the schema.
            /// </summary>
            get: function () {
                return this._homepage;
            },
            set: function (value) {
                if (value !== this._homepage) {
                    this._homepageChanged = true;
                    this.changed = true;
                }
                this._homepage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "homepageChanged", {
            get: function () {
                return this._homepageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "keyCredentials", {
            /// <summary>
            /// There are no comments for Property keyCredentials in the schema.
            /// </summary>
            get: function () {
                return this._keyCredentials;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "keyCredentialsChanged", {
            get: function () {
                return this._keyCredentialsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "logoutUrl", {
            /// <summary>
            /// There are no comments for Property logoutUrl in the schema.
            /// </summary>
            get: function () {
                return this._logoutUrl;
            },
            set: function (value) {
                if (value !== this._logoutUrl) {
                    this._logoutUrlChanged = true;
                    this.changed = true;
                }
                this._logoutUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "logoutUrlChanged", {
            get: function () {
                return this._logoutUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "passwordCredentials", {
            /// <summary>
            /// There are no comments for Property passwordCredentials in the schema.
            /// </summary>
            get: function () {
                return this._passwordCredentials;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "passwordCredentialsChanged", {
            get: function () {
                return this._passwordCredentialsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "publisherName", {
            /// <summary>
            /// There are no comments for Property publisherName in the schema.
            /// </summary>
            get: function () {
                return this._publisherName;
            },
            set: function (value) {
                if (value !== this._publisherName) {
                    this._publisherNameChanged = true;
                    this.changed = true;
                }
                this._publisherName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "publisherNameChanged", {
            get: function () {
                return this._publisherNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "replyUrls", {
            /// <summary>
            /// There are no comments for Property replyUrls in the schema.
            /// </summary>
            get: function () {
                return this._replyUrls;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "replyUrlsChanged", {
            get: function () {
                return this._replyUrlsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "resourceApplicationSet", {
            /// <summary>
            /// There are no comments for Property resourceApplicationSet in the schema.
            /// </summary>
            get: function () {
                return this._resourceApplicationSet;
            },
            set: function (value) {
                if (value !== this._resourceApplicationSet) {
                    this._resourceApplicationSetChanged = true;
                    this.changed = true;
                }
                this._resourceApplicationSet = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "resourceApplicationSetChanged", {
            get: function () {
                return this._resourceApplicationSetChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "samlMetadataUrl", {
            /// <summary>
            /// There are no comments for Property samlMetadataUrl in the schema.
            /// </summary>
            get: function () {
                return this._samlMetadataUrl;
            },
            set: function (value) {
                if (value !== this._samlMetadataUrl) {
                    this._samlMetadataUrlChanged = true;
                    this.changed = true;
                }
                this._samlMetadataUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "samlMetadataUrlChanged", {
            get: function () {
                return this._samlMetadataUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "servicePrincipalNames", {
            /// <summary>
            /// There are no comments for Property servicePrincipalNames in the schema.
            /// </summary>
            get: function () {
                return this._servicePrincipalNames;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "servicePrincipalNamesChanged", {
            get: function () {
                return this._servicePrincipalNamesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "tags", {
            /// <summary>
            /// There are no comments for Property tags in the schema.
            /// </summary>
            get: function () {
                return this._tags;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "tagsChanged", {
            get: function () {
                return this._tagsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "webApi", {
            /// <summary>
            /// There are no comments for Property webApi in the schema.
            /// </summary>
            get: function () {
                return this._webApi;
            },
            set: function (value) {
                if (value !== this._webApi) {
                    this._webApiChanged = true;
                    this.changed = true;
                }
                this._webApi = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "webApiChanged", {
            get: function () {
                return this._webApiChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "webApp", {
            /// <summary>
            /// There are no comments for Property webApp in the schema.
            /// </summary>
            get: function () {
                return this._webApp;
            },
            set: function (value) {
                if (value !== this._webApp) {
                    this._webAppChanged = true;
                    this.changed = true;
                }
                this._webApp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipal.prototype, "webAppChanged", {
            get: function () {
                return this._webAppChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "impersonationAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property impersonationAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._impersonationAccessGrants === undefined) {
                    this._impersonationAccessGrants = new ImpersonationAccessGrants(this.context, this.getPath("impersonationAccessGrants"));
                }
                return this._impersonationAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "directAccessGrants", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrants in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrants === undefined) {
                    this._directAccessGrants = new DirectAccessGrants(this.context, this.getPath("directAccessGrants"));
                }
                return this._directAccessGrants;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipal.prototype, "directAccessGrantedTo", {
            /// <summary>
            /// There are no comments for Query Property directAccessGrantedTo in the schema.
            /// </summary>
            get: function () {
                if (this._directAccessGrantedTo === undefined) {
                    this._directAccessGrantedTo = new DirectAccessGrants(this.context, this.getPath("directAccessGrantedTo"));
                }
                return this._directAccessGrantedTo;
            },
            enumerable: true,
            configurable: true
        });

        ServicePrincipal.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/servicePrincipals' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(ServicePrincipal.parseServicePrincipal(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ServicePrincipal.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ServicePrincipal.parseServicePrincipal = function (context, path, data) {
            if (!data)
                return null;

            return new ServicePrincipal(context, path, data);
        };

        ServicePrincipal.parseServicePrincipals = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ServicePrincipal.parseServicePrincipal(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        ServicePrincipal.prototype.getRequestBody = function () {
            return {
                accountEnabled: (this.accountEnabledChanged && this.accountEnabled) ? this.accountEnabled : undefined,
                appId: (this.appIdChanged && this.appId) ? this.appId : undefined,
                appMetadata: (this.appMetadataChanged && this.appMetadata) ? this.appMetadata.getRequestBody() : undefined,
                appOwnerTenantId: (this.appOwnerTenantIdChanged && this.appOwnerTenantId) ? this.appOwnerTenantId : undefined,
                appPermissions: (this.appPermissionsChanged) ? (function (appPermissions) {
                    if (!appPermissions) {
                        return undefined;
                    }
                    var converted = [];
                    appPermissions.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.appPermissions) : undefined,
                authenticationPolicy: (this.authenticationPolicyChanged && this.authenticationPolicy) ? this.authenticationPolicy.getRequestBody() : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                errorUrl: (this.errorUrlChanged && this.errorUrl) ? this.errorUrl : undefined,
                explicitAccessGrantRequired: (this.explicitAccessGrantRequiredChanged && this.explicitAccessGrantRequired) ? this.explicitAccessGrantRequired : undefined,
                homepage: (this.homepageChanged && this.homepage) ? this.homepage : undefined,
                keyCredentials: (this.keyCredentialsChanged) ? (function (keyCredentials) {
                    if (!keyCredentials) {
                        return undefined;
                    }
                    var converted = [];
                    keyCredentials.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.keyCredentials) : undefined,
                logoutUrl: (this.logoutUrlChanged && this.logoutUrl) ? this.logoutUrl : undefined,
                passwordCredentials: (this.passwordCredentialsChanged) ? (function (passwordCredentials) {
                    if (!passwordCredentials) {
                        return undefined;
                    }
                    var converted = [];
                    passwordCredentials.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.passwordCredentials) : undefined,
                publisherName: (this.publisherNameChanged && this.publisherName) ? this.publisherName : undefined,
                replyUrls: (this.replyUrlsChanged && this.replyUrls) ? this.replyUrls : undefined,
                resourceApplicationSet: (this.resourceApplicationSetChanged && this.resourceApplicationSet) ? this.resourceApplicationSet : undefined,
                samlMetadataUrl: (this.samlMetadataUrlChanged && this.samlMetadataUrl) ? this.samlMetadataUrl : undefined,
                servicePrincipalNames: (this.servicePrincipalNamesChanged && this.servicePrincipalNames) ? this.servicePrincipalNames : undefined,
                tags: (this.tagsChanged && this.tags) ? this.tags : undefined,
                webApi: (this.webApiChanged && this.webApi) ? this.webApi : undefined,
                webApp: (this.webAppChanged && this.webApp) ? this.webApp : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return ServicePrincipal;
    })(DirectoryObject);
    AadGraph.ServicePrincipal = ServicePrincipal;

    /// <summary>
    /// There are no comments for ServicePrincipalAuthenticationPolicy in the schema.
    /// </summary>
    var ServicePrincipalAuthenticationPolicy = (function (_super) {
        __extends(ServicePrincipalAuthenticationPolicy, _super);
        function ServicePrincipalAuthenticationPolicy(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ServicePrincipalAuthenticationPolicy';
            this._defaultPolicyChanged = false;
            this._allowedPolicies = new Array();
            this._allowedPoliciesChanged = false;

            if (!data) {
                return;
            }

            this._defaultPolicy = data.defaultPolicy;
            this._allowedPolicies = data.allowedPolicies;
        }
        Object.defineProperty(ServicePrincipalAuthenticationPolicy.prototype, "defaultPolicy", {
            /// <summary>
            /// There are no comments for Property defaultPolicy in the schema.
            /// </summary>
            get: function () {
                return this._defaultPolicy;
            },
            set: function (value) {
                if (value !== this._defaultPolicy) {
                    this._defaultPolicyChanged = true;
                    this.changed = true;
                }
                this._defaultPolicy = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePrincipalAuthenticationPolicy.prototype, "defaultPolicyChanged", {
            get: function () {
                return this._defaultPolicyChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipalAuthenticationPolicy.prototype, "allowedPolicies", {
            /// <summary>
            /// There are no comments for Property allowedPolicies in the schema.
            /// </summary>
            get: function () {
                return this._allowedPolicies;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePrincipalAuthenticationPolicy.prototype, "allowedPoliciesChanged", {
            get: function () {
                return this._allowedPoliciesChanged;
            },
            enumerable: true,
            configurable: true
        });

        ServicePrincipalAuthenticationPolicy.parseServicePrincipalAuthenticationPolicy = function (data) {
            if (!data)
                return null;

            return new ServicePrincipalAuthenticationPolicy(data);
        };

        ServicePrincipalAuthenticationPolicy.parseServicePrincipalAuthenticationPolicies = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ServicePrincipalAuthenticationPolicy.parseServicePrincipalAuthenticationPolicy(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        ServicePrincipalAuthenticationPolicy.prototype.getRequestBody = function () {
            return {
                defaultPolicy: (this.defaultPolicyChanged && this.defaultPolicy) ? this.defaultPolicy : undefined,
                allowedPolicies: (this.allowedPoliciesChanged && this.allowedPolicies) ? this.allowedPolicies : undefined,
                'odata.type': this._odataType
            };
        };
        return ServicePrincipalAuthenticationPolicy;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.ServicePrincipalAuthenticationPolicy = ServicePrincipalAuthenticationPolicy;

    /// <summary>
    /// There are no comments for TenantDetail in the schema.
    /// </summary>
    var TenantDetailFetcher = (function (_super) {
        __extends(TenantDetailFetcher, _super);
        function TenantDetailFetcher(context, path) {
            _super.call(this, context, path);
        }
        TenantDetailFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/tenantDetails' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(TenantDetail.parseTenantDetail(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return TenantDetailFetcher;
    })(DirectoryObjectFetcher);
    AadGraph.TenantDetailFetcher = TenantDetailFetcher;

    /// <summary>
    /// There are no comments for TenantDetail in the schema.
    /// </summary>
    var TenantDetail = (function (_super) {
        __extends(TenantDetail, _super);
        function TenantDetail(context, path, data) {
            var _this = this;
            _super.call(this, context, path, data);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.TenantDetail';
            this._assignedPlans = new AadGraph.Extensions.ObservableCollection();
            this._assignedPlansChanged = false;
            this._assignedPlansChangedListener = (function (value) {
                _this._assignedPlansChanged = true;
                _this.changed = true;
            }).bind(this);
            this._cityChanged = false;
            this._companyLastDirSyncTimeChanged = false;
            this._companyTags = new Array();
            this._companyTagsChanged = false;
            this._countryChanged = false;
            this._countryLetterCodeChanged = false;
            this._dirSyncEnabledChanged = false;
            this._displayNameChanged = false;
            this._marketingNotificationEmails = new Array();
            this._marketingNotificationEmailsChanged = false;
            this._postalCodeChanged = false;
            this._preferredLanguageChanged = false;
            this._provisionedPlans = new AadGraph.Extensions.ObservableCollection();
            this._provisionedPlansChanged = false;
            this._provisionedPlansChangedListener = (function (value) {
                _this._provisionedPlansChanged = true;
                _this.changed = true;
            }).bind(this);
            this._provisioningErrors = new AadGraph.Extensions.ObservableCollection();
            this._provisioningErrorsChanged = false;
            this._provisioningErrorsChangedListener = (function (value) {
                _this._provisioningErrorsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._stateChanged = false;
            this._streetChanged = false;
            this._technicalNotificationMails = new Array();
            this._technicalNotificationMailsChanged = false;
            this._telephoneNumberChanged = false;
            this._tenantTypeChanged = false;
            this._verifiedDomains = new AadGraph.Extensions.ObservableCollection();
            this._verifiedDomainsChanged = false;
            this._verifiedDomainsChangedListener = (function (value) {
                _this._verifiedDomainsChanged = true;
                _this.changed = true;
            }).bind(this);

            if (!data) {
                this._assignedPlans.addChangedListener(this._assignedPlansChangedListener);
                this._provisionedPlans.addChangedListener(this._provisionedPlansChangedListener);
                this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
                this._verifiedDomains.addChangedListener(this._verifiedDomainsChangedListener);
                return;
            }

            this._assignedPlans = AssignedPlan.parseAssignedPlans(data.assignedPlans);
            this._assignedPlans.addChangedListener(this._assignedPlansChangedListener);
            this._city = data.city;
            this._companyLastDirSyncTime = (data.companyLastDirSyncTime !== null) ? new Date(data.companyLastDirSyncTime) : null;
            this._companyTags = data.companyTags;
            this._country = data.country;
            this._countryLetterCode = data.countryLetterCode;
            this._dirSyncEnabled = data.dirSyncEnabled;
            this._displayName = data.displayName;
            this._marketingNotificationEmails = data.marketingNotificationEmails;
            this._postalCode = data.postalCode;
            this._preferredLanguage = data.preferredLanguage;
            this._provisionedPlans = ProvisionedPlan.parseProvisionedPlans(data.provisionedPlans);
            this._provisionedPlans.addChangedListener(this._provisionedPlansChangedListener);
            this._provisioningErrors = ProvisioningError.parseProvisioningErrors(data.provisioningErrors);
            this._provisioningErrors.addChangedListener(this._provisioningErrorsChangedListener);
            this._state = data.state;
            this._street = data.street;
            this._technicalNotificationMails = data.technicalNotificationMails;
            this._telephoneNumber = data.telephoneNumber;
            this._tenantType = data.tenantType;
            this._verifiedDomains = VerifiedDomain.parseVerifiedDomains(data.verifiedDomains);
            this._verifiedDomains.addChangedListener(this._verifiedDomainsChangedListener);
        }
        Object.defineProperty(TenantDetail.prototype, "assignedPlans", {
            /// <summary>
            /// There are no comments for Property assignedPlans in the schema.
            /// </summary>
            get: function () {
                return this._assignedPlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "assignedPlansChanged", {
            get: function () {
                return this._assignedPlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "city", {
            /// <summary>
            /// There are no comments for Property city in the schema.
            /// </summary>
            get: function () {
                return this._city;
            },
            set: function (value) {
                if (value !== this._city) {
                    this._cityChanged = true;
                    this.changed = true;
                }
                this._city = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "cityChanged", {
            get: function () {
                return this._cityChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "companyLastDirSyncTime", {
            /// <summary>
            /// There are no comments for Property companyLastDirSyncTime in the schema.
            /// </summary>
            get: function () {
                return this._companyLastDirSyncTime;
            },
            set: function (value) {
                if (value !== this._companyLastDirSyncTime) {
                    this._companyLastDirSyncTimeChanged = true;
                    this.changed = true;
                }
                this._companyLastDirSyncTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "companyLastDirSyncTimeChanged", {
            get: function () {
                return this._companyLastDirSyncTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "companyTags", {
            /// <summary>
            /// There are no comments for Property companyTags in the schema.
            /// </summary>
            get: function () {
                return this._companyTags;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "companyTagsChanged", {
            get: function () {
                return this._companyTagsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "country", {
            /// <summary>
            /// There are no comments for Property country in the schema.
            /// </summary>
            get: function () {
                return this._country;
            },
            set: function (value) {
                if (value !== this._country) {
                    this._countryChanged = true;
                    this.changed = true;
                }
                this._country = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "countryChanged", {
            get: function () {
                return this._countryChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "countryLetterCode", {
            /// <summary>
            /// There are no comments for Property countryLetterCode in the schema.
            /// </summary>
            get: function () {
                return this._countryLetterCode;
            },
            set: function (value) {
                if (value !== this._countryLetterCode) {
                    this._countryLetterCodeChanged = true;
                    this.changed = true;
                }
                this._countryLetterCode = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "countryLetterCodeChanged", {
            get: function () {
                return this._countryLetterCodeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "dirSyncEnabled", {
            /// <summary>
            /// There are no comments for Property dirSyncEnabled in the schema.
            /// </summary>
            get: function () {
                return this._dirSyncEnabled;
            },
            set: function (value) {
                if (value !== this._dirSyncEnabled) {
                    this._dirSyncEnabledChanged = true;
                    this.changed = true;
                }
                this._dirSyncEnabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "dirSyncEnabledChanged", {
            get: function () {
                return this._dirSyncEnabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "displayName", {
            /// <summary>
            /// There are no comments for Property displayName in the schema.
            /// </summary>
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                if (value !== this._displayName) {
                    this._displayNameChanged = true;
                    this.changed = true;
                }
                this._displayName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "displayNameChanged", {
            get: function () {
                return this._displayNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "marketingNotificationEmails", {
            /// <summary>
            /// There are no comments for Property marketingNotificationEmails in the schema.
            /// </summary>
            get: function () {
                return this._marketingNotificationEmails;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "marketingNotificationEmailsChanged", {
            get: function () {
                return this._marketingNotificationEmailsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "postalCode", {
            /// <summary>
            /// There are no comments for Property postalCode in the schema.
            /// </summary>
            get: function () {
                return this._postalCode;
            },
            set: function (value) {
                if (value !== this._postalCode) {
                    this._postalCodeChanged = true;
                    this.changed = true;
                }
                this._postalCode = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "postalCodeChanged", {
            get: function () {
                return this._postalCodeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "preferredLanguage", {
            /// <summary>
            /// There are no comments for Property preferredLanguage in the schema.
            /// </summary>
            get: function () {
                return this._preferredLanguage;
            },
            set: function (value) {
                if (value !== this._preferredLanguage) {
                    this._preferredLanguageChanged = true;
                    this.changed = true;
                }
                this._preferredLanguage = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "preferredLanguageChanged", {
            get: function () {
                return this._preferredLanguageChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "provisionedPlans", {
            /// <summary>
            /// There are no comments for Property provisionedPlans in the schema.
            /// </summary>
            get: function () {
                return this._provisionedPlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "provisionedPlansChanged", {
            get: function () {
                return this._provisionedPlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "provisioningErrors", {
            /// <summary>
            /// There are no comments for Property provisioningErrors in the schema.
            /// </summary>
            get: function () {
                return this._provisioningErrors;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "provisioningErrorsChanged", {
            get: function () {
                return this._provisioningErrorsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "state", {
            /// <summary>
            /// There are no comments for Property state in the schema.
            /// </summary>
            get: function () {
                return this._state;
            },
            set: function (value) {
                if (value !== this._state) {
                    this._stateChanged = true;
                    this.changed = true;
                }
                this._state = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "stateChanged", {
            get: function () {
                return this._stateChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "street", {
            /// <summary>
            /// There are no comments for Property street in the schema.
            /// </summary>
            get: function () {
                return this._street;
            },
            set: function (value) {
                if (value !== this._street) {
                    this._streetChanged = true;
                    this.changed = true;
                }
                this._street = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "streetChanged", {
            get: function () {
                return this._streetChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "technicalNotificationMails", {
            /// <summary>
            /// There are no comments for Property technicalNotificationMails in the schema.
            /// </summary>
            get: function () {
                return this._technicalNotificationMails;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "technicalNotificationMailsChanged", {
            get: function () {
                return this._technicalNotificationMailsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "telephoneNumber", {
            /// <summary>
            /// There are no comments for Property telephoneNumber in the schema.
            /// </summary>
            get: function () {
                return this._telephoneNumber;
            },
            set: function (value) {
                if (value !== this._telephoneNumber) {
                    this._telephoneNumberChanged = true;
                    this.changed = true;
                }
                this._telephoneNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "telephoneNumberChanged", {
            get: function () {
                return this._telephoneNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "tenantType", {
            /// <summary>
            /// There are no comments for Property tenantType in the schema.
            /// </summary>
            get: function () {
                return this._tenantType;
            },
            set: function (value) {
                if (value !== this._tenantType) {
                    this._tenantTypeChanged = true;
                    this.changed = true;
                }
                this._tenantType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(TenantDetail.prototype, "tenantTypeChanged", {
            get: function () {
                return this._tenantTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "verifiedDomains", {
            /// <summary>
            /// There are no comments for Property verifiedDomains in the schema.
            /// </summary>
            get: function () {
                return this._verifiedDomains;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(TenantDetail.prototype, "verifiedDomainsChanged", {
            get: function () {
                return this._verifiedDomainsChanged;
            },
            enumerable: true,
            configurable: true
        });

        TenantDetail.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/tenantDetails' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(TenantDetail.parseTenantDetail(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        TenantDetail.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        TenantDetail.parseTenantDetail = function (context, path, data) {
            if (!data)
                return null;

            return new TenantDetail(context, path, data);
        };

        TenantDetail.parseTenantDetails = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(TenantDetail.parseTenantDetail(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        TenantDetail.prototype.getRequestBody = function () {
            return {
                assignedPlans: (this.assignedPlansChanged) ? (function (assignedPlans) {
                    if (!assignedPlans) {
                        return undefined;
                    }
                    var converted = [];
                    assignedPlans.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.assignedPlans) : undefined,
                city: (this.cityChanged && this.city) ? this.city : undefined,
                companyLastDirSyncTime: (this.companyLastDirSyncTimeChanged && this.companyLastDirSyncTime) ? this.companyLastDirSyncTime.toString() : undefined,
                companyTags: (this.companyTagsChanged && this.companyTags) ? this.companyTags : undefined,
                country: (this.countryChanged && this.country) ? this.country : undefined,
                countryLetterCode: (this.countryLetterCodeChanged && this.countryLetterCode) ? this.countryLetterCode : undefined,
                dirSyncEnabled: (this.dirSyncEnabledChanged && this.dirSyncEnabled) ? this.dirSyncEnabled : undefined,
                displayName: (this.displayNameChanged && this.displayName) ? this.displayName : undefined,
                marketingNotificationEmails: (this.marketingNotificationEmailsChanged && this.marketingNotificationEmails) ? this.marketingNotificationEmails : undefined,
                postalCode: (this.postalCodeChanged && this.postalCode) ? this.postalCode : undefined,
                preferredLanguage: (this.preferredLanguageChanged && this.preferredLanguage) ? this.preferredLanguage : undefined,
                provisionedPlans: (this.provisionedPlansChanged) ? (function (provisionedPlans) {
                    if (!provisionedPlans) {
                        return undefined;
                    }
                    var converted = [];
                    provisionedPlans.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisionedPlans) : undefined,
                provisioningErrors: (this.provisioningErrorsChanged) ? (function (provisioningErrors) {
                    if (!provisioningErrors) {
                        return undefined;
                    }
                    var converted = [];
                    provisioningErrors.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.provisioningErrors) : undefined,
                state: (this.stateChanged && this.state) ? this.state : undefined,
                street: (this.streetChanged && this.street) ? this.street : undefined,
                technicalNotificationMails: (this.technicalNotificationMailsChanged && this.technicalNotificationMails) ? this.technicalNotificationMails : undefined,
                telephoneNumber: (this.telephoneNumberChanged && this.telephoneNumber) ? this.telephoneNumber : undefined,
                tenantType: (this.tenantTypeChanged && this.tenantType) ? this.tenantType : undefined,
                verifiedDomains: (this.verifiedDomainsChanged) ? (function (verifiedDomains) {
                    if (!verifiedDomains) {
                        return undefined;
                    }
                    var converted = [];
                    verifiedDomains.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.verifiedDomains) : undefined,
                objectType: (this.objectTypeChanged && this.objectType) ? this.objectType : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                softDeletionTimestamp: (this.softDeletionTimestampChanged && this.softDeletionTimestamp) ? this.softDeletionTimestamp.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return TenantDetail;
    })(DirectoryObject);
    AadGraph.TenantDetail = TenantDetail;

    /// <summary>
    /// There are no comments for AssignedPlan in the schema.
    /// </summary>
    var AssignedPlan = (function (_super) {
        __extends(AssignedPlan, _super);
        function AssignedPlan(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.AssignedPlan';
            this._assignedTimestampChanged = false;
            this._capabilityStatusChanged = false;
            this._serviceChanged = false;
            this._servicePlanIdChanged = false;

            if (!data) {
                return;
            }

            this._assignedTimestamp = (data.assignedTimestamp !== null) ? new Date(data.assignedTimestamp) : null;
            this._capabilityStatus = data.capabilityStatus;
            this._service = data.service;
            this._servicePlanId = data.servicePlanId;
        }
        Object.defineProperty(AssignedPlan.prototype, "assignedTimestamp", {
            /// <summary>
            /// There are no comments for Property assignedTimestamp in the schema.
            /// </summary>
            get: function () {
                return this._assignedTimestamp;
            },
            set: function (value) {
                if (value !== this._assignedTimestamp) {
                    this._assignedTimestampChanged = true;
                    this.changed = true;
                }
                this._assignedTimestamp = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AssignedPlan.prototype, "assignedTimestampChanged", {
            get: function () {
                return this._assignedTimestampChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AssignedPlan.prototype, "capabilityStatus", {
            /// <summary>
            /// There are no comments for Property capabilityStatus in the schema.
            /// </summary>
            get: function () {
                return this._capabilityStatus;
            },
            set: function (value) {
                if (value !== this._capabilityStatus) {
                    this._capabilityStatusChanged = true;
                    this.changed = true;
                }
                this._capabilityStatus = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AssignedPlan.prototype, "capabilityStatusChanged", {
            get: function () {
                return this._capabilityStatusChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AssignedPlan.prototype, "service", {
            /// <summary>
            /// There are no comments for Property service in the schema.
            /// </summary>
            get: function () {
                return this._service;
            },
            set: function (value) {
                if (value !== this._service) {
                    this._serviceChanged = true;
                    this.changed = true;
                }
                this._service = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AssignedPlan.prototype, "serviceChanged", {
            get: function () {
                return this._serviceChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(AssignedPlan.prototype, "servicePlanId", {
            /// <summary>
            /// There are no comments for Property servicePlanId in the schema.
            /// </summary>
            get: function () {
                return this._servicePlanId;
            },
            set: function (value) {
                if (value !== this._servicePlanId) {
                    this._servicePlanIdChanged = true;
                    this.changed = true;
                }
                this._servicePlanId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(AssignedPlan.prototype, "servicePlanIdChanged", {
            get: function () {
                return this._servicePlanIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        AssignedPlan.parseAssignedPlan = function (data) {
            if (!data)
                return null;

            return new AssignedPlan(data);
        };

        AssignedPlan.parseAssignedPlans = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(AssignedPlan.parseAssignedPlan(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        AssignedPlan.prototype.getRequestBody = function () {
            return {
                assignedTimestamp: (this.assignedTimestampChanged && this.assignedTimestamp) ? this.assignedTimestamp.toString() : undefined,
                capabilityStatus: (this.capabilityStatusChanged && this.capabilityStatus) ? this.capabilityStatus : undefined,
                service: (this.serviceChanged && this.service) ? this.service : undefined,
                servicePlanId: (this.servicePlanIdChanged && this.servicePlanId) ? this.servicePlanId : undefined,
                'odata.type': this._odataType
            };
        };
        return AssignedPlan;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.AssignedPlan = AssignedPlan;

    /// <summary>
    /// There are no comments for ProvisionedPlan in the schema.
    /// </summary>
    var ProvisionedPlan = (function (_super) {
        __extends(ProvisionedPlan, _super);
        function ProvisionedPlan(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ProvisionedPlan';
            this._capabilityStatusChanged = false;
            this._provisioningStatusChanged = false;
            this._serviceChanged = false;

            if (!data) {
                return;
            }

            this._capabilityStatus = data.capabilityStatus;
            this._provisioningStatus = data.provisioningStatus;
            this._service = data.service;
        }
        Object.defineProperty(ProvisionedPlan.prototype, "capabilityStatus", {
            /// <summary>
            /// There are no comments for Property capabilityStatus in the schema.
            /// </summary>
            get: function () {
                return this._capabilityStatus;
            },
            set: function (value) {
                if (value !== this._capabilityStatus) {
                    this._capabilityStatusChanged = true;
                    this.changed = true;
                }
                this._capabilityStatus = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisionedPlan.prototype, "capabilityStatusChanged", {
            get: function () {
                return this._capabilityStatusChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ProvisionedPlan.prototype, "provisioningStatus", {
            /// <summary>
            /// There are no comments for Property provisioningStatus in the schema.
            /// </summary>
            get: function () {
                return this._provisioningStatus;
            },
            set: function (value) {
                if (value !== this._provisioningStatus) {
                    this._provisioningStatusChanged = true;
                    this.changed = true;
                }
                this._provisioningStatus = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisionedPlan.prototype, "provisioningStatusChanged", {
            get: function () {
                return this._provisioningStatusChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ProvisionedPlan.prototype, "service", {
            /// <summary>
            /// There are no comments for Property service in the schema.
            /// </summary>
            get: function () {
                return this._service;
            },
            set: function (value) {
                if (value !== this._service) {
                    this._serviceChanged = true;
                    this.changed = true;
                }
                this._service = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ProvisionedPlan.prototype, "serviceChanged", {
            get: function () {
                return this._serviceChanged;
            },
            enumerable: true,
            configurable: true
        });

        ProvisionedPlan.parseProvisionedPlan = function (data) {
            if (!data)
                return null;

            return new ProvisionedPlan(data);
        };

        ProvisionedPlan.parseProvisionedPlans = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ProvisionedPlan.parseProvisionedPlan(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        ProvisionedPlan.prototype.getRequestBody = function () {
            return {
                capabilityStatus: (this.capabilityStatusChanged && this.capabilityStatus) ? this.capabilityStatus : undefined,
                provisioningStatus: (this.provisioningStatusChanged && this.provisioningStatus) ? this.provisioningStatus : undefined,
                service: (this.serviceChanged && this.service) ? this.service : undefined,
                'odata.type': this._odataType
            };
        };
        return ProvisionedPlan;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.ProvisionedPlan = ProvisionedPlan;

    /// <summary>
    /// There are no comments for VerifiedDomain in the schema.
    /// </summary>
    var VerifiedDomain = (function (_super) {
        __extends(VerifiedDomain, _super);
        function VerifiedDomain(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.VerifiedDomain';
            this._capabilitiesChanged = false;
            this._defaultChanged = false;
            this._idChanged = false;
            this._initialChanged = false;
            this._nameChanged = false;
            this._typeChanged = false;

            if (!data) {
                return;
            }

            this._capabilities = data.capabilities;
            this._default = data.default;
            this._id = data.id;
            this._initial = data.initial;
            this._name = data.name;
            this._type = data.type;
        }
        Object.defineProperty(VerifiedDomain.prototype, "capabilities", {
            /// <summary>
            /// There are no comments for Property capabilities in the schema.
            /// </summary>
            get: function () {
                return this._capabilities;
            },
            set: function (value) {
                if (value !== this._capabilities) {
                    this._capabilitiesChanged = true;
                    this.changed = true;
                }
                this._capabilities = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "capabilitiesChanged", {
            get: function () {
                return this._capabilitiesChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(VerifiedDomain.prototype, "default", {
            /// <summary>
            /// There are no comments for Property default in the schema.
            /// </summary>
            get: function () {
                return this._default;
            },
            set: function (value) {
                if (value !== this._default) {
                    this._defaultChanged = true;
                    this.changed = true;
                }
                this._default = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "defaultChanged", {
            get: function () {
                return this._defaultChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(VerifiedDomain.prototype, "id", {
            /// <summary>
            /// There are no comments for Property id in the schema.
            /// </summary>
            get: function () {
                return this._id;
            },
            set: function (value) {
                if (value !== this._id) {
                    this._idChanged = true;
                    this.changed = true;
                }
                this._id = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "idChanged", {
            get: function () {
                return this._idChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(VerifiedDomain.prototype, "initial", {
            /// <summary>
            /// There are no comments for Property initial in the schema.
            /// </summary>
            get: function () {
                return this._initial;
            },
            set: function (value) {
                if (value !== this._initial) {
                    this._initialChanged = true;
                    this.changed = true;
                }
                this._initial = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "initialChanged", {
            get: function () {
                return this._initialChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(VerifiedDomain.prototype, "name", {
            /// <summary>
            /// There are no comments for Property name in the schema.
            /// </summary>
            get: function () {
                return this._name;
            },
            set: function (value) {
                if (value !== this._name) {
                    this._nameChanged = true;
                    this.changed = true;
                }
                this._name = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "nameChanged", {
            get: function () {
                return this._nameChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(VerifiedDomain.prototype, "type", {
            /// <summary>
            /// There are no comments for Property type in the schema.
            /// </summary>
            get: function () {
                return this._type;
            },
            set: function (value) {
                if (value !== this._type) {
                    this._typeChanged = true;
                    this.changed = true;
                }
                this._type = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(VerifiedDomain.prototype, "typeChanged", {
            get: function () {
                return this._typeChanged;
            },
            enumerable: true,
            configurable: true
        });

        VerifiedDomain.parseVerifiedDomain = function (data) {
            if (!data)
                return null;

            return new VerifiedDomain(data);
        };

        VerifiedDomain.parseVerifiedDomains = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(VerifiedDomain.parseVerifiedDomain(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        VerifiedDomain.prototype.getRequestBody = function () {
            return {
                capabilities: (this.capabilitiesChanged && this.capabilities) ? this.capabilities : undefined,
                default: (this.defaultChanged && this.default) ? this.default : undefined,
                id: (this.idChanged && this.id) ? this.id : undefined,
                initial: (this.initialChanged && this.initial) ? this.initial : undefined,
                name: (this.nameChanged && this.name) ? this.name : undefined,
                type: (this.typeChanged && this.type) ? this.type : undefined,
                'odata.type': this._odataType
            };
        };
        return VerifiedDomain;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.VerifiedDomain = VerifiedDomain;

    /// <summary>
    /// There are no comments for PasswordProfile in the schema.
    /// </summary>
    var PasswordProfile = (function (_super) {
        __extends(PasswordProfile, _super);
        function PasswordProfile(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.PasswordProfile';
            this._passwordChanged = false;
            this._forceChangePasswordNextLoginChanged = false;

            if (!data) {
                return;
            }

            this._password = data.password;
            this._forceChangePasswordNextLogin = data.forceChangePasswordNextLogin;
        }
        Object.defineProperty(PasswordProfile.prototype, "password", {
            /// <summary>
            /// There are no comments for Property password in the schema.
            /// </summary>
            get: function () {
                return this._password;
            },
            set: function (value) {
                if (value !== this._password) {
                    this._passwordChanged = true;
                    this.changed = true;
                }
                this._password = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordProfile.prototype, "passwordChanged", {
            get: function () {
                return this._passwordChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(PasswordProfile.prototype, "forceChangePasswordNextLogin", {
            /// <summary>
            /// There are no comments for Property forceChangePasswordNextLogin in the schema.
            /// </summary>
            get: function () {
                return this._forceChangePasswordNextLogin;
            },
            set: function (value) {
                if (value !== this._forceChangePasswordNextLogin) {
                    this._forceChangePasswordNextLoginChanged = true;
                    this.changed = true;
                }
                this._forceChangePasswordNextLogin = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PasswordProfile.prototype, "forceChangePasswordNextLoginChanged", {
            get: function () {
                return this._forceChangePasswordNextLoginChanged;
            },
            enumerable: true,
            configurable: true
        });

        PasswordProfile.parsePasswordProfile = function (data) {
            if (!data)
                return null;

            return new PasswordProfile(data);
        };

        PasswordProfile.parsePasswordProfiles = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(PasswordProfile.parsePasswordProfile(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        PasswordProfile.prototype.getRequestBody = function () {
            return {
                password: (this.passwordChanged && this.password) ? this.password : undefined,
                forceChangePasswordNextLogin: (this.forceChangePasswordNextLoginChanged && this.forceChangePasswordNextLogin) ? this.forceChangePasswordNextLogin : undefined,
                'odata.type': this._odataType
            };
        };
        return PasswordProfile;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.PasswordProfile = PasswordProfile;

    /// <summary>
    /// There are no comments for EnabledFeature in the schema.
    /// </summary>
    var EnabledFeatureFetcher = (function (_super) {
        __extends(EnabledFeatureFetcher, _super);
        function EnabledFeatureFetcher(context, path) {
            _super.call(this, context, path);
        }
        EnabledFeatureFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/enabledFeatures' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "featureId", type: "Edm.String", value: parsedData.featureId }]);
                deferred.resolve(EnabledFeature.parseEnabledFeature(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return EnabledFeatureFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.EnabledFeatureFetcher = EnabledFeatureFetcher;

    /// <summary>
    /// There are no comments for EnabledFeature in the schema.
    /// </summary>
    var EnabledFeature = (function (_super) {
        __extends(EnabledFeature, _super);
        function EnabledFeature(context, path, data) {
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.EnabledFeature';
            this._featureIdChanged = false;
            this._featureNameChanged = false;

            if (!data) {
                return;
            }

            this._featureId = data.featureId;
            this._featureName = data.featureName;
        }
        Object.defineProperty(EnabledFeature.prototype, "featureId", {
            /// <summary>
            /// There are no comments for Property featureId in the schema.
            /// </summary>
            get: function () {
                return this._featureId;
            },
            set: function (value) {
                if (value !== this._featureId) {
                    this._featureIdChanged = true;
                    this.changed = true;
                }
                this._featureId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(EnabledFeature.prototype, "featureIdChanged", {
            get: function () {
                return this._featureIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(EnabledFeature.prototype, "featureName", {
            /// <summary>
            /// There are no comments for Property featureName in the schema.
            /// </summary>
            get: function () {
                return this._featureName;
            },
            set: function (value) {
                if (value !== this._featureName) {
                    this._featureNameChanged = true;
                    this.changed = true;
                }
                this._featureName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(EnabledFeature.prototype, "featureNameChanged", {
            get: function () {
                return this._featureNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        EnabledFeature.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/enabledFeatures' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "featureId", type: "Edm.String", value: parsedData.featureId }]);
                deferred.resolve(EnabledFeature.parseEnabledFeature(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        EnabledFeature.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        EnabledFeature.parseEnabledFeature = function (context, path, data) {
            if (!data)
                return null;

            return new EnabledFeature(context, path, data);
        };

        EnabledFeature.parseEnabledFeatures = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(EnabledFeature.parseEnabledFeature(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        EnabledFeature.prototype.getRequestBody = function () {
            return {
                featureId: (this.featureIdChanged && this.featureId) ? this.featureId : undefined,
                featureName: (this.featureNameChanged && this.featureName) ? this.featureName : undefined,
                'odata.type': this._odataType
            };
        };
        return EnabledFeature;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.EnabledFeature = EnabledFeature;

    /// <summary>
    /// There are no comments for LoginTenantBranding in the schema.
    /// </summary>
    var LoginTenantBrandingFetcher = (function (_super) {
        __extends(LoginTenantBrandingFetcher, _super);
        function LoginTenantBrandingFetcher(context, path) {
            _super.call(this, context, path);
        }
        LoginTenantBrandingFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/loginTenantBranding' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "locale", type: "Edm.String", value: parsedData.locale }]);
                deferred.resolve(LoginTenantBranding.parseLoginTenantBranding(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return LoginTenantBrandingFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.LoginTenantBrandingFetcher = LoginTenantBrandingFetcher;

    /// <summary>
    /// There are no comments for LoginTenantBranding in the schema.
    /// </summary>
    var LoginTenantBranding = (function (_super) {
        __extends(LoginTenantBranding, _super);
        function LoginTenantBranding(context, path, data) {
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.LoginTenantBranding';
            this._backgroundColorChanged = false;
            this._bannerLogoChanged = false;
            this._bannerLogoUrlChanged = false;
            this._boilerPlateTextChanged = false;
            this._illustrationChanged = false;
            this._illustrationUrlChanged = false;
            this._localeChanged = false;
            this._metadataUrlChanged = false;
            this._tileLogoChanged = false;
            this._tileLogoUrlChanged = false;
            this._userIdLabelChanged = false;

            if (!data) {
                return;
            }

            this._backgroundColor = data.backgroundColor;
            this._bannerLogo = data.bannerLogo;
            this._bannerLogoUrl = data.bannerLogoUrl;
            this._boilerPlateText = data.boilerPlateText;
            this._illustration = data.illustration;
            this._illustrationUrl = data.illustrationUrl;
            this._locale = data.locale;
            this._metadataUrl = data.metadataUrl;
            this._tileLogo = data.tileLogo;
            this._tileLogoUrl = data.tileLogoUrl;
            this._userIdLabel = data.userIdLabel;
        }
        Object.defineProperty(LoginTenantBranding.prototype, "backgroundColor", {
            /// <summary>
            /// There are no comments for Property backgroundColor in the schema.
            /// </summary>
            get: function () {
                return this._backgroundColor;
            },
            set: function (value) {
                if (value !== this._backgroundColor) {
                    this._backgroundColorChanged = true;
                    this.changed = true;
                }
                this._backgroundColor = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "backgroundColorChanged", {
            get: function () {
                return this._backgroundColorChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "bannerLogo", {
            /// <summary>
            /// There are no comments for Property bannerLogo in the schema.
            /// </summary>
            get: function () {
                return this._bannerLogo;
            },
            set: function (value) {
                if (value !== this._bannerLogo) {
                    this._bannerLogoChanged = true;
                    this.changed = true;
                }
                this._bannerLogo = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "bannerLogoChanged", {
            get: function () {
                return this._bannerLogoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "bannerLogoUrl", {
            /// <summary>
            /// There are no comments for Property bannerLogoUrl in the schema.
            /// </summary>
            get: function () {
                return this._bannerLogoUrl;
            },
            set: function (value) {
                if (value !== this._bannerLogoUrl) {
                    this._bannerLogoUrlChanged = true;
                    this.changed = true;
                }
                this._bannerLogoUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "bannerLogoUrlChanged", {
            get: function () {
                return this._bannerLogoUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "boilerPlateText", {
            /// <summary>
            /// There are no comments for Property boilerPlateText in the schema.
            /// </summary>
            get: function () {
                return this._boilerPlateText;
            },
            set: function (value) {
                if (value !== this._boilerPlateText) {
                    this._boilerPlateTextChanged = true;
                    this.changed = true;
                }
                this._boilerPlateText = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "boilerPlateTextChanged", {
            get: function () {
                return this._boilerPlateTextChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "illustration", {
            /// <summary>
            /// There are no comments for Property illustration in the schema.
            /// </summary>
            get: function () {
                return this._illustration;
            },
            set: function (value) {
                if (value !== this._illustration) {
                    this._illustrationChanged = true;
                    this.changed = true;
                }
                this._illustration = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "illustrationChanged", {
            get: function () {
                return this._illustrationChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "illustrationUrl", {
            /// <summary>
            /// There are no comments for Property illustrationUrl in the schema.
            /// </summary>
            get: function () {
                return this._illustrationUrl;
            },
            set: function (value) {
                if (value !== this._illustrationUrl) {
                    this._illustrationUrlChanged = true;
                    this.changed = true;
                }
                this._illustrationUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "illustrationUrlChanged", {
            get: function () {
                return this._illustrationUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "locale", {
            /// <summary>
            /// There are no comments for Property locale in the schema.
            /// </summary>
            get: function () {
                return this._locale;
            },
            set: function (value) {
                if (value !== this._locale) {
                    this._localeChanged = true;
                    this.changed = true;
                }
                this._locale = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "localeChanged", {
            get: function () {
                return this._localeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "metadataUrl", {
            /// <summary>
            /// There are no comments for Property metadataUrl in the schema.
            /// </summary>
            get: function () {
                return this._metadataUrl;
            },
            set: function (value) {
                if (value !== this._metadataUrl) {
                    this._metadataUrlChanged = true;
                    this.changed = true;
                }
                this._metadataUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "metadataUrlChanged", {
            get: function () {
                return this._metadataUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "tileLogo", {
            /// <summary>
            /// There are no comments for Property tileLogo in the schema.
            /// </summary>
            get: function () {
                return this._tileLogo;
            },
            set: function (value) {
                if (value !== this._tileLogo) {
                    this._tileLogoChanged = true;
                    this.changed = true;
                }
                this._tileLogo = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "tileLogoChanged", {
            get: function () {
                return this._tileLogoChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "tileLogoUrl", {
            /// <summary>
            /// There are no comments for Property tileLogoUrl in the schema.
            /// </summary>
            get: function () {
                return this._tileLogoUrl;
            },
            set: function (value) {
                if (value !== this._tileLogoUrl) {
                    this._tileLogoUrlChanged = true;
                    this.changed = true;
                }
                this._tileLogoUrl = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "tileLogoUrlChanged", {
            get: function () {
                return this._tileLogoUrlChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LoginTenantBranding.prototype, "userIdLabel", {
            /// <summary>
            /// There are no comments for Property userIdLabel in the schema.
            /// </summary>
            get: function () {
                return this._userIdLabel;
            },
            set: function (value) {
                if (value !== this._userIdLabel) {
                    this._userIdLabelChanged = true;
                    this.changed = true;
                }
                this._userIdLabel = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LoginTenantBranding.prototype, "userIdLabelChanged", {
            get: function () {
                return this._userIdLabelChanged;
            },
            enumerable: true,
            configurable: true
        });

        LoginTenantBranding.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/loginTenantBranding' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "locale", type: "Edm.String", value: parsedData.locale }]);
                deferred.resolve(LoginTenantBranding.parseLoginTenantBranding(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        LoginTenantBranding.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        LoginTenantBranding.parseLoginTenantBranding = function (context, path, data) {
            if (!data)
                return null;

            return new LoginTenantBranding(context, path, data);
        };

        LoginTenantBranding.parseLoginTenantBrandings = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(LoginTenantBranding.parseLoginTenantBranding(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        LoginTenantBranding.prototype.getRequestBody = function () {
            return {
                backgroundColor: (this.backgroundColorChanged && this.backgroundColor) ? this.backgroundColor : undefined,
                bannerLogo: (this.bannerLogoChanged && this.bannerLogo) ? this.bannerLogo : undefined,
                bannerLogoUrl: (this.bannerLogoUrlChanged && this.bannerLogoUrl) ? this.bannerLogoUrl : undefined,
                boilerPlateText: (this.boilerPlateTextChanged && this.boilerPlateText) ? this.boilerPlateText : undefined,
                illustration: (this.illustrationChanged && this.illustration) ? this.illustration : undefined,
                illustrationUrl: (this.illustrationUrlChanged && this.illustrationUrl) ? this.illustrationUrl : undefined,
                locale: (this.localeChanged && this.locale) ? this.locale : undefined,
                metadataUrl: (this.metadataUrlChanged && this.metadataUrl) ? this.metadataUrl : undefined,
                tileLogo: (this.tileLogoChanged && this.tileLogo) ? this.tileLogo : undefined,
                tileLogoUrl: (this.tileLogoUrlChanged && this.tileLogoUrl) ? this.tileLogoUrl : undefined,
                userIdLabel: (this.userIdLabelChanged && this.userIdLabel) ? this.userIdLabel : undefined,
                'odata.type': this._odataType
            };
        };
        return LoginTenantBranding;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.LoginTenantBranding = LoginTenantBranding;

    /// <summary>
    /// There are no comments for ImpersonationAccessGrant in the schema.
    /// </summary>
    var ImpersonationAccessGrantFetcher = (function (_super) {
        __extends(ImpersonationAccessGrantFetcher, _super);
        function ImpersonationAccessGrantFetcher(context, path) {
            _super.call(this, context, path);
        }
        ImpersonationAccessGrantFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/impersonationAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(ImpersonationAccessGrant.parseImpersonationAccessGrant(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return ImpersonationAccessGrantFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.ImpersonationAccessGrantFetcher = ImpersonationAccessGrantFetcher;

    /// <summary>
    /// There are no comments for ImpersonationAccessGrant in the schema.
    /// </summary>
    var ImpersonationAccessGrant = (function (_super) {
        __extends(ImpersonationAccessGrant, _super);
        function ImpersonationAccessGrant(context, path, data) {
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ImpersonationAccessGrant';
            this._clientIdChanged = false;
            this._consentTypeChanged = false;
            this._expiryTimeChanged = false;
            this._objectIdChanged = false;
            this._principalIdChanged = false;
            this._resourceIdChanged = false;
            this._scopeChanged = false;
            this._startTimeChanged = false;

            if (!data) {
                return;
            }

            this._clientId = data.clientId;
            this._consentType = data.consentType;
            this._expiryTime = (data.expiryTime !== null) ? new Date(data.expiryTime) : null;
            this._objectId = data.objectId;
            this._principalId = data.principalId;
            this._resourceId = data.resourceId;
            this._scope = data.scope;
            this._startTime = (data.startTime !== null) ? new Date(data.startTime) : null;
        }
        Object.defineProperty(ImpersonationAccessGrant.prototype, "clientId", {
            /// <summary>
            /// There are no comments for Property clientId in the schema.
            /// </summary>
            get: function () {
                return this._clientId;
            },
            set: function (value) {
                if (value !== this._clientId) {
                    this._clientIdChanged = true;
                    this.changed = true;
                }
                this._clientId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "clientIdChanged", {
            get: function () {
                return this._clientIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "consentType", {
            /// <summary>
            /// There are no comments for Property consentType in the schema.
            /// </summary>
            get: function () {
                return this._consentType;
            },
            set: function (value) {
                if (value !== this._consentType) {
                    this._consentTypeChanged = true;
                    this.changed = true;
                }
                this._consentType = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "consentTypeChanged", {
            get: function () {
                return this._consentTypeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "expiryTime", {
            /// <summary>
            /// There are no comments for Property expiryTime in the schema.
            /// </summary>
            get: function () {
                return this._expiryTime;
            },
            set: function (value) {
                if (value !== this._expiryTime) {
                    this._expiryTimeChanged = true;
                    this.changed = true;
                }
                this._expiryTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "expiryTimeChanged", {
            get: function () {
                return this._expiryTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "objectId", {
            /// <summary>
            /// There are no comments for Property objectId in the schema.
            /// </summary>
            get: function () {
                return this._objectId;
            },
            set: function (value) {
                if (value !== this._objectId) {
                    this._objectIdChanged = true;
                    this.changed = true;
                }
                this._objectId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "objectIdChanged", {
            get: function () {
                return this._objectIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "principalId", {
            /// <summary>
            /// There are no comments for Property principalId in the schema.
            /// </summary>
            get: function () {
                return this._principalId;
            },
            set: function (value) {
                if (value !== this._principalId) {
                    this._principalIdChanged = true;
                    this.changed = true;
                }
                this._principalId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "principalIdChanged", {
            get: function () {
                return this._principalIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "resourceId", {
            /// <summary>
            /// There are no comments for Property resourceId in the schema.
            /// </summary>
            get: function () {
                return this._resourceId;
            },
            set: function (value) {
                if (value !== this._resourceId) {
                    this._resourceIdChanged = true;
                    this.changed = true;
                }
                this._resourceId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "resourceIdChanged", {
            get: function () {
                return this._resourceIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "scope", {
            /// <summary>
            /// There are no comments for Property scope in the schema.
            /// </summary>
            get: function () {
                return this._scope;
            },
            set: function (value) {
                if (value !== this._scope) {
                    this._scopeChanged = true;
                    this.changed = true;
                }
                this._scope = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "scopeChanged", {
            get: function () {
                return this._scopeChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ImpersonationAccessGrant.prototype, "startTime", {
            /// <summary>
            /// There are no comments for Property startTime in the schema.
            /// </summary>
            get: function () {
                return this._startTime;
            },
            set: function (value) {
                if (value !== this._startTime) {
                    this._startTimeChanged = true;
                    this.changed = true;
                }
                this._startTime = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ImpersonationAccessGrant.prototype, "startTimeChanged", {
            get: function () {
                return this._startTimeChanged;
            },
            enumerable: true,
            configurable: true
        });

        ImpersonationAccessGrant.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/impersonationAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(ImpersonationAccessGrant.parseImpersonationAccessGrant(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ImpersonationAccessGrant.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        ImpersonationAccessGrant.parseImpersonationAccessGrant = function (context, path, data) {
            if (!data)
                return null;

            return new ImpersonationAccessGrant(context, path, data);
        };

        ImpersonationAccessGrant.parseImpersonationAccessGrants = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ImpersonationAccessGrant.parseImpersonationAccessGrant(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        ImpersonationAccessGrant.prototype.getRequestBody = function () {
            return {
                clientId: (this.clientIdChanged && this.clientId) ? this.clientId : undefined,
                consentType: (this.consentTypeChanged && this.consentType) ? this.consentType : undefined,
                expiryTime: (this.expiryTimeChanged && this.expiryTime) ? this.expiryTime.toString() : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                principalId: (this.principalIdChanged && this.principalId) ? this.principalId : undefined,
                resourceId: (this.resourceIdChanged && this.resourceId) ? this.resourceId : undefined,
                scope: (this.scopeChanged && this.scope) ? this.scope : undefined,
                startTime: (this.startTimeChanged && this.startTime) ? this.startTime.toString() : undefined,
                'odata.type': this._odataType
            };
        };
        return ImpersonationAccessGrant;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.ImpersonationAccessGrant = ImpersonationAccessGrant;

    /// <summary>
    /// There are no comments for SubscribedSku in the schema.
    /// </summary>
    var SubscribedSkuFetcher = (function (_super) {
        __extends(SubscribedSkuFetcher, _super);
        function SubscribedSkuFetcher(context, path) {
            _super.call(this, context, path);
        }
        SubscribedSkuFetcher.prototype.fetch = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            this.context.readUrl(this.path).then((function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/subscribedSkus' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(SubscribedSku.parseSubscribedSku(_this.context, path, parsedData));
            }).bind(this), deferred.reject.bind(deferred));

            return deferred;
        };
        return SubscribedSkuFetcher;
    })(AadGraph.Extensions.RestShallowObjectFetcher);
    AadGraph.SubscribedSkuFetcher = SubscribedSkuFetcher;

    /// <summary>
    /// There are no comments for SubscribedSku in the schema.
    /// </summary>
    var SubscribedSku = (function (_super) {
        __extends(SubscribedSku, _super);
        function SubscribedSku(context, path, data) {
            var _this = this;
            _super.call(this, context, path);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.SubscribedSku';
            this._capabilityStatusChanged = false;
            this._consumedUnitsChanged = false;
            this._objectIdChanged = false;
            this._prepaidUnitsChanged = false;
            this._prepaidUnitsChangedListener = (function (value) {
                _this._prepaidUnitsChanged = true;
                _this.changed = true;
            }).bind(this);
            this._servicePlans = new AadGraph.Extensions.ObservableCollection();
            this._servicePlansChanged = false;
            this._servicePlansChangedListener = (function (value) {
                _this._servicePlansChanged = true;
                _this.changed = true;
            }).bind(this);
            this._skuIdChanged = false;
            this._skuPartNumberChanged = false;

            if (!data) {
                this._servicePlans.addChangedListener(this._servicePlansChangedListener);
                return;
            }

            this._capabilityStatus = data.capabilityStatus;
            this._consumedUnits = data.consumedUnits;
            this._objectId = data.objectId;
            this._prepaidUnits = LicenseUnitsDetail.parseLicenseUnitsDetail(data.prepaidUnits);
            if (this._prepaidUnits) {
                this._prepaidUnits.addChangedListener(this._prepaidUnitsChangedListener);
            }
            this._servicePlans = ServicePlanInfo.parseServicePlanInfos(data.servicePlans);
            this._servicePlans.addChangedListener(this._servicePlansChangedListener);
            this._skuId = data.skuId;
            this._skuPartNumber = data.skuPartNumber;
        }
        Object.defineProperty(SubscribedSku.prototype, "capabilityStatus", {
            /// <summary>
            /// There are no comments for Property capabilityStatus in the schema.
            /// </summary>
            get: function () {
                return this._capabilityStatus;
            },
            set: function (value) {
                if (value !== this._capabilityStatus) {
                    this._capabilityStatusChanged = true;
                    this.changed = true;
                }
                this._capabilityStatus = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "capabilityStatusChanged", {
            get: function () {
                return this._capabilityStatusChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "consumedUnits", {
            /// <summary>
            /// There are no comments for Property consumedUnits in the schema.
            /// </summary>
            get: function () {
                return this._consumedUnits;
            },
            set: function (value) {
                if (value !== this._consumedUnits) {
                    this._consumedUnitsChanged = true;
                    this.changed = true;
                }
                this._consumedUnits = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "consumedUnitsChanged", {
            get: function () {
                return this._consumedUnitsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "objectId", {
            /// <summary>
            /// There are no comments for Property objectId in the schema.
            /// </summary>
            get: function () {
                return this._objectId;
            },
            set: function (value) {
                if (value !== this._objectId) {
                    this._objectIdChanged = true;
                    this.changed = true;
                }
                this._objectId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "objectIdChanged", {
            get: function () {
                return this._objectIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "prepaidUnits", {
            /// <summary>
            /// There are no comments for Property prepaidUnits in the schema.
            /// </summary>
            get: function () {
                return this._prepaidUnits;
            },
            set: function (value) {
                if (this._prepaidUnits) {
                    this._prepaidUnits.removeChangedListener(this._prepaidUnitsChangedListener);
                }
                if (value !== this._prepaidUnits) {
                    this._prepaidUnitsChanged = true;
                    this.changed = true;
                }
                if (this._prepaidUnits) {
                    this._prepaidUnits.addChangedListener(this._prepaidUnitsChangedListener);
                }
                this._prepaidUnits = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "prepaidUnitsChanged", {
            get: function () {
                return this._prepaidUnitsChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "servicePlans", {
            /// <summary>
            /// There are no comments for Property servicePlans in the schema.
            /// </summary>
            get: function () {
                return this._servicePlans;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "servicePlansChanged", {
            get: function () {
                return this._servicePlansChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "skuId", {
            /// <summary>
            /// There are no comments for Property skuId in the schema.
            /// </summary>
            get: function () {
                return this._skuId;
            },
            set: function (value) {
                if (value !== this._skuId) {
                    this._skuIdChanged = true;
                    this.changed = true;
                }
                this._skuId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "skuIdChanged", {
            get: function () {
                return this._skuIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(SubscribedSku.prototype, "skuPartNumber", {
            /// <summary>
            /// There are no comments for Property skuPartNumber in the schema.
            /// </summary>
            get: function () {
                return this._skuPartNumber;
            },
            set: function (value) {
                if (value !== this._skuPartNumber) {
                    this._skuPartNumberChanged = true;
                    this.changed = true;
                }
                this._skuPartNumber = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(SubscribedSku.prototype, "skuPartNumberChanged", {
            get: function () {
                return this._skuPartNumberChanged;
            },
            enumerable: true,
            configurable: true
        });

        SubscribedSku.prototype.update = function () {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'PATCH';
            request.data = JSON.stringify(this.getRequestBody());

            this.context.request(request).then(function (data) {
                var parsedData = JSON.parse(data), path = _this.context.serviceRootUri + '/subscribedSkus' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: parsedData.objectId }]);
                deferred.resolve(SubscribedSku.parseSubscribedSku(_this.context, path, parsedData));
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        SubscribedSku.prototype.delete = function () {
            var deferred = new Microsoft.Utility.Deferred(), request = new AadGraph.Extensions.Request(this.path);

            request.method = 'DELETE';

            this.context.request(request).then(function (data) {
                deferred.resolve(null);
            }, deferred.reject.bind(deferred));

            return deferred;
        };

        SubscribedSku.parseSubscribedSku = function (context, path, data) {
            if (!data)
                return null;

            return new SubscribedSku(context, path, data);
        };

        SubscribedSku.parseSubscribedSkus = function (context, pathFn, data) {
            var results = [];

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(SubscribedSku.parseSubscribedSku(context, pathFn(data[i]), data[i]));
                }
            }

            return results;
        };

        SubscribedSku.prototype.getRequestBody = function () {
            return {
                capabilityStatus: (this.capabilityStatusChanged && this.capabilityStatus) ? this.capabilityStatus : undefined,
                consumedUnits: (this.consumedUnitsChanged && this.consumedUnits) ? this.consumedUnits : undefined,
                objectId: (this.objectIdChanged && this.objectId) ? this.objectId : undefined,
                prepaidUnits: (this.prepaidUnitsChanged && this.prepaidUnits) ? this.prepaidUnits.getRequestBody() : undefined,
                servicePlans: (this.servicePlansChanged) ? (function (servicePlans) {
                    if (!servicePlans) {
                        return undefined;
                    }
                    var converted = [];
                    servicePlans.forEach(function (value, index, array) {
                        converted.push(value.getRequestBody());
                    });
                    return converted;
                })(this.servicePlans) : undefined,
                skuId: (this.skuIdChanged && this.skuId) ? this.skuId : undefined,
                skuPartNumber: (this.skuPartNumberChanged && this.skuPartNumber) ? this.skuPartNumber : undefined,
                'odata.type': this._odataType
            };
        };
        return SubscribedSku;
    })(AadGraph.Extensions.EntityBase);
    AadGraph.SubscribedSku = SubscribedSku;

    /// <summary>
    /// There are no comments for LicenseUnitsDetail in the schema.
    /// </summary>
    var LicenseUnitsDetail = (function (_super) {
        __extends(LicenseUnitsDetail, _super);
        function LicenseUnitsDetail(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.LicenseUnitsDetail';
            this._enabledChanged = false;
            this._suspendedChanged = false;
            this._warningChanged = false;

            if (!data) {
                return;
            }

            this._enabled = data.enabled;
            this._suspended = data.suspended;
            this._warning = data.warning;
        }
        Object.defineProperty(LicenseUnitsDetail.prototype, "enabled", {
            /// <summary>
            /// There are no comments for Property enabled in the schema.
            /// </summary>
            get: function () {
                return this._enabled;
            },
            set: function (value) {
                if (value !== this._enabled) {
                    this._enabledChanged = true;
                    this.changed = true;
                }
                this._enabled = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LicenseUnitsDetail.prototype, "enabledChanged", {
            get: function () {
                return this._enabledChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LicenseUnitsDetail.prototype, "suspended", {
            /// <summary>
            /// There are no comments for Property suspended in the schema.
            /// </summary>
            get: function () {
                return this._suspended;
            },
            set: function (value) {
                if (value !== this._suspended) {
                    this._suspendedChanged = true;
                    this.changed = true;
                }
                this._suspended = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LicenseUnitsDetail.prototype, "suspendedChanged", {
            get: function () {
                return this._suspendedChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(LicenseUnitsDetail.prototype, "warning", {
            /// <summary>
            /// There are no comments for Property warning in the schema.
            /// </summary>
            get: function () {
                return this._warning;
            },
            set: function (value) {
                if (value !== this._warning) {
                    this._warningChanged = true;
                    this.changed = true;
                }
                this._warning = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(LicenseUnitsDetail.prototype, "warningChanged", {
            get: function () {
                return this._warningChanged;
            },
            enumerable: true,
            configurable: true
        });

        LicenseUnitsDetail.parseLicenseUnitsDetail = function (data) {
            if (!data)
                return null;

            return new LicenseUnitsDetail(data);
        };

        LicenseUnitsDetail.parseLicenseUnitsDetails = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(LicenseUnitsDetail.parseLicenseUnitsDetail(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        LicenseUnitsDetail.prototype.getRequestBody = function () {
            return {
                enabled: (this.enabledChanged && this.enabled) ? this.enabled : undefined,
                suspended: (this.suspendedChanged && this.suspended) ? this.suspended : undefined,
                warning: (this.warningChanged && this.warning) ? this.warning : undefined,
                'odata.type': this._odataType
            };
        };
        return LicenseUnitsDetail;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.LicenseUnitsDetail = LicenseUnitsDetail;

    /// <summary>
    /// There are no comments for ServicePlanInfo in the schema.
    /// </summary>
    var ServicePlanInfo = (function (_super) {
        __extends(ServicePlanInfo, _super);
        function ServicePlanInfo(data) {
            _super.call(this);
            this._odataType = 'Microsoft.WindowsAzure.ActiveDirectory.ServicePlanInfo';
            this._servicePlanIdChanged = false;
            this._servicePlanNameChanged = false;

            if (!data) {
                return;
            }

            this._servicePlanId = data.servicePlanId;
            this._servicePlanName = data.servicePlanName;
        }
        Object.defineProperty(ServicePlanInfo.prototype, "servicePlanId", {
            /// <summary>
            /// There are no comments for Property servicePlanId in the schema.
            /// </summary>
            get: function () {
                return this._servicePlanId;
            },
            set: function (value) {
                if (value !== this._servicePlanId) {
                    this._servicePlanIdChanged = true;
                    this.changed = true;
                }
                this._servicePlanId = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePlanInfo.prototype, "servicePlanIdChanged", {
            get: function () {
                return this._servicePlanIdChanged;
            },
            enumerable: true,
            configurable: true
        });

        Object.defineProperty(ServicePlanInfo.prototype, "servicePlanName", {
            /// <summary>
            /// There are no comments for Property servicePlanName in the schema.
            /// </summary>
            get: function () {
                return this._servicePlanName;
            },
            set: function (value) {
                if (value !== this._servicePlanName) {
                    this._servicePlanNameChanged = true;
                    this.changed = true;
                }
                this._servicePlanName = value;
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(ServicePlanInfo.prototype, "servicePlanNameChanged", {
            get: function () {
                return this._servicePlanNameChanged;
            },
            enumerable: true,
            configurable: true
        });

        ServicePlanInfo.parseServicePlanInfo = function (data) {
            if (!data)
                return null;

            return new ServicePlanInfo(data);
        };

        ServicePlanInfo.parseServicePlanInfos = function (data) {
            var results = new AadGraph.Extensions.ObservableCollection();

            if (data) {
                for (var i = 0; i < data.length; ++i) {
                    results.push(ServicePlanInfo.parseServicePlanInfo(data[i]));
                }
            }

            results.changed = false;

            return results;
        };

        ServicePlanInfo.prototype.getRequestBody = function () {
            return {
                servicePlanId: (this.servicePlanIdChanged && this.servicePlanId) ? this.servicePlanId : undefined,
                servicePlanName: (this.servicePlanNameChanged && this.servicePlanName) ? this.servicePlanName : undefined,
                'odata.type': this._odataType
            };
        };
        return ServicePlanInfo;
    })(AadGraph.Extensions.ComplexTypeBase);
    AadGraph.ServicePlanInfo = ServicePlanInfo;
    var ApplicationRefs = (function (_super) {
        __extends(ApplicationRefs, _super);
        function ApplicationRefs(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/applicationRefs' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "appId", type: "Edm.String", value: data.appId }]);
                };
                return ApplicationRef.parseApplicationRefs(context, pathFn, data.value);
            };
        }
        ApplicationRefs.prototype.getApplicationRef = function (appId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "appId", type: "Edm.String", value: appId }]);
            var fetcher = new ApplicationRefFetcher(this.context, path);
            return fetcher;
        };

        ApplicationRefs.prototype.getApplicationRefs = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        ApplicationRefs.prototype.addApplicationRef = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "appId", type: "Edm.String", value: data.appId }]);
                    deferred.resolve(ApplicationRef.parseApplicationRef(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return ApplicationRefs;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.ApplicationRefs = ApplicationRefs;
    var DirectoryObjects = (function (_super) {
        __extends(DirectoryObjects, _super);
        function DirectoryObjects(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/directoryObjects' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return DirectoryObject.parseDirectoryObjects(context, pathFn, data.value);
            };
        }
        DirectoryObjects.prototype.getDirectoryObject = function (objectId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: objectId }]);
            var fetcher = new DirectoryObjectFetcher(this.context, path);
            return fetcher;
        };

        DirectoryObjects.prototype.getDirectoryObjects = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        DirectoryObjects.prototype.addDirectoryObject = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                    deferred.resolve(DirectoryObject.parseDirectoryObject(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        DirectoryObjects.prototype.asApplications = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/applications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Application.parseApplications(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Application()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asUsers = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/users' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return User.parseUsers(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.User()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asNotifications = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/notifications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Notification.parseNotifications(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Notification()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asCollaborationSpaces = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/collaborationSpaces' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return CollaborationSpace.parseCollaborationSpaces(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.CollaborationSpace()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asContacts = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/contacts' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Contact.parseContacts(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Contact()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asDevices = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/devices' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Device.parseDevices(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Device()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asDeviceConfigurations = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/deviceConfigurations' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return DeviceConfiguration.parseDeviceConfigurations(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.DeviceConfiguration()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asDirectoryLinkChanges = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/directoryLinkChanges' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return DirectoryLinkChange.parseDirectoryLinkChanges(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.DirectoryLinkChange()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asDirectAccessGrants = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/directAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return DirectAccessGrant.parseDirectAccessGrants(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.DirectAccessGrant()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asGroups = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/groups' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Group.parseGroups(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Group()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asRoles = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/roles' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Role.parseRoles(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.Role()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asRoleTemplates = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/roleTemplates' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return RoleTemplate.parseRoleTemplates(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.RoleTemplate()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asServicePrincipals = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/servicePrincipals' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return ServicePrincipal.parseServicePrincipals(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.ServicePrincipal()', parseCollectionFn);
        };
        DirectoryObjects.prototype.asTenantDetails = function () {
            var _this = this;
            var parseCollectionFn = (function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/tenantDetails' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return TenantDetail.parseTenantDetails(context, pathFn, data.value);
            }).bind(this);
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path + '/$/Microsoft.WindowsAzure.ActiveDirectory.TenantDetail()', parseCollectionFn);
        };
        return DirectoryObjects;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.DirectoryObjects = DirectoryObjects;
    var EnabledFeatures = (function (_super) {
        __extends(EnabledFeatures, _super);
        function EnabledFeatures(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/enabledFeatures' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "featureId", type: "Edm.String", value: data.featureId }]);
                };
                return EnabledFeature.parseEnabledFeatures(context, pathFn, data.value);
            };
        }
        EnabledFeatures.prototype.getEnabledFeature = function (featureId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "featureId", type: "Edm.String", value: featureId }]);
            var fetcher = new EnabledFeatureFetcher(this.context, path);
            return fetcher;
        };

        EnabledFeatures.prototype.getEnabledFeatures = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        EnabledFeatures.prototype.addEnabledFeature = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "featureId", type: "Edm.String", value: data.featureId }]);
                    deferred.resolve(EnabledFeature.parseEnabledFeature(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return EnabledFeatures;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.EnabledFeatures = EnabledFeatures;
    var LoginTenantBrandings = (function (_super) {
        __extends(LoginTenantBrandings, _super);
        function LoginTenantBrandings(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/loginTenantBranding' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "locale", type: "Edm.String", value: data.locale }]);
                };
                return LoginTenantBranding.parseLoginTenantBrandings(context, pathFn, data.value);
            };
        }
        LoginTenantBrandings.prototype.getLoginTenantBranding = function (locale) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "locale", type: "Edm.String", value: locale }]);
            var fetcher = new LoginTenantBrandingFetcher(this.context, path);
            return fetcher;
        };

        LoginTenantBrandings.prototype.getLoginTenantBrandings = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        LoginTenantBrandings.prototype.addLoginTenantBranding = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "locale", type: "Edm.String", value: data.locale }]);
                    deferred.resolve(LoginTenantBranding.parseLoginTenantBranding(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return LoginTenantBrandings;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.LoginTenantBrandings = LoginTenantBrandings;
    var ImpersonationAccessGrants = (function (_super) {
        __extends(ImpersonationAccessGrants, _super);
        function ImpersonationAccessGrants(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/impersonationAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return ImpersonationAccessGrant.parseImpersonationAccessGrants(context, pathFn, data.value);
            };
        }
        ImpersonationAccessGrants.prototype.getImpersonationAccessGrant = function (objectId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: objectId }]);
            var fetcher = new ImpersonationAccessGrantFetcher(this.context, path);
            return fetcher;
        };

        ImpersonationAccessGrants.prototype.getImpersonationAccessGrants = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        ImpersonationAccessGrants.prototype.addImpersonationAccessGrant = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                    deferred.resolve(ImpersonationAccessGrant.parseImpersonationAccessGrant(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return ImpersonationAccessGrants;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.ImpersonationAccessGrants = ImpersonationAccessGrants;
    var SubscribedSkus = (function (_super) {
        __extends(SubscribedSkus, _super);
        function SubscribedSkus(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/subscribedSkus' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return SubscribedSku.parseSubscribedSkus(context, pathFn, data.value);
            };
        }
        SubscribedSkus.prototype.getSubscribedSku = function (objectId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: objectId }]);
            var fetcher = new SubscribedSkuFetcher(this.context, path);
            return fetcher;
        };

        SubscribedSkus.prototype.getSubscribedSkus = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        SubscribedSkus.prototype.addSubscribedSku = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                    deferred.resolve(SubscribedSku.parseSubscribedSku(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return SubscribedSkus;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.SubscribedSkus = SubscribedSkus;
    var Notifications = (function (_super) {
        __extends(Notifications, _super);
        function Notifications(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/notifications' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return Notification.parseNotifications(context, pathFn, data.value);
            };
        }
        Notifications.prototype.getNotification = function (objectId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: objectId }]);
            var fetcher = new NotificationFetcher(this.context, path);
            return fetcher;
        };

        Notifications.prototype.getNotifications = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        Notifications.prototype.addNotification = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                    deferred.resolve(Notification.parseNotification(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return Notifications;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.Notifications = Notifications;
    var DirectAccessGrants = (function (_super) {
        __extends(DirectAccessGrants, _super);
        function DirectAccessGrants(context, path, entity) {
            var _this = this;
            _super.call(this, context, path, entity);

            this._parseCollectionFn = function (context, data) {
                var pathFn = function (data) {
                    return _this.context.serviceRootUri + '/directAccessGrants' + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                };
                return DirectAccessGrant.parseDirectAccessGrants(context, pathFn, data.value);
            };
        }
        DirectAccessGrants.prototype.getDirectAccessGrant = function (objectId) {
            var path = this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: objectId }]);
            var fetcher = new DirectAccessGrantFetcher(this.context, path);
            return fetcher;
        };

        DirectAccessGrants.prototype.getDirectAccessGrants = function () {
            return new AadGraph.Extensions.CollectionQuery(this.context, this.path, this._parseCollectionFn);
        };

        DirectAccessGrants.prototype.addDirectAccessGrant = function (item) {
            var _this = this;
            var deferred = new Microsoft.Utility.Deferred();

            if (this.entity == null) {
                var request = new AadGraph.Extensions.Request(this.path);

                request.method = 'POST';
                request.data = JSON.stringify(item.getRequestBody());

                this.context.request(request).then((function (data) {
                    var parsedData = JSON.parse(data), objectPath = _this.path + Microsoft.Utility.EncodingHelpers.getKeyExpression([{ name: "objectId", type: "Edm.String", value: data.objectId }]);
                    deferred.resolve(DirectAccessGrant.parseDirectAccessGrant(_this.context, objectPath, parsedData));
                }).bind(this), deferred.reject.bind(deferred));
            } else {
                //UNDONE this.context.AddLink(_entity, _path, item);
            }

            return deferred;
        };
        return DirectAccessGrants;
    })(AadGraph.Extensions.QueryableSet);
    AadGraph.DirectAccessGrants = DirectAccessGrants;
})(AadGraph || (AadGraph = {}));
//# sourceMappingURL=aadgraph.js.map
